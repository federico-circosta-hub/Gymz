%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: Adobe Illustrator Artwork
%%Creator: Adobe Illustrator(R) 24.2
%%For:  
%%CreationDate: 12/17/2021
%%BoundingBox: 0 0 3170 1263
%%HiResBoundingBox: 0 0 3170 1262.3121
%%CropBox: 0 0 3170 1262.3121
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 24.2.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 24.2.0 x490 R agm 4.7767 ct 5.4352%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 52 8%%BeginData: 15208 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FFCAFFCAFFCAFFCAFFCAFFCACFCAFFCAFFCAFFCAFFCAFFCAFFCAFF
%CAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFF
%CAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFF
%CAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCACACAFF
%CAFFCAFFCAFFCAFFCAFFCACACFCACACACFCACACACFFD07CACFCACACACFCA
%CACACFCACACACFCACACACFCACACACFCACACACFCACACACFCACACACFCACACA
%CFCACACACFCACACACFCACACACFCACACACFCACACACFCACACACFCACACACFCA
%CACACFCACACACFCACACACFCACACACFCACACACFCACACACFCACACACFCACACA
%CFCACACACFCACACACFCACACACFCACACFCAFFCACFCAFFCACFCAFFCACACAFF
%CACFCAFFCACFCAFFCACFCAFFCACFCAFFCACFCAFFCACFCAFFCACFCAFFCACF
%CAFFCACFCAFFCACFCAFFCACFCAFFCACFCAFFCACFCAFFCACFCAFFCACFCAFF
%CACFCAFFCACFCAFFCACFCAFFCACFCAFFCACFCAFFCACFCAFFCACFCAFFCACF
%CAFFCACFCAFFCACFCACFCAFFCAFFCACFCAFFCACFCAFFFD04CACFCACACACF
%CACACACFCACACACFCACACACFCACACACFCACACACFCACACACFCACACACFCACA
%CACFCACACACFCACACACFCACACACFCACACACFCACACACFFD07CACFCACACACF
%CACACACFCACACACFCACACACFCACACACFCACACACFCACACACFCACACACFCACA
%CACFCACACACFCACACACFCACAC9FD04CACFCACACACFCACACACFFFCAFFCAFF
%CAFFCAFFCAFFCACAC9CFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFF
%CAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCACFC9CA
%CAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFF
%CAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCACACACFCAFFCAFFCAFFCAFF
%CAFFFD04CACFCACACACFFD04CAC9CAC9FD04CACFCACACACFCACACACFCACA
%CACFCACACACFCACACACFCACACACFCACACACFCACACACFCACACACFCACACACF
%CACAC9CAC9CACACFCACACACFCACACACFCACACACFCACACACFCACACACFCACA
%CACFCACACACFCACACACFCACACACFCACACACFCACACACFC9CAC9CAC9CACACF
%CACACACFCACACACFFFCACFCAFFCACFCAFFCAFFCAFFCAFFCAFFCACFCAFFCA
%CFCAFFCACFCAFFCACFCAFFCACFCAFFCACFCAFFCACFCAFFCACFCAFFCACFCA
%FFCACFCAFFCACFCAFFCAFFCAFFCACFCAFFCACFCAFFCACFCAFFCACFCAFFCA
%CFCAFFCACFCAFFCACFCAFFCACFCAFFCACFCAFFCACFCAFFCACFCAFFCACFCA
%FFCAFFCAFFCACFCAFFCACFCAFFCACFCACACFCACACACFCACACACFCACACACF
%CACACACFCACACACFCACACACFCACACACFCACACACFCACACACFCACACACFCACA
%CACFCACACACFCACACACFCACACACFCACACACFCACACACFCACACACFCACACACF
%CACACACFCACACACFCACACACFCACACACFCACACACFCACACACFCACACACFCACA
%CACFCACACACFCACACACFCACACACFCACACACFCACACACFCACAFFCAFFCAFFCA
%FFCAFFCAFFCAFFCAFFCAFFCAFFCACFCACACACFCACACACFCACACACFCACACA
%CFCACACACFCACACACFCACACACFCACFCAFFCAFFCAFFCAFFCAFFCAFFCAFFFD
%1FCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCA
%FFCAFFCACACFCACACACFCACACACFCACACACFCACACACFCACAA1C9A1C3A1C9
%A1C3A1C9A1C3A1C9A1C9A1C9A1C3A1C9A1C3A1C9A1C3A1C9A1CACACFCACA
%CACFCACACACFFD04CAA1C3A1C9A1C3A1C9A1C3A1C9A1C3A1C9A1C3A1C9A1
%C3A1C9A1C3A1C9A1C3A1CFCACACACFCACACACFCACACACFCACACACFCACACA
%CFCACACACFCACACACFCACACFCAFFCACFCAFFCACFCAFFCACFCAFFCACFCAFF
%C9C9A1CACACAC9CACACAC9CACACAC9CAC3CAC3CAC9CAC3CAC9CAC3CAC9CA
%A1CACAFFCAFFCAFFCAFFCAFFCAFFCAFFA1CAC9CAC9CACACAC9CACACAC9CA
%CACAA1CAC9CAC3CAC9CAC3CAC9CAC3CAC3CACAFFCACFCAFFCACFCAFFCACF
%CAFFCACFCAFFCACFCAFFCACFCAFFCACFCAFFFD04CACFCACACACFCACACACF
%CACACACFFD04CAA1CACACFCACACACFCACACACFCACFA1FD04CACFCACACACF
%CACACACFCAC3A1FD04CACFCAA87DA8A8CACACFCACAA1FD04CACFCACACACF
%CACACAFFC9CACACFCACACACFCACACACFCACAA8C9A1CACACFCACACACFCACA
%CACFCACACACFCACACACFCACACACFCACACACFCACACACFFFCAFFCAFFCAFFCA
%FFCAFFCAFFCAFFCAFFCAFFC9CACAFFCAFFCAFFCAFFCAFFCAFFCACAC9FFCA
%FFCAFFCAFFCAFFCAFFCACAA1CACAFFCAFFCAA884AF84A8CAFFCAFFC9CACA
%FFCAFFCAFFCAFFCAFFCAFFCACAC3FFCAFFCAFFCAFFCAFFCAFFCAFFC3CACA
%FFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFFD
%04CACFCACACACFCACACACFCACACACFFD04CAA1CACACFCACACACFCACACACF
%CACFA1FD04CACFCACACACFCACACAFFCAC9A1CFFD04CA84A884AE84CACACF
%CACAA1FD04CACFCACACACFCACACAFFCACACACFCACACACFCACACACFFD04CA
%A1CACACFCACACACFCACACACFCACACACFCACACACFCACACACFCACACACFCACA
%CACFFFCACFCAFFCACFCAFFCACFCAFFCACFCAFFCAFFC3CACAFFCAFFCACFCA
%FFCACFCAFFCACAA1FFCACFCAFFCACFCAFFCACFCACFC3CACAFFCAFFCAA8A8
%AEA8A8CAFFCAFFC9C9CAFFCACFCAFFCACFCAFFCACFCACAC9FFCAFFCACFCA
%FFCACFCAFFCACAA1CACAFFCAFFCACFCAFFCACFCAFFCACFCAFFCACFCAFFCA
%CFCAFFCACFCAFFCACFCACACFCACACACFCACACACFCACACACFCACACACFCACA
%A1FD04CACFCACACACFCACACACFA1C9CACFCACACACFCACACACFCACAA7C9A1
%CACACFCACAA7A88484A7CFFD04CAA1CACACFCACACACFCACACACFCACAA1FD
%04CACFCACACACFCACACACFCAC9A1FD04CACFCACACACFCACACACFCACACACF
%CACACACFCACACACFCACACACFCACAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCA
%FFCAFFC9CACAFFCAFFCAFFCAFFCAFFCAFFCACAC3FFCAFFCAFFCAFFCAFFCA
%FFCACFC3CACAFFCAFFCAFFA8CAA8FFCAFFCAFFCAC9CAFFCAFFCAFFCAFFCA
%FFCAFFCACAC9FFCAFFCAFFCAFFCAFFCAFFCACFA1CACAFFCAFFCAFFCAFFCA
%FFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCACACFCACACACFCACA
%CACFCACACACFCACACACFCACAA1FD04CACFCACACACFCACACAFFC9CACACFCA
%CACACFCACACACFCACACAC9A1CACACFCACACACFCACACACFFD04CAA1CACACF
%CACACACFCACACACFCACFA7FD04CACFCACACACFCACACACFCAC9A1FD04CACF
%CACACACFCACACACFCACACACFCACACACFCACACACFCACACACFCACACFCAFFCA
%CFCAFFCACFCAFFCACFCAFFCACFCAFFC9C9CAFFCACFCAFFCACFCAFFCACFCA
%CAC9FFCAFFCACFCAFFCACFCAFFCACAA1CACAFFCAFFCACFCAFFCACFCAFFCA
%FFC3CACAFFCAFFCACFCAFFCACFCAFFCACAA1FFCACFCAFFCACFCAFFCACFCA
%CFC3CACAFFCACFCAFFCACFCAFFCACFCAFFCAFFCAFFCACFCAFFCACFCAFFCA
%CFCAFFFD04CACFCACACACFCACACACFCACACACFFD04CAA1CACACFCACACACF
%CACACACFCACAA1FD04CACFCACACACFCACACACFCAC3A1FD04CACFCACACACF
%CACACACFCACAA1FD04CACFCACACACFCACACACFA7CACAFFCACACACFCACACA
%CFCACAA8C9A1CACACFCACACACFCACACACFCACACACFCACACACFCACACACFCA
%CACACFCACACACFFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFC9CACAFF
%CAFFCAFFCAFFCAFFCAFFCACAC9FFCAFFCAFFCAFFCAFFCAFFCACAA1CACAFF
%CAFFCAFFCAFFCAFFCAFFCAFFC9CACAFFCAFFCAFFCAFFCAFFC8C9CACAC9C9
%C9CACAFFCAFFCAFFCAFFCAFFC3CACAFFCAFFCAFFCAFFCAFFCAFFCAFFCAA0
%99C9CAFFCAFFCAFFCAFFCAFFCAFFFD04CACFCACACACFCACACACFCACACACF
%FD04CAA1CAC9FD04CACFCACACACFCACFA1FD04CACFCACACACFCACACAFFCA
%C9A1CFCACACACFCACACACFCACACACFCACAA1FD04CACFCACACAFFC9C7C2CA
%C9C9C1C8C1C8C2CFCACAC9FD05CAA1CACACFCACACACFCACACACFCACACAFF
%A7A099C2C3CFCACFCACACACFCACACACFFFCACFCAFFCACFCAFFCACFCAFFCA
%CFCAFFCAFFC3CAC9CAC9FFCACFCAFFCACFCAFFCACAA1FFCACFCAFFCACFCA
%FFCACFCACFC3CACAFFCACFCAFFCACFCAFFCACFCAFFC9C9CAFFCAFFCAFFCA
%FFC9C8C7C9CACAA0C2C2C8C8CACAFFCACAC9CACACAA1CACAFFCAFFCACFCA
%FFCACFCAFFCACFCAFF5276BCC2C9FFCAFFCACFCAFFCACFCACACFCACACACF
%CACACAFFCACACACFCACACACFCACAA1CAC9CACACFCACACACFCACACACFA1C9
%CACFCACAC3CAC9CAC9CFCACAA7C9A1CACACFCACACACFCACACACFFD04CAA1
%CAC9FD04CACFCAC89FC2A1CA7D2E76C9CACFFD04CAC9CAC9CFCAC9A1FD04
%CACFCACACACFCACACACFCAFF52F827C299C3CACACACFCACACACFCACAFFCA
%FFCAFFCAFFCAFFA1CACAFFCAFFCAFFCAFFC9CACACAC9FFCACFCAFFCAFFCA
%FFCACAC3FFCAFFFD04CAC9CFCAFFCACFC3CACAFFCAFFCAFFCAFFCAFFCAFF
%CAFFCACAC9CAC9CAC9CFCAFFC9C89A2F59590C2F7DFFCACACACFCACAC9CA
%CACFA1CACAFFCAFFCAFFCAFFCAFFCAFFCAFFCACA75A0C2C2C2FFCAFFCAFF
%CAFFCAFFCACACFCACACACFCACF522121A1CACFCACAA7A8A8A8A1CAC9CACA
%CAC9CAC9FD04CAFFC9CACACFCACAC9CAC9CAC9CFCACFCAC9A1CACACFCACA
%CACFCACACACFFD04CAA1CAC9CAC9CAC9CACACA7C2E2E520C2F0CA8CACAC9
%CAC3CAC9CAC9CFCAC9A1FD04CACFCACACACFCACACACFCACFA8A19AC299C3
%CACACACFCACACACFCACACFCAFFCACFCAFFCA5221757CFFCAFFCA8484A884
%CAC9CACAFFCACAC9CAC9CFCACFCACAC9FFCAFFCACAC9CAC9CACAFFCACAA1
%FD04CAFFCACFCAFFCACFCAFFCAFFC3CAC9CAC9CACACAC9CACAA82E592E2F
%0C84CAFFFD04CAC9CAC9CACACFC3CACAFFCACFCAFFCAFFCAFFCACFCAFFC9
%764C4D76C2C9FFCAFFCAFFCACFCAFFFD04CACFCACACAFF524B75C9C9CACA
%CF7D8483A8A1CAC3CACACAC3CAC9CAA7CACACFA1CACACAC9CAC9CAC9CAC9
%CA77A2C9C3A1CA77A1CACFCACACACFCACACACFCACAA1CAC9CAC3CAC9CAC3
%CAC9A72E2F0C2E7DFFCACAC9CAC9CAC3CAC9CAA8C9A1CACACFCACACACFCA
%CACACFCACFA1C26F28214C4CCACACFCACACACFCACACACFFFCAFFCAFFCAFF
%C9C8C7C9C8C9C9FFC9A07CAF84CAC9CACAFFFD05CAA277FFCACAC9CFC9CA
%C9CAA1CAC9CAC3A277CAC3CACAA24DA8CFFFCAFFCAFFCAFFCAFFC9CAC9CA
%C9CACACAC9CACACA7D2F2E352E59CACFCACAC9CAC9FD04CAFFC3CACAFFCA
%FFCAFFCAA2A1FFCFFFCAC9C29A224C4C4CA8FFCFA2A1FFCAFFCAFFFD04CA
%A14BC3C3C8C1C8C1C8C8C8BC9A4B7D83A8A1CAC9CACACAC3CAC9CA7777A1
%A26F9AA1A17627F8A19B7575A17777C9C9A1FF77774DFD04CACFCACACACF
%CACAA1CAC9CAC9CAC9CAC9CAC92F0C2F2E2E52CAC9C975A0C9CAC9CAC9CA
%CACAA1CACACFCACACACF77777DA2A2A8A0C2764C224C46A2A1A277A1CACF
%CACACACFFFCAFFA1A09AC2BBC8C8C8C1C8C2C2C3CA7D84A1CAC9CAC9CACA
%CAC9CACAA24DCACAA199CFCACA4B76CACA99C9CAA277CAC3CACA7777A277
%FFCACFCAFFCACFCAFFC9C9C3CACACAC9CACACAC9CA2E2F0C592E7DC9CAC2
%C2C3CACACAC9CACACAA1CACFFFCAFFCAFFCAA2777777CAA2CAC29A4C4C28
%2F7DA177A27DFFCAFFCACFCACACFFD04CAC3C3A1C8C1C8C1C9A177717753
%7777CAC9CAC3CAC9CAC3CAA7A2A8FFC3BCA1A87DA076A8A0C2A0CAA1CAC3
%C9A1CF4C7DCACACACFCACACACFFD04CAA1C9C3CAC9CAC3CAC9CAA12F0C2F
%2E58A1CFA0C2C2CAC3CAC9CAC9CFCAC9A05252A8CACFCACF7DA2A1A2CACF
%CACAA0FD042E7DA1A177A2CACACACFCACAFFCAFFA8FFCAFFCACFC7C8C7C8
%CAFF77714C4C4C77CACAC9CACACAC9CACACFCAFFCAC99A350C2F52590C2F
%9AC9CACAC9CAC3CACA7777FFCAFFCAFFCAFFCACFCAFFCACAC9CACACAC9CA
%CACAC9CA58352E534C77A8CABCFD05CAC9CACACFC3C926F8A8FFCAFFCAFF
%CAA8A1FFCFFFFFCA2E592E352EA1A1FFCAFFCAFFCAFFCACACFCACAA8CFCA
%CFA7A19AA177CACA77FD044C77A176CAC9CAC9CAC9CAC9CAC9CA7676062F
%2E2E0C2F0C7CC9CAC9CAC9CAA1CF4C7DCACACACFCAA859A74B277D847DCA
%C9CAC9CAC9CAC9CAC97D284C464C224CA8CAC9CAC9CAC9CAC9CFCAC9A19A
%75CACACFCACACAFFA17DA1A2A1A27D2F2E580C2F2EA2CACFCACACACFCACA
%CFCAFFA8CACAFFCACA777877A2A2FF77774D777777A1A1CACAC9CACACAC9
%CAC9CAA177A17D2E352E2F2F7DA7CAC9CACACAA1CACA7777FFCAFFCA8435
%35769A6F5213357DCAC9CACACAC9CACACA76FD054C2277FD04CAC9CAC9CA
%CAFFA1A199C3CAFFCAFFCACACAA8A1CAA8CACAA82E2F522F0C2FA1FFCAFF
%CACFCAFFFD04CAA8A8CACACFA17777A277A2A8FD0677C976CAC9CAC3CAC9
%CAC3CAC9CA76CAC97D062F0C2FA1CAC9CAC3CAC9C9A1CF4C77CACFCAA80C
%59357D99C37D5F3535A7CAC3CAC9CAC3CAC9A1214C224C2177C9CAC3CAC3
%A099C3C9CFA177779B7777A1CFCAC299A1A1A2CACACACFA82E0C582E2E06
%7DCACACACFCACACACFFFCAFFA8CACAFFCFCA77A277A277FF77A277A277A1
%A1A1CACAC9CACACAC9CACACAC3A1C9CF7D59587C7CFD04C9CACACAA1CACA
%7777FFCAFFA85F35353583595F353B59CAC9CACACAC9FD04CA774C4C4C77
%CACAC9CACACAC3C3BCC3C3A277A277A27778A1C3BCC3CACAA2FFCAFFCACA
%2E352E590C352FCACAFFCAFFCAFFFD05CAA1CFCAFFA27777A27777A8FD06
%77A176A19BA177A19BA177A19BA177C9A1C9A0C8C1C8C1C8C1C8A1CAA1C3
%A1FF7677A2CAA8CAA85FFD063534A7C3C9A1CAA1C9A1CAA1C94C4C289A99
%C9A1C9A1C9A1C9A1C2BBBC9AA17777777877BC99C9CAFFA1A2CACACAFFA1
%2E0C2F2E2F0C2F59CFCACFCACACACFFFCAFFCACACAFFCFCA779C77A277CA
%7778779C77A2A8A1FD0ACAA8A1CACAC9C8C7C8C8C8C1C8C8FD04CACFCA77
%4C9B9AC2A1A2A1603535355F59A8FD0BCA4C224C707576CFFD07CAC3BCC2
%77A2777877C2BCC3CAFFCAA8A1FFCACFCAA82E2F0C842F2F0C2FA8FFCAFF
%CACFCACACFCACFA1CAA8A2FD0677A27771FD0477CA7DCFCACFCACACACFFD
%04CA7DCFCAC9A0C29FC8A0C2C1C8CACACACFCACF524DC1C19EC799770D35
%353559FD04CAFFCACFCACFCACACAFF774D22772176CACFCACACACFCACFCA
%CAA17D777777A2C9FD04CAFFA1A2CACFCACF7D2F0C2E7DA80C2E0659CACA
%CACFCACAFD05A8A1A14CA277A277A27DA8FD05777EA87DFD09A8AEA87DA8
%AFA7C8C2C8C8C9C2C8C8FD06A8774CC7C1C8C8C8C2A75935355970774C77
%777D7DAEFD05A8FFCAFFFD0CA85F6035FD04598484FD04A87D77FD04A884
%0C2F0C84A82F2E7D7DFD06A87DA883A82750C24C77A277777DA8837D52FD
%047D8453847DA883847DA88384838477A87DA8A0C8C1C8A0C2C1C883847D
%A87D8459779FC8C1C8C1C8C1C87C59527752775277527D83A883847D84A0
%BCA1A884A87DA883847DA87D595960FD0635596035847D847D7D7D847D84
%5953525359A8597D779C7D847DA88384A884A8A87D75A04CFD0477A284A8
%7D8484A884A87D7D84A884A884A884A884A87DFF83A7A0C9C2C8C2C9C2C8
%C2A884A884A884A884C8C8C89FC8C8C8C1C8C8A884AEA8A884AEA8A884A8
%84A884A7BCA884A884A884A884A8845F35593560595935605960353535A8
%84AEA8A884A884A2779BA1A884A877A278A884A884A88483A87DA87D5126
%52FD044C53A87D7D83A87DA8838453A883A87DA883A87DA87DFF5959C1C8
%9FC8C1C8A0C8C1C87DA883A87D7E77A0C1C8C1A099C8C1C8C1C8777777A8
%83A877534C524C534C769AC24C534C534C777D7D4C522E35353534592727
%FD06354C4C4CA8534C53A277A277774C5377A277534C534C7D83A8A884A8
%84A84B7C7D7E7DC9755258A884A883A884A877777DA884A884A884A8A8FF
%606059C8C7C8C7C8C1A7353535847DA884A877A1C7C8C8C8C1C8A1C3A0C8
%A19C77A284A8847D464C464C4C4C4B9A704C22FD044CA8534C4C532F5935
%3B7D4B20A7355935594C4C4677847722FD04777E4D4C4CA24DFD054C77AE
%8483A87DA884527C8483524A9F4A4A7C847D837D847D7D598484A87DA883
%A87DA884597D837DA7A0A7A0A759FD05847D842F597DC8C1C89F5258A87E
%A87DA883A87DA883A883847D7E7D847D7E7D7E7D7E7D847D8483A87D847D
%A87D847D762027758483847DA87D847DA884847D847D847DA87D847DA87D
%847DA87DA87DA8A884A884A884A883A87D58527D527D7DA884A883A884A8
%84A884A884A884A883A884A883A884847E8484A8A8AEFD05A8AF592F2EC8
%C1590D5984A884A884A884A884A884A884A884A884A884A884A884A884A8
%84A884A884A884A884A85227277684A884A884A884A884A884A884A884A8
%84A884A884A884A884A884A8847DA883A87DA883A87DA884A884A884A87D
%A883A87DA883A87DA883A87DA883A87DA883A87DA883A87DA883847DA87D
%847DA884AF7E3559A884A984847DA883A87DA883A87DA883A87DA883A87D
%A883A87DA883A87DA883A87DA883A87DA883A8587D7DA87DA883A87DA883
%A87DA883A87DA883A87DA883A87DA883A87DA883A8A884A884A884A884A8
%84A884A884A884A884A884A884A884A884A884A884A884A884A884A884A8
%84A884A884A884A884A884A884FFA8A884A884A884A884A884A884A884A8
%84A884A884A884A884A884A884A884A884A884A884A884A884A884AEA8A8
%84A884A884A884A884A884A884A884A884A884A884A884A884A884A8847D
%A883A87DA883A87DA883A87DA883A87DA883A87DA883A87DA883A87DA883
%A87DA883A87DA883A87DA883A87DA883A87DA883A87DA883A87DA883A87D
%A883A87DA883A87DA883A87DA883A87DA883A87DA883A87DA883A87DA883
%A87DA883A87DA883A87DA883A87DA883A87DA883A87DA883A87DA883A87D
%A883A87DA883A8A884A884A884A884A884A884A884A884A884A884A884A8
%84A884A884A884A884A884A884A884A884A884A884A884A884A884A884A8
%84A884A884A884A884A884A884A884A884A884A884A884A884A884A884A8
%84A884A884A884A884A884A884A884A884A884A884A884A884A884A884A8
%84A884A884A884A884A884A884A884FFFFA8FFFFFFA8FFFFFFA8FFFFFFA8
%FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFF
%FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8
%FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFF
%FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FF
%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 7.2-c000 79.1b65a79, 2022/06/13-17:46:14        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
    xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
    xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
    xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
    xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
    xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
    xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
   dc:format="application/postscript"
   xmp:CreatorTool="Adobe Illustrator 24.2 (Windows)"
   xmp:CreateDate="2021-12-17T18:16:56+03:00"
   xmp:ModifyDate="2021-12-17T18:16:56+03:00"
   xmp:MetadataDate="2021-12-17T18:16:56+03:00"
   xmpMM:OriginalDocumentID="uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7"
   xmpMM:DocumentID="xmp.did:becd1e71-2209-ed42-b199-515ad068438f"
   xmpMM:InstanceID="xmp.iid:becd1e71-2209-ed42-b199-515ad068438f"
   xmpMM:RenditionClass="proof:pdf"
   illustrator:StartupProfile="Basic RGB"
   illustrator:CreatorSubTool="Adobe Illustrator"
   xmpTPg:NPages="1"
   xmpTPg:HasVisibleTransparency="False"
   xmpTPg:HasVisibleOverprint="False"
   pdf:Producer="Adobe PDF library 15.00">
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default">Gym interior with people doing sport exercises</rdf:li>
    </rdf:Alt>
   </dc:title>
   <dc:description>
    <rdf:Alt>
     <rdf:li xml:lang="x-default">Gym interior with people doing sport exercises, yoga, breakdance and fitness. Concept of healthy lifestyle, different activities and workout. Vector flat illustration of with men and women training</rdf:li>
    </rdf:Alt>
   </dc:description>
   <dc:subject>
    <rdf:Bag>
     <rdf:li>people</rdf:li>
     <rdf:li>sport</rdf:li>
     <rdf:li>gym</rdf:li>
     <rdf:li>exercise</rdf:li>
     <rdf:li>man</rdf:li>
     <rdf:li>training</rdf:li>
     <rdf:li>woman</rdf:li>
     <rdf:li>flat</rdf:li>
     <rdf:li>vector</rdf:li>
     <rdf:li>yoga</rdf:li>
     <rdf:li>workout</rdf:li>
     <rdf:li>healthy</rdf:li>
     <rdf:li>health</rdf:li>
     <rdf:li>girl</rdf:li>
     <rdf:li>isolated</rdf:li>
     <rdf:li>athlete</rdf:li>
     <rdf:li>character</rdf:li>
     <rdf:li>female</rdf:li>
     <rdf:li>design</rdf:li>
     <rdf:li>set</rdf:li>
     <rdf:li>fit</rdf:li>
     <rdf:li>active</rdf:li>
     <rdf:li>body</rdf:li>
     <rdf:li>person</rdf:li>
     <rdf:li>fitness</rdf:li>
     <rdf:li>physical</rdf:li>
     <rdf:li>lifestyle</rdf:li>
     <rdf:li>illustration</rdf:li>
     <rdf:li>rope</rdf:li>
     <rdf:li>jumping</rdf:li>
     <rdf:li>weight</rdf:li>
     <rdf:li>background</rdf:li>
     <rdf:li>concept</rdf:li>
     <rdf:li>activity</rdf:li>
     <rdf:li>graphic</rdf:li>
     <rdf:li>collection</rdf:li>
     <rdf:li>cartoon</rdf:li>
     <rdf:li>equipment</rdf:li>
     <rdf:li>player</rdf:li>
     <rdf:li>wellness</rdf:li>
     <rdf:li>interior</rdf:li>
     <rdf:li>muscle</rdf:li>
     <rdf:li>gymnastics</rdf:li>
     <rdf:li>dumbbell</rdf:li>
     <rdf:li>cardio</rdf:li>
     <rdf:li>treadmill</rdf:li>
     <rdf:li>stretching</rdf:li>
     <rdf:li>breakdance</rdf:li>
     <rdf:li>lifting</rdf:li>
     <rdf:li>meditation</rdf:li>
    </rdf:Bag>
   </dc:subject>
   <xmp:Thumbnails>
    <rdf:Alt>
     <rdf:li
      xmpGImg:width="256"
      xmpGImg:height="104"
      xmpGImg:format="JPEG"
      xmpGImg:image="/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAaAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9E5iu0dirsVWREEvT+Y5&#xA;GLKXRfkmLsVdirsVdirsVdirsVdirsVdiq2X+7b5HAeSY81ykFQR4YhBdhV2KuxV2KuxV2KuxV2K&#xA;uxV2KuxVZIR6kfzP6jkTzDKPIr8kxdirsVdirsVWuhZaB+HuBX+IwEWkGlKO09NuSyn3+H+3ICFd&#xA;Wcsl9FfLGt2KuxV2KuxV2KuxV2KuxV2KuxVTmgMvWQqv8oX+3ISjbKM66OhhMQp6hZfAin8cYxpZ&#xA;TvoqZNi7FXYq7FXYq7FXYq7FXYq7FXYqoPac25NKa/6v9uVmF9WwZa6KyKVUAtyPjSn8TkwGsm28&#xA;KuxV2KuxV2KuxVRvZXitZZE2ZVqDgKYCylNqNXuYvUjn+GtNzTp9GQFlvlwDorfVNb/3+P8Agv7M&#xA;NFHFDud9U1v/AH+P+C/sxorxQ7lG5XV7dVZ59mYIKHufowG0x4D0VPq2u/79/wCGGGijig76trv+&#xA;/f8AhhjRXig76trv+/f+GGNFeKDVjdXy6iLeeTl1DA79ATtgBNrOMeGwnOWNCHl1Cyik9OSZVfuK&#xA;9Pn4YREtUs0AaJRAIIqNwehwNiT6nc3f15LeGQoDxC0NN28crkd3IxxHDZd9R1r/AJaP+HP9MNFe&#xA;OHc76jrX/LR/w5/pjRXjh3O+o61/y0f8Of6Y0V44dylFHq8ryKkxJibi3xnrg3ZEwHRU+p63/v0/&#xA;8HjRY8UHfU9b/wB+n/g8aK8UFK4j1eCIyyTNxFK0evXbE2yiYE1SaaZNJNZo8hq24J8aGmSidmnI&#xA;KKKyTB2KuxV2KuxV2KuxV2KuxV2KuxVDal/vDN/q5GXJlj+oKGhf7xH/AFz+oYx5M83NMMk1OxVA&#xA;ax/cwf8AGZf1HIybMXM+5H5JrdirsVSSL/jvn/Wb/iByvq5B+hOzWhp17ZY4zHoWVYgkjrGVJ+sK&#xA;32i1d618cyw6CQIO/NNtJV1sIwwI+0UB6hSx4/hmNPm7jTAiAtL77/jtQ/60f68pPN2EPoKd5Y47&#xA;sVdiqC0/+/vP+MpyIbJ8gjck1uxVBaz/AMc9/mv6xkZcmzF9TtG/456fNv14x5Ll+pG5JrdirsVd&#xA;irsVdirsVdirsVdirsVQ2pf7wzf6uRlyZY/qChoX+8R/1z+oYx5M83NMMk1OxVAax/cwf8Zl/Ucj&#xA;Jsxcz7kfkmt2KuxVJIv+O+f9Zv8AiByvq5B+hO8scdY0ELMHaNWcdGIBP342xMQd6X4skkvv+O1D&#xA;/rR/rys83Ih9BTvLHHdirsCoLT/7+8/4ynAGyfII3JNbsVQWs/8AHPf5r+sZGXJsxfU7Rv8Ajnp8&#xA;2/XjHkuX6kbkmt2KuxV1Rv7dcVdirsVdirsVdirsVdiqG1L/AHhm/wBXIy5Msf1BL9LuHjteK0oW&#xA;J3yriIciUASnOXuK7FUBrH9zB/xmX9RyMmzFzPuR+Sa1L61B/N+B/pkOMM/DkqqwYAjoemSDAikk&#xA;i/475/1m/wCIHIdXIP0J3ljjuxV2KpJfkDWoSdgGjqfpys83Ih9Cc+rF/Ov3jJcQaOE9y24uI4IW&#xA;mf7Kiu3fwyvNmjjgZHkEwgZGgx+21KO6vpHaVQ5PpiOtDXc8QD7Kc0+jlkyZZZJcqdjlxjHEDvSP&#xA;/GFpca3PpemzGW7jm9N0Q8anYNx3+KnT2zL12lz3GQsRrp3tOj1GDKZR4hxR6MxsI9VVx9ZcekP2&#xA;TQk/SMGjx6kS/eH0teaWIj0jdXuLl45OKgEUrvmwlMgtcMYIQ+puX0tmPUlen+thuwmAqdL9G/45&#xA;6fNv14Y8mOX6kbkmt2KuIBBB6HY4FeJW/nbQLLz/AKj5b8tT3qzRtczXTTVFuJ4JVjmjhaQl5f3j&#xA;NyrUAg02zDz4pQHHEuy0mohlPhzHPkfveteXtXOp2HrOoWZG4SgdKgA1Hzrl2DLxxvq42r0/hToc&#xA;kzy9xnYq7FXYq+ffLHnH8ztV88TF7+X9HrqgjWxdPTgMSyPyUP6bHgIomGzVrQmu+XajJjhQAHLc&#xA;9zdDFcSX0ECCKjcHocoBtpYv+mry6gPNlRJBugC7A+5YHMjwhTqo66YN7Iuw/wB5x8zmBJ6EG0zu&#xA;ppEkAVqClfxOTnIgtOOII3WxXapye4lVIxQcnIUVJAG5p1JphxkkrkiANlmsf3MH/GZf1HJSY4uZ&#xA;9yMaaJTQsAR1GJkGAgSluY7loiTVdOtFto7m4SJ7hhFEGNKvStK9B9OZOMEjbo40om0vWVI9aeVj&#xA;8C82J9ghOQjvJtI9CO0fXdM1i3aewmEqxtwlXoyNStGU9MvyY5QNFxyKR+QV2KpDqn/HVT/Yfryq&#xA;blYvpROVMlZrktF6borIRQg16YZESjwkWGAx0bBeF/mBbavpnmeW7uX426MZtKMbFRViSvvyQirf&#xA;L3GbLQ4sccYhAc+fu/Gw+fe832xmzHNxZD6Y/RX459T8u5b+Uvl8ap5st7iaX04rKtyoDcXkeMrR&#xA;Voa0BcFvbbvmbqsvDEgc3A7M0/HlEjyG/wAnvN27iWgYgUHQ5o5nd7HEBSHJJNSan3yttpdqH/HJ&#xA;PzH/ABLLh9LVH61XRv8Ajnp82/Xko8mGX6kbkmt2KobUtRt9PtHuZyeC7BR1Zj0AyvJkEBZbMOGW&#xA;SXCHzxqH5lab/i2/nk01bVZbl4pXSjBEUlWloVLerIftlSBTsSSTkz7NOTHxRPqMRt9rm4cwxT4T&#xA;yBe0/l49tc6Auo20omt712aJ1rQrGTGetP2lOYWDBLGCJCiw7QzxyTHDyAZPmQ4LsVQetm+GjXxs&#xA;JVgvhby/VZmAZUl4HgxBDA0bfpio82Lw6h5+sbP0tahhuH5MpubMMQUqQrdF4sV6jj8j3zXao5uE&#xA;gders8GLBPe6l3f2qwLBR1XmqsVIIO4BoRnM5IShIxLk7IbWdT1a3tpZI53sNNREE17xqqs9Eqnw&#xA;uftt+yOub3s/HmmKjyPy82qsMRc95fb+PexLy/rWk6T9ZtpNZa9MhSeS6ZHQvIy+m1ECAhaRLTb2&#xA;7Z02PTTjGubzepwzyzsREfxz/AehaNdQXWnxXFu/qQyVKPuKivgd81mSJjKjzdyExnl9Vw1KUFME&#xA;pWxhGgxP8xbS8uNAQ2qNI0FzHLIEFSE4utaf6zDMzs+QEzfciaI86J5ttrazuYdUgCLcKJ4hbcVI&#xA;KN9nk8jbEV+1mLqcgiAQGeix8ciPJKPPl75kOg3TeW/Mdt+mpPTW3DLbhKF1WVgG5tVELN+0dtgT&#xA;tk5EC5cO3xaBK6hGQEyaS/Sb7zNJ5Ht5rnzN63mKUSE8FtPTYNO3FvTWIuAIiOhHbplOTJwxvh+9&#xA;ydPASnwcQMkx1jQNevtL0hvr0t/choWnqsKRhioLSgKisBVa0LHMvRZ4xBvqEZY1Ku5l1r/x2l+n&#xA;/k2cogwyfS868ixeYP0vqOsaanOCDVrnTbu2SgDwxMrIzj/JWSikdKb5uM0oGIjLnw20GnsWaxg7&#xA;FUh1T/jqp/sP15VNysX0onKmTsVeD/mtez3HnO6ikJ9O0SKKFT2UxrIfvZzm+0EQMQ83i+2chlqC&#xA;D/DQ+y05/KXTZpvM4u42BgsLNeJjYNR5xup49DvISDmPqp+gj+KUj9n7KcvsnFeXiNcMYD7fwWf6&#xA;rfanf6tbWumXZjSGRJLqQKHDIhPqISexB+/NFLIZSoPawwCOPilsyDL3DX6h/wAck/Mf8Sy4fS1R&#xA;+tK9H85eUhcpon6ZszrPMp+jVnja55MSePogl603O2w3O2TiDTVlkOKrZNhYvLtG1PzjYPcrapby&#xA;G51j6tcm7L8g8teTLx8AozPyxga/qsiyrX9O8yahZhJYrakTeoFgdy5NCKAOijv45qdXj4o+nm5e&#xA;gzxxz9XIvmfzZo17D5n1KJoyh9dmblsQX+M1HX9rN9oJ3hj7q+Wzgdoa/DiyyBO/Pbz3/S9Z/LvX&#xA;PMml+StNsbBLRiupLYyicyc1F45dJAAAOPxbHvvmPmjCUyfL7mrT6mOYEgEUzb8tTemw1NrrlVr+&#xA;UitaVovPjX/KyrV1YruciTMMxUIXVpPT0q9kpXhBK1CQK0QnqemGPNUVgV5h5i8zXqa7cWtrxqsz&#xA;Rs0i9+XEUoegx/kLBl9cuKz5/scuGeUY0rarqcl9+WmrJM/Oa2uIomNAtR9YiYbDtUkZl4NLDBkj&#xA;GH0/2tMpGUrLxb/CLNM55LXirH4PEt/lZtrWns3lC61KKPy/aRSqLG5gupJ4yo5coGoAreDGYE/6&#xA;vuc0eriOKR62G2LN8wGS+OR4zVTQnbCDSJRB5sV86Sa1e39hpVtcRxxXkc8gLpXhLAoVCCN6MZxX&#xA;w47dTlwjGcfV0IQDKAPBtIxIeLa/oGreW9Sjt7xwl2QJo5IXJ+HkQrhtiPiU++2b3FljkjY5PB6n&#xA;TZME6l9XPZOfy/8ALmpa3q3123ughtZQ1+0lSxSWtOPXmz0frSnXMbXygMfARz5Ow7FhlOcZYneJ&#xA;9V9b++93uscaxxrGgoqAKo9gKDNGBT15Nm1G1/47S/T/AMmzlsGGT6WO/k9/vD5m/wDAhvv+IxZs&#xA;NVzj/VDjFPvNvm6LQUhjSH17u5r6SM3BFAoOTt8z/tZXhw8fudX2h2iNOAKuRefeZ/N35m3tnbpo&#xA;N3BpuoGSf0wkEU6XLxIGjt/3hkosjGnNSPn2NOf93Oq9Lk9mZJanAZEgTEj7qrb577pi/nLWI9RE&#xA;2r2saxCX02aGooUPxcas3ID/ADOZH5XigD/FTrT27LFmlGQBxCRAPWr5+bPM1r1DsVeDfnmL2y8z&#xA;xyInC3vYEkWXrWSP929K9CFC1+jN32cQYeYdbqOz8eTJxy38ujBPL/mDzFpmpQTaNcyx3pnikiWP&#xA;4i8qclQFd+X94w49DXM+cYkbt8cURHhAoPqfTIWMC3s9mljf3aJJe20Tc40l4/GqH+XlU5y+SMBM&#xA;mPIuXGc+ERkbpbJrulx3psmnH1lSFkjG5QsAV5eFa7ZUcgBot0cEpCwi9dv7Sy0T1bmQRqSAtepN&#xA;a0A75mY8cpig4YPreWaZaeVh+Ylv5yu2aO4ty4gZU+OkkBt2WQL+wA5YdTXtlkNJmEyP4WzNGEog&#xA;j63sb6nYrYfX/WVrTiGEqnkCCaClPfK8h4L4ujRjxmcuEc2N65q1lqcFgdKnjM8eqWyyllLCORlL&#xA;ASKGQk8SDTkNsnpskZWelMsmGWM1JOvq/mb/AJb7L/pDl/7KslcO4/P9jU8C87JPH561S0nlV/Xl&#xA;AlKB1jMkka0fg7ykUYg/a+XhmfCMRiEgOW/nzs/N5jXZDLUyB5Gh/sQB8kL5F1Ga28yadal+Ntc3&#xA;1oZ1bpyimBRvmvI/fl+eIMSfIsOy9R4eWjylt+p9NKqqKKABUmg8SanNK9U7FVssUcsTxSDlHIpV&#xA;1PcMKEYoQFhqEMekW819cJG6L6NxLKwUetFVJBVqV+NGyRiSdkvH9euIrjW76eF/UiknkeOQd1LE&#xA;imbrEKiAe5uHJHyyEeWfNcFCqCW1YKeqn62BTKpj1wPv+5h3MZh+K4mb+UJGfmAX/wCZmZLNnPl3&#xA;TtRmh8s/VblYGe2vmVioegEkYIoR3zU5wLnYvcLxgMs/QfmX/q6p/wAiU/pmLUe77U+KHfoPzL/1&#xA;dU/5Ep/TGo932r4oS240fVl8y6UtzeJcOYbpojwCcePpV6DetRk+EcBoVuP0r4oUfMnl3TZtUt59&#xA;WhhuJBEVErqKcQ1VQ1FP2mOabW6nNjuOMnpy+Nn7AyjpcOY8U4gnlu1Y22kaYD9RigtPVorGEKhf&#xA;f4QStC3XbNPLPqp85TNeZcvFpsOP6Yxj7gE9sY726VvTmC8KV5Cp3+g5tey8sskSJG6a9QREhGWe&#xA;lzxXYuJpFYiuy9yRT2zbCNOLPKCKeV+QfMurabd+ZLW1ige2/TN5NK83IcSSq/aB8E8Myu0tThwQ&#xA;jKd2RQA6s8OnOTknnm7V7TVLKJtSsJoTESYb6zInChuvJCIyVNPH6cxez+0cOWXDCVS/my2+XNwO&#xA;1OxfFh6jXD1H6WE/WXiaZbWSSOCSqleRBZPB+OxzdGIPMPARyyjYiSAftHmyDyr5R/SckdxPd28c&#xA;IPIW/qq0r07FBXiPnvlOfKYigHc9m9kSyEZMn93z9/7Hpn6N1P8A3+n3f2ZqeB7TxQ79G6n/AL/T&#xA;7v7MeBfFDyn8/wDTdT/RGlkwm5VZpWaaKMsIwEAIZgPhDV/DNl2dGiWMsgLB/wAv9e0rRrrR3ubJ&#xA;Uubi5aKG7eINz9RljMiyMGYNDypxWi0Pc7h1scsp1H6K3bIGAjv9T6O/Rup/7/T7v7M1vAx8UIPU&#xA;PLVzfR0lkj9QD4JKUI+kDpleTTiQbsOs4DtyYbr2h6xb2zvdxyNDZq3psWLRKH+Gq9tzTJdn+LHJ&#xA;wfwn9Dl6nJhnHiB9X2sWtreS4uIreIVkmdY0H+UxoP1500jQt1rPNB8pamzx214JIrGBuTq5NCSd&#xA;wgr+14jOUy+JnycUxQdkdRiw4/QbkWQeYraC3h0aGCMRxLqVtxRRQftZn4YgAgdzqJTMjZNlkGQY&#xA;vmj8yXZ/POsFuon4/QqqB+Azdaf+7Dx2vP7+XvQfmbQ73R723aZuQvreK9gmA41EyhmpToVeow4Z&#xA;AxodNmGpxShIE/xC/m94/Lbzb/iPy5HLMa39pSC9r+0wHwyf7Mb/ADrmr1GLgl5PTaDU+Ljs/UNi&#xA;yvKHOYd683+/G+85lU6LjPe8d8xaldCx13StSu5bzVv8RSPo8VFX6vGLQXsZUCnJDFyU/wCUa9eu&#xA;Jgy5BrAP4ODf5/2fB3OnlEYrP1cVfYoP5r0qAiO6LwXAVTJC0b1Usoah2986EByRIF6IkOlXflkT&#xA;cpPR1RY5m4bSSyMRIigN35dBmBKZ4/c6fJnn4n9VD2vkK1SBRLdz+s3xS8WXjyO5AqtaDoMl+Zky&#xA;Ovn5fj4otbNrHWNHtLeeQRRW92EqdxvET99crJsEnyaTklISJPUfpZCstwBQyux8Sf6ZVTTxHvb9&#xA;eb/fjfecaXjPegdUZbWS21i7uWjjiSaG0hFS88sjRj4K0+BAh5tXY0G5yYGxRk1Ixx3P1EUiWlna&#xA;RC0cmxoWYqaAj2Y96ZyHaGrhnG1Agef/ABI83qtFpZYbs3f47181eIpueS/8SFc12EjhIP49Mv00&#xA;5kgeIH8dF5d1+yxWvWhpm69nx9f+b+l0/bUiOCvP9CHvL8W8PqT3TQoDTly6k9u+dLGF8g6WAnI0&#xA;LSPyz5b0mymvr2xuZriLUJjNKspqgkqSeHwqd+W9a9M5z2kyCRhA/VC/tr9T0vZZyiJ4hQ2pPvWg&#xA;E4suJDenzVeJ4FAeJANOO1RtnO8Jri83YGuSWal5V0q6VnRfqsnXnHsv0r0+6mbbSdtZ8ZAJ4x3H&#xA;n8/7XR632e02bcDgl3jl8uX3MVg8l6FeT8Y9fv8A1pKt6UciooPUhA0fQdhnc+LkA3DgwlmwwEaH&#xA;DEV+N0wGgaf5b9LULrzLqUFtE6jhNcqInPZCoQcq+GVmZntQazqJ5NgAmQ/MbynT/jtxH/ZN/TIe&#xA;BLuYeDl7iirfzxHPFz0TU2kIYFzGWKUoRvUcTmu18zjiKNSt23ZGjM8h8SNx4evfYQzfmV5XkPOX&#xA;WoPVYD1CnwAtTc0QAb5nxwToWN3W5cWQzPCDw3t7kZZ+bdGvLS4u7bU45ba1FbmUSUCClatWlMTi&#xA;INU0ShkBo3ulN/8AmDZSw8NGvkupv92OrEiMdtjTrk44O8OFr8+XABzspJe6lDqBRrma6DhRyLuJ&#xA;1Ldyqn0uAPhvlwjXJ0k85mbJlfz/AFUlenX2lXhujDduWsriS0lCRkss0VOStyZAKcuxOCGUS5G2&#xA;/Piz4v7wyF2Plz6sht/N13aPEtu0zWyLxlSeX1CxqfiUhV4bdt8BxArj7QnAiiSPMo19W8t+ZLu3&#xA;trfXpWuYm9WGC3n4Hkm/KhG5XK+CUByekHiQFkfNFr5q0MzyWsesvNcwVEqI7OwK7GvEU64Bhkei&#xA;I4MsuVsJ1jQ9MvdTnvpLi4WOdvVllehKgn4uVR+yPc5lATAAFM5djQlEmRlx/YmuoN5U1q0s4YL6&#xA;TU5NOQRRRRMOIBUCrVQ0B4DvkMUZAnarY4dAZECY2j3q3l7zXoWjeraXGq28EY/3QjiiONjsm1fH&#xA;BlwCtg5uqxbAQFV3bBmGm65aanbfWdPvBcwVK+pG5IDDqD4HMaUK5h10uOJo2r4GtIP8KxjzJca4&#xA;ZEeWeKBFRo90khEyGRWqftxT8GFOijKjiHGJ91/o/U2eKeDg80Dqui+cfWlttMk06fy/c23o3OkX&#xA;qyqvqMTydHiB4qU4jhSnU9cxtZovGkJWYyHVytLrDjBBHECh/KXljzRpEjR3bwSW2/oMbu4uZIE7&#xA;RRGeIPw/1pDl2KGSJ3lYac+SEh6RRZUIL3/fw/X/AAzIcWihZPL8E+oxahPLMbmH+7KzzogG1R6a&#xA;SKlG4jl8O/fJCZApsjOQFdPcE1yLFykrIjAAhWBZGBIYDsaEHfFCX32mzX93Jc3sizswVIYytEhj&#xA;Q1WOIb8R9NT9+SMtqcY6filxSPEUWGvR3jP0HNIewsB6y+Y/U74dsZh0j9v61K5svry+hfM31U7u&#xA;tuwjckbijMsg69dszNHoMenJMdye9wtbqZ6mPDPaP9H8F1hoGgWjgRyajDHyDNwuIG/4UwCv35sT&#xA;kJdbj0cIcjL5j9ShrGi3uo2fp2l1EbmNuQtrpQkUyjoFmU1ifrufhPt3OKQBcoTyR3gaKF8s6rfT&#xA;Xtzod5pc2n31ioZYGFR6RNB8VAvX9ro3XOZ7X7ImcniY/WJn5H9X3O87N7XEgYZfTKP2j9f3qcEH&#xA;nC61WRtWsI7bRWDLEi3EDSoykFSwilMlTTsM2On7Gw4RGV8WQfL5OFPtjUSkQAIwPutOWtIXgaBi&#xA;7RMKMDJISR4VLVy+OjwiYmIgSHl+jkx/lDPVcX3Ie20TS7WYTQwBZF+yxZmpX/WJzNllkRRLTPUz&#xA;kKJ2W65oGk65Z/VNSgE8IYOu5VlYd1ZaEZGEzE2GGPJKBsMf/wCVTeSP+WOT/kdL/wA1Zb+Ym3fn&#xA;MneiYfy58swKVgW4iBoG9O5mWoXYA0YVp2yk0TZEb9wZjtDMOUkM35UeSWYs1pIWJqSZ5SST/sst&#xA;Gomx/OZO9MdO8ieVtPs7qzgsVMF6AtyJGZyyjoOTEkUO+3ffIyzSJu2uWonIgk8kPB+Wvku3kEkF&#xA;g0Ug/aS4uQfwkwnPPvRkzSmKlRHmAr6l5WtU0+Y6TAg1BFLWonklMRkG6iQ1ZqfLKss5SiRbj6bT&#xA;YY5YyMRsQetPPPys8n+ZYNQ1BNZsvQsL1/0jctKJI5PrM5eqRfDxIHEcgTUbZTjiYyBH82nP1coZ&#xA;sUoyo+ux3/2fsej3Pkvy3cx+nNbOyEUYLPOlfnwdcyhlkHW4cEMZuIF/P71mleQvKWlXqXthp6xX&#xA;UYIjkaSWTjXYkCRmAPvjLNIiiXMnqJyFErU8geU4rqW6gs3tp5q+o9vcXENeRqRSORQBXsNsPjz7&#xA;2Q1WQdVWTyZoMiNHIt06OCro17eEEHYggzY+PPvX83k7/uUbf8vvKVvbzW0Fm8UFxT1kS4uQGpXY&#xA;0k6b4fHn3r+byd/3Ib/lVnkP/q2f8l7j/qpj+Yn3r+byd/3J5o2g6RotqbXTLZbaBmLsoLMSx7ln&#xA;LMfpOVymZGy1TySmbJZJ/hbXf+Wb/h4/+asijgLv8La7/wAs3/Dx/wDNWK8Bd/hbXf8Alm/4eP8A&#xA;5qxXgLv8La7/AMs3/Dx/81YrwF3+Ftd/5Zv+Hj/5qxXgLv8AC2u/8s3/AA8f/NWK8Bd/hbXf+Wb/&#xA;AIeP/mrFeAu/wtrv/LN/w8f/ADVivAXf4W13/lm/4eP/AJqxXgLv8La7/wAs3/Dx/wDNWK8Bd/hb&#xA;Xf8Alm/4eP8A5qxXgLv8La7/AMs3/Dx/81YrwF3+Ftd/5Zv+Hj/5qxXgK5/LfmFwgeAsIxxQGSM8&#xA;R1oPi2xteArf8La7/wAs3/Dx/wDNWK8Bd/hbXf8Alm/4eP8A5qxXgLv8La7/AMs3/Dx/81YrwF3+&#xA;Ftd/5Zv+Hj/5qxXgLv8AC2u/8s3/AA8f/NWK8Bd/hbXf+Wb/AIeP/mrFeAu/wtrv/LN/w8f/ADVi&#xA;vAXf4W13/lm/4eP/AJqxXgLv8La7/wAs3/Dx/wDNWK8Bd/hbXf8Alm/4eP8A5qxXgLv8La7/AMs3&#xA;/Dx/81YrwF3+Ftd/5Zv+Hj/5qxXgLv8AC2u/8s3/AA8f/NWK8Bd/hbXf+Wb/AIeP/mrFeAu/wtrv&#xA;/LN/w8f/ADVivAXf4W13/lm/4eP/AJqxXgLv8La7/wAs3/Dx/wDNWK8Bd/hbXf8Alm/4eP8A5qxX&#xA;gL//2Q=="/>
    </rdf:Alt>
   </xmp:Thumbnails>
   <xmpMM:DerivedFrom
    stRef:instanceID="xmp.iid:a51f1701-e662-a04e-bfdf-e452d527e219"
    stRef:documentID="xmp.did:a51f1701-e662-a04e-bfdf-e452d527e219"
    stRef:originalDocumentID="uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7"
    stRef:renditionClass="proof:pdf"/>
   <xmpMM:History>
    <rdf:Seq>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:70f8aa99-76da-7d40-aa1a-1c7a0e09fb88"
      stEvt:when="2021-11-02T18:45:28+03:00"
      stEvt:softwareAgent="Adobe Illustrator 24.2 (Windows)"
      stEvt:changed="/"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:a51f1701-e662-a04e-bfdf-e452d527e219"
      stEvt:when="2021-12-17T18:16:52+03:00"
      stEvt:softwareAgent="Adobe Illustrator 24.2 (Windows)"
      stEvt:changed="/"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:becd1e71-2209-ed42-b199-515ad068438f"
      stEvt:when="2021-12-17T18:16:56+03:00"
      stEvt:softwareAgent="Adobe Illustrator 24.2 (Windows)"
      stEvt:changed="/"/>
    </rdf:Seq>
   </xmpMM:History>
   <xmpTPg:MaxPageSize
    stDim:w="3170.000000"
    stDim:h="1262.312022"
    stDim:unit="Pixels"/>
   <xmpTPg:PlateNames>
    <rdf:Seq>
     <rdf:li>Cyan</rdf:li>
     <rdf:li>Magenta</rdf:li>
     <rdf:li>Yellow</rdf:li>
     <rdf:li>Black</rdf:li>
    </rdf:Seq>
   </xmpTPg:PlateNames>
   <xmpTPg:SwatchGroups>
    <rdf:Seq>
     <rdf:li
      xmpG:groupName="Default Swatch Group"
      xmpG:groupType="0"/>
    </rdf:Seq>
   </xmpTPg:SwatchGroups>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
          
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1  -1  scale 0 -1262.31 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 1262.31 li
3170 1262.31 li
3170 0 li
cp
clp
3170 1262.31 mo
-2.4727e-05 1262.31 li
-2.4727e-05 0 li
3170 0 li
3170 1262.31 li
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
1 .870588 .843137 rgb
f
3170 1262.31 mo
-2.4727e-05 1262.31 li
-2.4727e-05 997.227 li
3170 997.227 li
3170 1262.31 li
cp
.701961 .776471 .756863 rgb
f
584.163 1129.37 mo
584.163 1140.4 475.198 1149.35 340.783 1149.35 cv
206.369 1149.35 97.4038 1140.4 97.4038 1129.37 cv
97.4038 1118.33 206.369 1109.39 340.783 1109.39 cv
475.198 1109.39 584.163 1118.33 584.163 1129.37 cv
cp
.6 .709804 .678431 rgb
f
1235.17 1127.82 mo
1235.17 1138.86 1126.21 1147.8 991.793 1147.8 cv
857.378 1147.8 748.413 1138.86 748.413 1127.82 cv
748.413 1116.79 857.378 1107.84 991.793 1107.84 cv
1126.21 1107.84 1235.17 1116.79 1235.17 1127.82 cv
cp
f
1792.48 1019.99 mo
1792.48 1028.75 1669.29 1035.85 1517.32 1035.85 cv
1365.36 1035.85 1242.16 1028.75 1242.16 1019.99 cv
1242.16 1011.23 1365.36 1004.13 1517.32 1004.13 cv
1669.29 1004.13 1792.48 1011.23 1792.48 1019.99 cv
cp
f
626.566 1022.36 mo
626.566 1028.78 564.97 1033.98 488.986 1033.98 cv
413.002 1033.98 351.406 1028.78 351.406 1022.36 cv
351.406 1015.95 413.002 1010.74 488.986 1010.74 cv
564.97 1010.74 626.566 1015.95 626.566 1022.36 cv
cp
f
2983.21 1016.31 mo
2983.21 1022.73 2892.5 1027.93 2780.6 1027.93 cv
2668.7 1027.93 2577.99 1022.73 2577.99 1016.31 cv
2577.99 1009.89 2668.7 1004.69 2780.6 1004.69 cv
2892.5 1004.69 2983.21 1009.89 2983.21 1016.31 cv
cp
f
2598.75 695.098 mo
2607.05 694.516 li
2612.14 734.946 li
2610.18 785.305 li
2609.28 793.436 li
2600.97 794.018 li
2598.75 695.098 li
cp
.576471 .368627 .588235 rgb
f
1239.45 949.89 mo
499.11 949.89 li
486.813 949.89 476.845 939.921 476.845 927.624 cv
476.845 240.014 li
476.845 227.718 486.813 217.749 499.11 217.749 cv
1239.45 217.749 li
1251.74 217.749 1261.71 227.718 1261.71 240.014 cv
1261.71 927.624 li
1261.71 939.921 1251.74 949.89 1239.45 949.89 cv
cp
.929412 .698039 .662745 rgb
f
2944.62 839.525 mo
2653.62 839.525 li
2653.62 832.513 li
2944.62 832.513 li
2944.62 839.525 li
cp
.576471 .368627 .588235 rgb
f
2650.81 1018.99 mo
2647.9 1018.99 2645.54 1016.63 2645.54 1013.72 cv
2645.54 755.11 li
2645.54 752.201 2647.9 749.844 2650.81 749.844 cv
2653.72 749.844 2656.08 752.201 2656.08 755.11 cv
2656.08 1013.72 li
2656.08 1016.63 2653.72 1018.99 2650.81 1018.99 cv
cp
.364706 .156863 .4 rgb
f
2948.91 1018.99 mo
2946 1018.99 2943.64 1016.63 2943.64 1013.72 cv
2943.64 755.113 li
2943.64 752.203 2946 749.844 2948.91 749.844 cv
2951.82 749.844 2954.18 752.203 2954.18 755.113 cv
2954.18 1013.72 li
2954.18 1016.63 2951.82 1018.99 2948.91 1018.99 cv
cp
f
2681.67 1019.59 mo
2619.96 1019.59 li
2619.96 1014.71 2623.92 1010.74 2628.8 1010.74 cv
2672.82 1010.74 li
2677.71 1010.74 2681.67 1014.71 2681.67 1019.59 cv
2681.67 1019.59 li
cp
f
2979.76 1019.59 mo
2918.05 1019.59 li
2918.05 1014.71 2922.01 1010.74 2926.9 1010.74 cv
2970.92 1010.74 li
2975.8 1010.74 2979.76 1014.71 2979.76 1019.59 cv
2979.76 1019.59 li
cp
f
2650.81 762.188 mo
2649.64 762.188 2648.57 761.541 2648.02 760.503 cv
2633.3 732.52 li
2632.49 730.977 2633.08 729.068 2634.62 728.258 cv
2636.16 727.444 2638.07 728.036 2638.88 729.58 cv
2650.52 751.698 li
2659.89 729.808 li
2660.57 728.205 2662.43 727.456 2664.03 728.15 cv
2665.63 728.834 2666.38 730.689 2665.69 732.292 cv
2653.71 760.274 li
2653.24 761.394 2652.16 762.137 2650.94 762.186 cv
2650.9 762.188 2650.85 762.188 2650.81 762.188 cv
cp
f
2948.6 762.188 mo
2947.43 762.188 2946.35 761.541 2945.81 760.503 cv
2931.09 732.52 li
2930.28 730.977 2930.87 729.068 2932.41 728.258 cv
2933.95 727.444 2935.86 728.036 2936.67 729.58 cv
2948.31 751.698 li
2957.68 729.808 li
2958.36 728.205 2960.23 727.456 2961.82 728.15 cv
2963.42 728.834 2964.17 730.689 2963.48 732.292 cv
2951.5 760.274 li
2951.02 761.394 2949.94 762.137 2948.73 762.186 cv
2948.68 762.188 2948.64 762.188 2948.6 762.188 cv
cp
f
467.175 758.072 mo
421.45 758.072 li
408.92 758.072 398.762 747.914 398.762 735.384 cv
398.762 653.638 li
398.762 641.107 408.92 630.95 421.45 630.95 cv
467.175 630.95 li
479.705 630.95 489.863 641.107 489.863 653.638 cv
489.863 735.384 li
489.863 747.914 479.705 758.072 467.175 758.072 cv
cp
.490196 .627451 .584314 rgb
f
497 1022.44 mo
381.74 1022.44 li
376.659 1022.44 372.539 1018.32 372.539 1013.24 cv
372.539 778.646 li
372.539 773.564 376.659 769.444 381.74 769.444 cv
497 769.444 li
502.082 769.444 506.202 773.564 506.202 778.646 cv
506.202 1013.24 li
506.202 1018.32 502.082 1022.44 497 1022.44 cv
cp
.501961 .290196 .517647 rgb
f
504.887 1022.44 mo
389.626 1022.44 li
384.544 1022.44 380.425 1018.32 380.425 1013.24 cv
380.425 778.646 li
380.425 773.564 384.544 769.444 389.626 769.444 cv
504.887 769.444 li
509.968 769.444 514.088 773.564 514.088 778.646 cv
514.088 1013.24 li
514.088 1018.32 509.968 1022.44 504.887 1022.44 cv
cp
.576471 .368627 .588235 rgb
f
490.297 803.718 mo
404.743 803.718 li
401.645 803.718 399.135 801.207 399.135 798.109 cv
399.135 795.012 401.645 792.501 404.743 792.501 cv
490.297 792.501 li
493.394 792.501 495.905 795.012 495.905 798.109 cv
495.905 801.207 493.394 803.718 490.297 803.718 cv
cp
.364706 .156863 .4 rgb
f
490.297 821.124 mo
404.743 821.124 li
401.645 821.124 399.135 818.613 399.135 815.516 cv
399.135 812.418 401.645 809.907 404.743 809.907 cv
490.297 809.907 li
493.394 809.907 495.905 812.418 495.905 815.516 cv
495.905 818.613 493.394 821.124 490.297 821.124 cv
cp
f
490.297 838.53 mo
404.743 838.53 li
401.645 838.53 399.135 836.02 399.135 832.922 cv
399.135 829.824 401.645 827.313 404.743 827.313 cv
490.297 827.313 li
493.394 827.313 495.905 829.824 495.905 832.922 cv
495.905 836.02 493.394 838.53 490.297 838.53 cv
cp
f
484.893 1005.62 mo
410.146 1005.62 li
405.63 1005.62 401.969 1001.96 401.969 997.439 cv
401.969 881.064 li
401.969 876.548 405.63 872.887 410.146 872.887 cv
484.893 872.887 li
489.41 872.887 493.07 876.548 493.07 881.064 cv
493.07 997.439 li
493.07 1001.96 489.41 1005.62 484.893 1005.62 cv
cp
.654902 .435294 .658824 rgb
f
473.062 758.072 mo
427.337 758.072 li
414.808 758.072 404.649 747.914 404.649 735.384 cv
404.649 653.638 li
404.649 641.107 414.808 630.95 427.337 630.95 cv
473.062 630.95 li
485.593 630.95 495.75 641.107 495.75 653.638 cv
495.75 735.384 li
495.75 747.914 485.593 758.072 473.062 758.072 cv
cp
.670588 .768627 .745098 rgb
f
422.518 758.072 mo
433.556 769.444 li
465.2 769.444 li
472.522 758.072 li
446.12 746.699 li
422.518 758.072 li
cp
f
433.556 655.798 mo
433.172 655.798 432.859 655.49 432.854 655.107 cv
432.85 654.72 433.16 654.402 433.546 654.399 cv
495.896 653.635 li
496.346 653.65 496.602 653.939 496.606 654.325 cv
496.611 654.713 496.301 655.03 495.915 655.034 cv
433.565 655.798 li
433.561 655.798 433.559 655.798 433.556 655.798 cv
cp
1 1 1 rgb
f
433.556 677.67 mo
433.172 677.67 432.859 677.361 432.854 676.979 cv
432.85 676.592 433.16 676.273 433.546 676.271 cv
495.896 675.507 li
496.346 675.503 496.602 675.812 496.606 676.197 cv
496.611 676.585 496.301 676.902 495.915 676.905 cv
433.565 677.67 li
433.561 677.67 433.559 677.67 433.556 677.67 cv
cp
f
433.556 701.979 mo
433.172 701.979 432.859 701.671 432.854 701.289 cv
432.85 700.9 433.16 700.583 433.546 700.58 cv
495.896 699.815 li
496.346 699.868 496.602 700.121 496.606 700.506 cv
496.611 700.895 496.301 701.212 495.915 701.215 cv
433.565 701.979 li
433.561 701.979 433.559 701.979 433.556 701.979 cv
cp
f
2650.81 917.241 mo
2650.38 917.241 2650.02 916.887 2650.02 916.452 cv
2650.02 809.883 li
2650.02 809.448 2650.38 809.094 2650.81 809.094 cv
2651.25 809.094 2651.6 809.448 2651.6 809.883 cv
2651.6 916.452 li
2651.6 916.887 2651.25 917.241 2650.81 917.241 cv
cp
.654902 .435294 .658824 rgb
f
2948.91 917.241 mo
2948.47 917.241 2948.12 916.887 2948.12 916.452 cv
2948.12 809.883 li
2948.12 809.448 2948.47 809.094 2948.91 809.094 cv
2949.34 809.094 2949.7 809.448 2949.7 809.883 cv
2949.7 916.452 li
2949.7 916.887 2949.34 917.241 2948.91 917.241 cv
cp
f
852.607 264.959 mo
852.607 913.977 li
531.507 913.977 li
531.507 264.959 li
852.607 264.959 li
cp
1 .870588 .843137 rgb
f
1207.03 268.021 mo
1207.03 912.146 li
885.933 912.146 li
885.933 268.021 li
1207.03 268.021 li
cp
f
750.202 820.85 mo
852.607 820.85 li
852.607 913.977 li
531.507 913.977 li
531.507 532.317 li
593.707 532.317 li
593.707 747.92 li
632.208 747.92 li
632.208 617.901 li
750.202 617.901 li
750.202 820.85 li
cp
1 .788235 .721569 rgb
f
1207.03 679.503 mo
1207.03 912.146 li
885.933 912.146 li
885.933 820.85 li
915.187 820.85 li
915.187 677.672 li
990.926 677.672 li
990.926 571.417 li
1104.91 571.417 li
1104.91 679.503 li
1207.03 679.503 li
cp
f
2380.55 948.4 mo
1640.22 948.4 li
1627.92 948.4 1617.95 938.432 1617.95 926.136 cv
1617.95 238.524 li
1617.95 226.229 1627.92 216.26 1640.22 216.26 cv
2380.55 216.26 li
2392.85 216.26 2402.82 226.229 2402.82 238.524 cv
2402.82 926.136 li
2402.82 938.432 2392.85 948.4 2380.55 948.4 cv
cp
.929412 .698039 .662745 rgb
f
1993.74 263.477 mo
1993.74 912.146 li
1672.64 912.146 li
1672.64 263.477 li
1993.74 263.477 li
cp
1 .870588 .843137 rgb
f
2348.13 266.506 mo
2348.13 912.146 li
2027.03 912.146 li
2027.03 266.506 li
2348.13 266.506 li
cp
f
1910.8 499.213 mo
1993.74 499.213 li
1993.74 912.146 li
1672.64 912.146 li
1672.64 582.336 li
1791.58 582.336 li
1791.58 636.836 li
1910.8 636.836 li
1910.8 499.213 li
cp
1 .788235 .721569 rgb
f
2300.04 532.633 mo
2300.04 912.146 li
2027.03 912.146 li
2027.03 711.155 li
2115.71 711.155 li
2115.71 605.278 li
2216.28 605.783 li
2216.28 532.633 li
2300.04 532.633 li
cp
f
847.117 932.357 mo
556.118 932.357 li
556.118 925.345 li
847.117 925.345 li
847.117 932.357 li
cp
.576471 .368627 .588235 rgb
f
553.306 1111.82 mo
550.397 1111.82 548.039 1109.46 548.039 1106.55 cv
548.039 847.942 li
548.039 845.033 550.397 842.676 553.306 842.676 cv
556.215 842.676 558.573 845.033 558.573 847.942 cv
558.573 1106.55 li
558.573 1109.46 556.215 1111.82 553.306 1111.82 cv
cp
.364706 .156863 .4 rgb
f
851.402 1111.82 mo
848.491 1111.82 846.132 1109.46 846.132 1106.55 cv
846.132 847.945 li
846.132 845.035 848.491 842.676 851.402 842.676 cv
854.313 842.676 856.672 845.035 856.672 847.945 cv
856.672 1106.55 li
856.672 1109.46 854.313 1111.82 851.402 1111.82 cv
cp
f
584.163 1112.42 mo
522.45 1112.42 li
522.45 1107.54 526.411 1103.58 531.298 1103.58 cv
575.314 1103.58 li
580.201 1103.58 584.163 1107.54 584.163 1112.42 cv
584.163 1112.42 li
cp
f
882.258 1112.42 mo
820.546 1112.42 li
820.546 1107.54 824.507 1103.58 829.394 1103.58 cv
873.41 1103.58 li
878.297 1103.58 882.258 1107.54 882.258 1112.42 cv
882.258 1112.42 li
cp
f
553.306 855.02 mo
552.138 855.02 551.059 854.372 550.512 853.333 cv
535.793 825.351 li
534.982 823.807 535.576 821.899 537.118 821.088 cv
538.661 820.274 540.57 820.873 541.381 822.41 cv
553.013 844.528 li
562.382 822.639 li
563.067 821.036 564.918 820.281 566.525 820.98 cv
568.128 821.665 568.87 823.521 568.185 825.123 cv
556.207 853.105 li
555.728 854.224 554.647 854.967 553.432 855.016 cv
553.389 855.02 553.347 855.02 553.306 855.02 cv
cp
f
851.096 855.02 mo
849.928 855.02 848.851 854.372 848.302 853.333 cv
833.581 825.351 li
832.771 823.807 833.364 821.899 834.907 821.088 cv
836.454 820.274 838.356 820.873 839.169 822.41 cv
850.803 844.528 li
860.171 822.639 li
860.857 821.036 862.709 820.281 864.314 820.98 cv
865.917 821.665 866.66 823.521 865.975 825.123 cv
853.997 853.105 li
853.518 854.224 852.438 854.967 851.222 855.016 cv
851.179 855.02 851.137 855.02 851.096 855.02 cv
cp
f
1311.56 924.566 mo
1760.62 1006.2 li
1739.71 1013.46 li
1739.71 1013.46 1318.83 1029.75 1309.41 1006.2 cv
1299.99 982.648 1311.56 924.566 1311.56 924.566 cv
cp
.654902 .435294 .658824 rgb
f
1770.03 1015.62 mo
1770.03 1020.82 1765.82 1025.04 1760.62 1025.04 cv
1309.41 1025.04 li
1304.21 1025.04 1301.88 1015.17 1301.88 1009.97 cv
1299.99 1015.62 li
1299.99 1010.42 1304.21 1006.2 1309.41 1006.2 cv
1760.62 1006.2 li
1765.82 1006.2 1770.03 1010.42 1770.03 1015.62 cv
cp
.364706 .156863 .4 rgb
f
1311.56 1025.04 mo
1305.17 1025.04 1299.99 1019.85 1299.99 1013.46 cv
1299.99 696.887 li
1299.99 690.496 1305.17 685.315 1311.56 685.315 cv
1317.95 685.315 1323.13 690.496 1323.13 696.887 cv
1323.13 1013.46 li
1323.13 1019.85 1317.95 1025.04 1311.56 1025.04 cv
cp
f
1377.69 772.207 mo
1369.88 778.899 1358.13 777.998 1351.44 770.193 cv
1283.4 690.849 li
1276.71 683.044 1277.61 671.292 1285.41 664.6 cv
1293.22 657.907 1304.97 658.809 1311.66 666.613 cv
1379.7 745.958 li
1386.39 753.763 1385.49 765.515 1377.69 772.207 cv
cp
.654902 .435294 .658824 rgb
f
1586.17 988.875 mo
1586.03 988.862 1443.84 964.809 1443.84 964.809 cv
1443.42 964.738 1443.13 964.331 1443.2 963.899 cv
1443.27 963.472 1443.65 963.166 1444.11 963.256 cv
1586.3 987.31 li
1586.73 987.38 1587.02 987.787 1586.94 988.219 cv
1586.88 988.604 1586.54 988.875 1586.17 988.875 cv
cp
.262745 .0980392 .286275 rgb
f
1354.98 733.47 mo
1354.76 733.47 1354.55 733.383 1354.39 733.213 cv
1310.98 685.85 li
1310.69 685.528 1310.71 685.029 1311.03 684.733 cv
1311.35 684.443 1311.85 684.459 1312.14 684.783 cv
1355.56 732.147 li
1355.85 732.468 1355.83 732.967 1355.51 733.263 cv
1355.36 733.401 1355.17 733.47 1354.98 733.47 cv
cp
f
1066 750.685 mo
1066 750.685 1060.65 731.43 1064.01 725.813 cv
1067.37 720.195 1075.56 714.469 1082.61 716.067 cv
1089.66 717.666 1077.75 727.351 1077.75 727.351 cv
1077.75 727.351 1085.12 743.754 1080.27 751.485 cv
1075.42 759.217 1066 750.685 1066 750.685 cv
cp
.956863 .517647 .384314 rgb
f
888.604 752.47 mo
888.604 752.47 893.948 733.215 890.587 727.598 cv
887.228 721.98 879.038 716.255 871.986 717.854 cv
864.936 719.451 876.851 729.137 876.851 729.137 cv
876.851 729.137 869.475 745.54 874.327 753.271 cv
879.181 761.003 888.604 752.47 888.604 752.47 cv
cp
f
1172.67 683.489 mo
1161.31 683.489 li
1167.83 760.106 li
1176.59 760.106 li
1172.67 683.489 li
cp
.576471 .368627 .588235 rgb
f
1166.13 722.232 mo
1167.21 743.39 1171.89 760.347 1176.59 760.106 cv
1181.28 759.866 1184.21 742.52 1183.13 721.362 cv
1182.04 700.205 1177.36 683.249 1172.67 683.489 cv
1167.97 683.729 1165.04 701.075 1166.13 722.232 cv
cp
f
1160.71 671.745 mo
1152.42 672.564 li
1157.48 771.38 li
1165.77 770.561 li
1160.71 671.745 li
cp
f
1154.46 721.602 mo
1155.86 748.889 1160.92 770.809 1165.77 770.561 cv
1170.61 770.313 1173.41 747.99 1172.01 720.703 cv
1170.62 693.416 1165.55 671.497 1160.71 671.745 cv
1155.86 671.993 1153.06 694.314 1154.46 721.602 cv
cp
f
1146.17 722.421 mo
1147.57 749.708 1152.63 771.628 1157.48 771.38 cv
1162.32 771.132 1165.12 748.81 1163.72 721.522 cv
1162.33 694.235 1157.26 672.316 1152.42 672.564 cv
1147.57 672.813 1144.77 695.134 1146.17 722.421 cv
cp
.654902 .435294 .658824 rgb
f
1098.2 719.366 mo
1099.22 721.21 1104.95 736.737 1097.93 752.358 cv
1090.91 767.979 1073.64 757.038 1073.64 757.038 cv
1073.73 728.177 li
1098.2 719.366 li
cp
.956863 .517647 .384314 rgb
f
856.396 721.152 mo
855.375 722.996 849.648 738.522 856.671 754.144 cv
863.694 769.766 880.956 758.824 880.956 758.824 cv
880.864 729.962 li
856.396 721.152 li
cp
f
783.766 737.335 mo
783.854 737.335 1152.86 726.604 1152.86 726.604 cv
1154.46 726.557 1155.73 725.216 1155.69 723.605 cv
1155.64 722.025 1154.34 720.776 1152.77 720.776 cv
1152.69 720.776 783.683 731.506 783.683 731.506 cv
782.075 731.555 780.809 732.895 780.854 734.506 cv
780.902 736.085 782.197 737.335 783.766 737.335 cv
cp
.364706 .156863 .4 rgb
f
1017.06 801.188 mo
992.359 791.292 li
981.938 787.308 li
963.878 794.016 li
973.332 910.938 li
973.332 910.938 1001.78 918.699 1020.56 908.796 cv
1039.34 898.892 1017.06 801.188 1017.06 801.188 cv
cp
.156863 .423529 .486275 rgb
f
938.836 792.232 mo
944.422 788.793 960.866 787.595 976.024 788.086 cv
976.024 788.086 973.399 842.896 976.643 876.972 cv
978.475 896.231 979.589 909.635 980.208 917.657 cv
957.679 918.159 932.496 917.526 932.496 917.526 cv
932.496 917.526 922.747 802.138 938.836 792.232 cv
cp
f
1041.68 911.341 mo
1041.68 911.341 1028.63 915.094 1014.72 917.526 cv
1014.67 902.369 1011.34 866.465 1008.92 843.986 cv
1005.81 815.238 999.976 792.232 999.976 792.232 cv
976.152 787.542 li
978.716 787.354 980.758 787.308 981.938 787.308 cv
982.641 787.308 983.049 787.331 983.049 787.331 cv
983.049 787.331 1011.68 788.501 1025.22 795.729 cv
1025.22 795.729 1025.56 795.915 1026.18 796.243 cv
1028.49 797.623 1030.3 799.214 1031.3 801.015 cv
1035.25 808.103 1041.68 911.341 1041.68 911.341 cv
cp
f
1010.93 740.375 mo
1010.93 740.375 1022.87 721.257 1013.43 716.875 cv
1003.98 712.493 992.358 722.869 992.358 722.869 cv
992.358 722.869 970.991 724.274 962.631 735.511 cv
954.27 746.747 973.735 767.206 973.735 767.206 cv
1010.93 740.375 li
cp
0 0 0 rgb
f
977.42 771.625 mo
975.757 791.243 li
974.885 789.868 978.624 796.878 990.215 799.088 cv
998.671 800.7 1001.87 798.829 1001.87 798.829 cv
1001.52 788.793 li
1001.17 779.004 li
980.832 772.688 li
977.42 771.625 li
cp
.956863 .517647 .384314 rgb
f
980.832 772.688 mo
980.836 773.229 980.985 773.878 981.241 774.63 cv
984.801 784.802 996.622 787.932 1001.52 788.793 cv
1001.17 779.004 li
980.832 772.688 li
cp
0 0 0 rgb
f
1009.33 734.657 mo
1009.33 734.657 1017.54 760.127 1012.33 773.449 cv
1007.11 786.771 994.838 783.36 987.632 779.96 cv
980.425 776.56 977.417 771.629 977.417 771.629 cv
977.417 771.629 970.199 773.295 966.182 766.335 cv
962.164 759.376 965.787 752.211 969.944 750.902 cv
974.102 749.595 978.552 752.948 978.552 752.948 cv
975.55 745.484 li
975.55 745.484 994.796 711.017 1009.33 734.657 cv
cp
.956863 .517647 .384314 rgb
f
976.995 763.486 mo
976.813 763.486 976.632 763.425 976.482 763.295 cv
968.183 756.188 li
967.852 755.905 967.813 755.408 968.097 755.076 cv
968.382 754.746 968.88 754.706 969.209 754.992 cv
977.509 762.1 li
977.84 762.383 977.878 762.879 977.595 763.212 cv
977.439 763.394 977.218 763.486 976.995 763.486 cv
cp
0 0 0 rgb
f
968.947 762.694 mo
968.569 762.694 968.235 762.423 968.171 762.037 cv
968.098 761.606 968.388 761.199 968.817 761.128 cv
974.766 760.124 li
975.197 760.047 975.603 760.337 975.675 760.768 cv
975.747 761.199 975.458 761.606 975.027 761.677 cv
969.08 762.682 li
969.035 762.691 968.992 762.694 968.947 762.694 cv
cp
f
1006.31 762.694 mo
1006.25 762.694 1006.19 762.688 1006.13 762.673 cv
1005.7 762.571 1005.44 762.146 1005.54 761.72 cv
1006.93 755.948 1003.47 752.493 1003.33 752.349 cv
1003.01 752.043 1003.01 751.547 1003.31 751.232 cv
1003.61 750.919 1004.11 750.912 1004.42 751.214 cv
1004.6 751.381 1008.69 755.412 1007.08 762.09 cv
1006.99 762.45 1006.67 762.694 1006.31 762.694 cv
cp
f
1010.31 753.729 mo
1009.94 753.729 1009.6 753.464 1009.53 753.082 cv
1008.69 748.478 li
1008.61 748.049 1008.89 747.64 1009.32 747.56 cv
1009.75 747.47 1010.16 747.763 1010.24 748.194 cv
1011.09 752.799 li
1011.17 753.227 1010.88 753.637 1010.45 753.717 cv
1010.4 753.726 1010.36 753.729 1010.31 753.729 cv
cp
f
997.873 752.919 mo
997.5 752.919 997.169 752.653 997.098 752.271 cv
996.25 747.667 li
996.172 747.239 996.455 746.829 996.884 746.749 cv
997.323 746.669 997.722 746.952 997.804 747.384 cv
998.651 751.988 li
998.729 752.416 998.446 752.826 998.018 752.906 cv
997.969 752.915 997.921 752.919 997.873 752.919 cv
cp
f
1010.93 740.375 mo
1010.93 740.375 1009.13 736.25 1004.24 735.802 cv
999.351 735.354 996.201 738.559 996.201 738.559 cv
996.201 738.559 997.649 746.981 990.624 750.795 cv
983.598 754.608 978.552 752.948 978.552 752.948 cv
973.871 750.818 li
970.928 743.465 li
986.167 729.6 li
1005.05 721.592 li
1013.55 730.733 li
1010.93 740.375 li
cp
f
995.55 766.691 mo
995.737 767.745 996.138 768.466 996.75 768.846 cv
997.404 769.249 998.283 769.225 999.038 769.067 cv
995.55 766.691 li
cp
998.073 770.753 mo
997.356 770.753 996.604 770.608 995.927 770.192 cv
994.548 769.345 993.849 767.635 993.849 765.113 cv
993.849 764.82 994.01 764.553 994.269 764.417 cv
994.527 764.281 994.842 764.3 995.081 764.46 cv
1001.23 768.651 li
1001.46 768.809 1001.59 769.076 1001.57 769.354 cv
1001.56 769.635 1001.39 769.881 1001.14 770.007 cv
1001.06 770.051 999.649 770.753 998.073 770.753 cv
cp
f
992.358 722.869 mo
992.358 722.869 992.642 711.959 980.832 715.796 cv
969.021 719.633 968.695 734.521 968.695 734.521 cv
992.358 722.869 li
cp
f
1007.95 744.163 mo
1007.6 744.163 1007.28 743.932 1007.19 743.581 cv
1007.07 743.161 1007.32 742.727 1007.74 742.613 cv
1011.37 741.627 li
1011.79 741.513 1012.22 741.763 1012.33 742.182 cv
1012.45 742.601 1012.2 743.035 1011.78 743.149 cv
1008.15 744.136 li
1008.08 744.153 1008.02 744.163 1007.95 744.163 cv
cp
f
999.977 744.555 mo
999.883 744.548 994.415 743.898 994.415 743.898 cv
993.982 743.849 993.673 743.454 993.725 743.022 cv
993.777 742.592 994.196 742.305 994.601 742.333 cv
1000.07 742.982 li
1000.5 743.032 1000.81 743.427 1000.76 743.858 cv
1000.71 744.259 1000.37 744.555 999.977 744.555 cv
cp
f
1047.71 789.947 mo
1047.71 789.947 1057.07 783.059 1060.81 775.756 cv
1064.56 768.452 1066 750.685 1066 750.685 cv
1094.59 754.701 li
1094.59 754.701 1109.32 798.031 1088.44 824.488 cv
1068.57 849.672 1043.67 850.809 1043.67 850.809 cv
1047.71 789.947 li
cp
.956863 .517647 .384314 rgb
f
1001.52 788.793 mo
1001.52 788.793 1018.91 789.593 1030.91 787.863 cv
1042.92 786.134 1050.19 784.717 1050.19 784.717 cv
1050.19 784.717 1058.7 799.053 1067.65 817.118 cv
1074.71 831.365 1080.07 839.598 1080.07 839.598 cv
1080.07 839.598 1053.09 861.977 1030.8 859.854 cv
1015.75 858.42 1001.52 788.793 1001.52 788.793 cv
cp
.156863 .423529 .486275 rgb
f
906.894 791.251 mo
906.894 791.251 897.534 784.363 893.788 777.06 cv
890.043 769.757 888.604 752.47 888.604 752.47 cv
859.285 758.318 li
859.285 758.318 845.281 799.335 866.155 825.793 cv
886.025 850.977 910.925 852.113 910.925 852.113 cv
906.894 791.251 li
cp
.956863 .517647 .384314 rgb
f
964.437 788.049 mo
964.437 788.049 938.451 788.793 924.776 787.98 cv
912.667 787.261 904.407 786.021 904.407 786.021 cv
904.407 786.021 895.896 800.357 886.949 818.423 cv
879.894 832.669 874.525 840.902 874.525 840.902 cv
874.525 840.902 925.7 875.214 947.72 855.785 cv
968.646 837.321 964.437 788.049 964.437 788.049 cv
cp
.156863 .423529 .486275 rgb
f
1089.17 719.958 mo
1089.17 719.958 1087.41 707.278 1081.65 711.328 cv
1075.9 715.378 1073.65 738.446 1080.57 740.736 cv
1087.5 743.025 1089.17 719.958 1089.17 719.958 cv
cp
.956863 .517647 .384314 rgb
f
1099.7 721.086 mo
1099.7 721.086 1097.94 708.405 1092.19 712.455 cv
1086.43 716.505 1084.18 739.574 1091.1 741.864 cv
1098.03 744.153 1099.7 721.086 1099.7 721.086 cv
cp
f
1108.66 728.231 mo
1109.5 725.479 1109.72 722.545 1109.04 719.749 cv
1108.43 717.251 1107.12 715.086 1104.3 716.418 cv
1098.67 719.081 1093.23 738.857 1098.92 741.898 cv
1103.17 744.165 1106.99 733.703 1108.66 728.231 cv
cp
f
864.13 722.699 mo
864.13 722.699 865.89 710.019 871.646 714.069 cv
877.402 718.119 879.652 741.188 872.729 743.478 cv
865.804 745.767 864.13 722.699 864.13 722.699 cv
cp
f
853.598 723.827 mo
853.598 723.827 855.358 711.146 861.114 715.196 cv
866.87 719.247 869.121 742.315 862.196 744.605 cv
855.271 746.895 853.598 723.827 853.598 723.827 cv
cp
f
844.638 730.973 mo
843.797 728.22 843.58 725.286 844.263 722.49 cv
844.872 719.992 846.186 717.827 849 719.159 cv
854.631 721.823 860.071 741.6 854.378 744.64 cv
850.134 746.906 846.31 736.444 844.638 730.973 cv
cp
f
1120.92 1140.22 mo
1120.89 1148.29 li
1135.49 1148.35 li
1135.52 1140.28 li
1120.92 1140.22 li
cp
0 0 0 rgb
f
1148.23 1140.33 mo
1148.2 1148.4 li
1162.8 1148.46 li
1162.83 1140.39 li
1148.23 1140.33 li
cp
f
1094.44 1140.11 mo
1094.4 1148.18 li
1108.99 1148.24 li
1109.03 1140.17 li
1094.44 1140.11 li
cp
f
1067.04 1140 mo
1067.01 1148.07 li
1081.45 1148.13 li
1081.49 1140.05 li
1067.04 1140 li
cp
f
1063.98 1114.53 mo
1065.47 1129.28 li
1066.55 1139.99 li
1190.71 1140.5 li
1190.71 1140.5 1190.91 1135.64 1189.53 1129.79 cv
1187.89 1122.9 1184.05 1114.65 1175.11 1111.37 cv
1144.42 1100.14 1118.96 1084.26 1115.2 1080.5 cv
1113.49 1078.8 1110.95 1077.98 1108.42 1078.36 cv
1069.98 1085.16 li
1066.49 1085.68 1063.9 1088.32 1063.77 1091.47 cv
1063.35 1101.76 li
1063.18 1106.02 1063.38 1110.3 1063.98 1114.53 cv
cp
.247059 .619608 .592157 rgb
f
1065.47 1129.28 mo
1066.55 1139.99 li
1067.04 1140 li
1067.01 1148.07 li
1081.45 1148.13 li
1081.49 1140.05 li
1094.44 1140.11 li
1094.4 1148.18 li
1108.99 1148.24 li
1109.03 1140.17 li
1120.92 1140.22 li
1120.89 1148.29 li
1135.49 1148.35 li
1135.52 1140.28 li
1148.23 1140.33 li
1148.2 1148.4 li
1162.8 1148.46 li
1162.83 1140.39 li
1176.29 1140.44 li
1176.25 1148.52 li
1190.68 1148.57 li
1190.71 1140.5 li
1190.71 1140.5 1190.91 1135.64 1189.53 1129.79 cv
1065.47 1129.28 li
cp
1 1 1 rgb
f
831.577 1075.71 mo
825.696 1070.18 li
815.695 1080.82 li
821.576 1086.35 li
831.577 1075.71 li
cp
0 0 0 rgb
f
812.87 1095.61 mo
806.99 1090.08 li
796.989 1100.71 li
802.869 1106.24 li
812.87 1095.61 li
cp
f
849.724 1056.42 mo
843.843 1050.89 li
833.849 1061.52 li
839.729 1067.05 li
849.724 1056.42 li
cp
f
868.49 1036.46 mo
862.61 1030.93 li
852.716 1041.45 li
858.597 1046.98 li
868.49 1036.46 li
cp
f
889.2 1051.59 mo
877.402 1042.62 li
868.824 1036.11 li
783.769 1126.55 li
783.769 1126.55 787.191 1130.01 792.413 1133 cv
798.564 1136.49 807.217 1139.32 815.71 1135.01 cv
844.857 1120.23 881.432 1113.12 886.747 1112.93 cv
889.155 1112.84 891.487 1111.54 892.935 1109.44 cv
906.588 1076.01 li
908.583 1073.11 908.423 1069.41 906.206 1067.17 cv
898.971 1059.84 li
895.97 1056.8 892.702 1054.04 889.2 1051.59 cv
cp
.247059 .619608 .592157 rgb
f
877.402 1042.62 mo
868.824 1036.11 li
868.49 1036.46 li
862.61 1030.93 li
852.716 1041.45 li
858.597 1046.98 li
849.724 1056.42 li
843.843 1050.89 li
833.849 1061.52 li
839.729 1067.05 li
831.577 1075.71 li
825.696 1070.18 li
815.695 1080.82 li
821.576 1086.35 li
812.87 1095.61 li
806.99 1090.08 li
796.989 1100.71 li
802.869 1106.24 li
793.649 1116.05 li
787.769 1110.52 li
777.888 1121.02 li
783.769 1126.55 li
783.769 1126.55 787.191 1130.01 792.413 1133 cv
877.402 1042.62 li
cp
1 1 1 rgb
f
888.132 1117.67 mo
888.132 1117.67 991.639 1135.91 1030.71 1120.38 cv
1079.55 1100.95 1017.59 966.11 1017.59 966.11 cv
1017.59 966.11 932.943 926.041 930.501 944.375 cv
928.059 962.719 946.967 1039.33 946.56 1043.29 cv
946.249 1046.34 890.73 1045.37 890.73 1045.37 cv
888.132 1117.67 li
cp
1 .729412 .341176 rgb
f
923.058 1060.25 mo
908.905 1060.25 895.237 1059.9 890.218 1059.76 cv
889.783 1059.74 889.439 1059.38 889.451 1058.95 cv
889.464 1058.51 889.864 1058.22 890.264 1058.18 cv
923.248 1059.12 959.41 1058.79 961.46 1056.31 cv
963.209 1053.44 954.397 1013.05 948.43 988.271 cv
948.328 987.846 948.589 987.42 949.013 987.318 cv
949.438 987.214 949.861 987.479 949.965 987.9 cv
952.568 998.715 965.425 1052.88 962.796 1057.15 cv
961.265 1059.64 941.741 1060.25 923.058 1060.25 cv
cp
.654902 .435294 .658824 rgb
f
934.95 971.896 mo
945.126 1002.83 969.354 1004.33 999.87 1002.7 cv
1030.4 1001.07 1052.58 1000.93 1052.58 1000.93 cv
1057.07 1091.04 li
1137.43 1086.12 li
1137.43 1086.12 1142.33 930.656 1121.79 916.013 cv
1095.51 897.3 1000.69 908.366 1000.69 908.366 cv
935.201 911.816 li
935.201 911.816 924.774 940.971 934.95 971.896 cv
cp
1 .729412 .341176 rgb
f
1069.98 1090.86 mo
1069.56 1090.86 1069.21 1090.54 1069.19 1090.11 cv
1064.71 988.887 li
1058 989.001 1009.41 989.769 993.517 988.875 cv
991.822 988.776 990.114 988.702 988.406 988.625 cv
972.737 987.92 956.536 987.188 947.861 971.632 cv
938.443 954.74 945.605 912.853 945.915 911.077 cv
945.989 910.646 946.407 910.347 946.827 910.437 cv
947.256 910.511 947.544 910.92 947.469 911.349 cv
947.395 911.777 940.092 954.46 949.239 970.861 cv
957.485 985.651 973.24 986.36 988.477 987.047 cv
990.191 987.124 991.905 987.201 993.606 987.297 cv
1010.54 988.252 1064.91 987.306 1065.45 987.297 cv
1065.89 987.343 1066.24 987.627 1066.26 988.052 cv
1070.77 1090.04 li
1070.79 1090.48 1070.45 1090.85 1070.02 1090.86 cv
1070.01 1090.86 1069.99 1090.86 1069.98 1090.86 cv
cp
.654902 .435294 .658824 rgb
f
779.925 685.443 mo
771.636 686.263 li
776.694 785.078 li
784.983 784.259 li
779.925 685.443 li
cp
.576471 .368627 .588235 rgb
f
773.679 735.3 mo
775.075 762.587 780.137 784.507 784.983 784.259 cv
789.83 784.011 792.628 761.688 791.23 734.401 cv
789.834 707.114 784.772 685.195 779.925 685.443 cv
775.078 685.691 772.281 708.013 773.679 735.3 cv
cp
f
765.389 736.12 mo
766.786 763.407 771.848 785.326 776.694 785.078 cv
781.541 784.83 784.338 762.509 782.941 735.222 cv
781.544 707.934 776.482 686.015 771.636 686.263 cv
766.789 686.511 763.992 708.833 765.389 736.12 cv
cp
.654902 .435294 .658824 rgb
f
761.087 735.286 mo
762.17 756.443 766.853 773.4 771.547 773.159 cv
776.24 772.919 779.168 755.573 778.084 734.416 cv
777.001 713.259 772.318 696.302 767.625 696.542 cv
762.931 696.782 760.004 714.129 761.087 735.286 cv
cp
.576471 .368627 .588235 rgb
f
757.528 735.634 mo
758.598 756.52 763.27 773.256 767.963 773.016 cv
772.657 772.774 775.595 755.649 774.526 734.764 cv
773.457 713.878 768.785 697.142 764.092 697.382 cv
759.397 697.622 756.459 714.748 757.528 735.634 cv
cp
f
2609.41 746.496 mo
2609.5 746.498 2978.66 746.332 2978.66 746.332 cv
2980.26 746.33 2981.57 745.025 2981.57 743.414 cv
2981.57 741.834 2980.31 740.548 2978.74 740.503 cv
2978.65 740.501 2609.49 740.667 2609.49 740.667 cv
2607.88 740.67 2606.58 741.973 2606.58 743.584 cv
2606.58 745.165 2607.84 746.451 2609.41 746.496 cv
cp
.364706 .156863 .4 rgb
f
2599.38 744.173 mo
2600 771.489 2604.43 793.545 2609.28 793.436 cv
2614.13 793.326 2617.57 771.094 2616.95 743.777 cv
2616.34 716.462 2611.91 694.406 2607.05 694.516 cv
2602.2 694.625 2598.77 716.857 2599.38 744.173 cv
cp
.576471 .368627 .588235 rgb
f
2591.07 744.756 mo
2591.69 772.071 2596.12 794.127 2600.97 794.018 cv
2605.83 793.908 2609.26 771.676 2608.64 744.359 cv
2608.03 717.044 2603.6 694.988 2598.75 695.098 cv
2593.89 695.207 2590.46 717.439 2591.07 744.756 cv
cp
.654902 .435294 .658824 rgb
f
2586.8 743.799 mo
2587.27 764.979 2591.47 782.063 2596.17 781.956 cv
2600.87 781.851 2604.29 764.596 2603.81 743.416 cv
2603.34 722.236 2599.14 705.152 2594.44 705.258 cv
2589.74 705.364 2586.32 722.619 2586.8 743.799 cv
cp
.576471 .368627 .588235 rgb
f
2583.23 744.045 mo
2583.7 764.952 2587.89 781.815 2592.59 781.709 cv
2597.29 781.604 2600.72 764.568 2600.25 743.661 cv
2599.78 722.754 2595.58 705.891 2590.89 705.996 cv
2586.19 706.102 2582.76 723.137 2583.23 744.045 cv
cp
f
767.625 696.542 mo
764.092 697.382 li
767.963 773.016 li
771.547 773.159 li
767.625 696.542 li
cp
f
1091.95 742.736 mo
1091.63 742.736 1091.3 742.706 1090.95 742.638 cv
1086.48 741.769 1085.69 735.217 1085.65 734.939 cv
1085.65 734.874 1085.65 734.807 1085.66 734.742 cv
1088 717.854 li
1088.07 717.422 1088.48 717.145 1088.9 717.179 cv
1089.33 717.24 1089.63 717.638 1089.57 718.069 cv
1087.24 734.854 li
1087.34 735.59 1088.15 740.486 1091.25 741.091 cv
1094.42 741.673 1095.43 737.846 1095.48 737.683 cv
1098.93 720.927 li
1099.02 720.498 1099.46 720.245 1099.86 720.313 cv
1100.29 720.402 1100.56 720.818 1100.47 721.247 cv
1097.01 738.033 li
1096.58 739.781 1095 742.736 1091.95 742.736 cv
cp
0 0 0 rgb
f
852.104 745.501 mo
851.688 745.501 851.341 745.177 851.315 744.758 cv
851.29 744.323 851.621 743.95 852.056 743.923 cv
855.692 743.707 855.877 739.796 855.883 739.63 cv
855.896 739.245 856.189 738.924 856.573 738.878 cv
856.943 738.807 857.319 739.063 857.429 739.436 cv
857.444 739.484 858.957 744.512 862.023 743.833 cv
865.198 743.125 865.332 737.913 865.334 737.86 cv
863.348 722.8 li
863.292 722.368 863.596 721.974 864.026 721.916 cv
864.447 721.878 864.855 722.162 864.913 722.597 cv
866.905 737.771 li
866.906 738.15 866.756 744.391 862.369 745.374 cv
859.629 745.969 857.871 743.926 856.89 742.157 cv
856.191 743.769 854.768 745.344 852.151 745.501 cv
852.134 745.501 852.119 745.501 852.104 745.501 cv
cp
f
856.67 740.446 mo
856.301 740.446 855.971 740.185 855.896 739.809 cv
852.823 723.978 li
852.739 723.549 853.02 723.136 853.447 723.053 cv
853.863 722.944 854.288 723.247 854.373 723.675 cv
857.447 739.507 li
857.53 739.935 857.25 740.348 856.823 740.432 cv
856.772 740.443 856.722 740.446 856.67 740.446 cv
cp
f
1099.71 742.985 mo
1098.91 742.985 1097.91 742.819 1097.06 742.16 cv
1095.94 741.294 1095.4 739.846 1095.45 737.854 cv
1095.46 737.42 1095.88 737.063 1096.26 737.084 cv
1096.7 737.094 1097.04 737.457 1097.03 737.892 cv
1097 739.353 1097.33 740.366 1098.02 740.908 cv
1099.06 741.726 1100.68 741.3 1100.7 741.294 cv
1101.11 741.177 1101.55 741.427 1101.67 741.846 cv
1101.78 742.265 1101.54 742.699 1101.12 742.816 cv
1101.07 742.829 1100.49 742.985 1099.71 742.985 cv
cp
f
877.022 756.5 mo
876.906 756.5 876.785 756.475 876.675 756.42 cv
868.833 752.555 875.857 735.42 876.16 734.692 cv
876.328 734.286 876.785 734.092 877.192 734.268 cv
877.595 734.434 877.784 734.896 877.617 735.297 cv
875.715 739.873 871.959 752.336 877.371 755.002 cv
877.763 755.196 877.923 755.668 877.73 756.059 cv
877.593 756.34 877.313 756.5 877.022 756.5 cv
cp
f
1077.58 754.712 mo
1077.34 754.712 1077.11 754.607 1076.95 754.404 cv
1076.69 754.059 1076.75 753.563 1077.1 753.298 cv
1083.77 748.166 1076.94 734.196 1076.87 734.058 cv
1076.68 733.666 1076.84 733.195 1077.23 733.001 cv
1077.61 732.813 1078.09 732.964 1078.28 733.355 cv
1078.59 733.978 1085.75 748.635 1078.06 754.549 cv
1077.91 754.66 1077.75 754.712 1077.58 754.712 cv
cp
f
1144.66 1098.95 mo
1127.01 1098.95 li
1126.57 1098.95 1126.22 1098.59 1126.22 1098.16 cv
1126.22 1097.72 1126.57 1097.37 1127.01 1097.37 cv
1144.66 1097.37 li
1145.09 1097.37 1145.45 1097.72 1145.45 1098.16 cv
1145.45 1098.59 1145.09 1098.95 1144.66 1098.95 cv
cp
1 1 1 rgb
f
1155.51 1105.13 mo
1135.83 1105.13 li
1135.39 1105.13 1135.04 1104.77 1135.04 1104.34 cv
1135.04 1103.9 1135.39 1103.55 1135.83 1103.55 cv
1155.51 1103.55 li
1155.95 1103.55 1156.3 1103.9 1156.3 1104.34 cv
1156.3 1104.77 1155.95 1105.13 1155.51 1105.13 cv
cp
f
858.114 1120.09 mo
857.971 1120.09 857.826 1120.05 857.695 1119.97 cv
857.327 1119.74 857.214 1119.25 857.445 1118.88 cv
866.81 1103.92 li
867.044 1103.56 867.53 1103.45 867.897 1103.67 cv
868.266 1103.9 868.378 1104.39 868.147 1104.76 cv
858.783 1119.72 li
858.634 1119.96 858.376 1120.09 858.114 1120.09 cv
cp
f
847.117 1122.32 mo
846.974 1122.32 846.829 1122.28 846.697 1122.2 cv
846.329 1121.97 846.217 1121.48 846.448 1121.11 cv
856.891 1104.42 li
857.122 1104.06 857.608 1103.95 857.979 1104.17 cv
858.347 1104.41 858.459 1104.89 858.229 1105.26 cv
847.785 1121.95 li
847.636 1122.18 847.379 1122.32 847.117 1122.32 cv
cp
f
1076.51 975.512 mo
1076.45 975.512 1076.4 975.515 1076.35 975.521 cv
1073.77 975.777 1069.74 981.759 1067.18 986.492 cv
1071.12 984.692 1077.35 981.284 1078.19 978.249 cv
1078.39 977.524 1078.26 976.89 1077.78 976.258 cv
1077.3 975.632 1076.84 975.512 1076.51 975.512 cv
cp
1065.47 988.875 mo
1065.25 988.875 1065.04 988.785 1064.89 988.622 cv
1064.67 988.382 1064.62 988.03 1064.76 987.737 cv
1065.43 986.379 1071.41 974.424 1076.19 973.949 cv
1076.94 973.872 1078.07 974.045 1079.03 975.3 cv
1079.8 976.313 1080.04 977.479 1079.71 978.671 cv
1078.31 983.713 1067.04 988.311 1065.76 988.819 cv
1065.66 988.856 1065.57 988.875 1065.47 988.875 cv
cp
.654902 .435294 .658824 rgb
f
963.711 1058.42 mo
965.734 1062.85 968.962 1068.41 971.246 1068.79 cv
971.548 1068.85 972.015 1068.84 972.563 1068.2 cv
973.043 1067.65 973.198 1067.08 973.055 1066.41 cv
972.467 1063.64 967.177 1060.28 963.711 1058.42 cv
cp
971.459 1070.39 mo
971.289 1070.39 971.132 1070.37 970.987 1070.35 cv
966.614 1069.62 961.915 1058.32 961.394 1057.03 cv
961.271 1056.73 961.346 1056.39 961.582 1056.16 cv
961.817 1055.94 962.163 1055.89 962.458 1056.02 cv
963.594 1056.55 973.591 1061.35 974.6 1066.08 cv
974.843 1067.23 974.552 1068.32 973.756 1069.24 cv
972.969 1070.14 972.131 1070.39 971.459 1070.39 cv
cp
f
952.112 929.618 mo
951.749 929.618 951.422 929.365 951.343 928.998 cv
951.248 928.573 951.518 928.15 951.943 928.059 cv
961.855 925.889 968.062 915.577 968.121 915.475 cv
968.345 915.1 968.828 914.97 969.203 915.197 cv
969.577 915.42 969.702 915.903 969.48 916.276 cv
969.214 916.727 962.856 927.284 952.28 929.599 cv
952.225 929.611 952.168 929.618 952.112 929.618 cv
cp
f
995.266 801.094 mo
983.399 801.094 975.653 792.865 975.563 792.77 cv
975.268 792.449 975.288 791.949 975.608 791.654 cv
975.929 791.364 976.429 791.383 976.723 791.697 cv
976.821 791.805 986.749 802.308 1001.18 798.791 cv
1001.6 798.687 1002.03 798.948 1002.13 799.371 cv
1002.23 799.796 1001.97 800.222 1001.55 800.326 cv
999.353 800.862 997.251 801.094 995.266 801.094 cv
cp
1 1 1 rgb
f
1038.04 860.529 mo
1037.63 860.529 1037.29 860.212 1037.26 859.796 cv
1036.17 844.042 li
1036.14 843.607 1036.46 843.229 1036.9 843.2 cv
1037.32 843.13 1037.71 843.496 1037.74 843.931 cv
1038.83 859.685 li
1038.86 860.119 1038.53 860.499 1038.1 860.526 cv
1038.08 860.529 1038.06 860.529 1038.04 860.529 cv
cp
f
929.687 862.529 mo
929.255 862.529 928.902 862.182 928.897 861.75 cv
928.78 850.818 li
928.775 850.381 929.125 850.026 929.562 850.021 cv
930.001 850.021 930.354 850.369 930.358 850.8 cv
930.476 861.731 li
930.479 862.169 930.13 862.523 929.694 862.529 cv
929.692 862.529 929.689 862.529 929.687 862.529 cv
cp
f
1643.92 1113.02 mo
1268 1113.02 li
1257.4 1113.02 1248.82 1104.43 1248.82 1093.84 cv
1248.82 1090.16 li
1248.82 1079.57 1257.4 1070.99 1268 1070.99 cv
1643.92 1070.99 li
1654.51 1070.99 1663.1 1079.57 1663.1 1090.16 cv
1663.1 1093.84 li
1663.1 1104.43 1654.51 1113.02 1643.92 1113.02 cv
cp
.654902 .435294 .658824 rgb
f
2115.24 1115.04 mo
1762.66 1115.04 li
1750.93 1115.04 1741.42 1105.53 1741.42 1093.8 cv
1741.42 1082.07 1750.93 1072.56 1762.66 1072.56 cv
2115.24 1072.56 li
2126.97 1072.56 2136.48 1082.07 2136.48 1093.8 cv
2136.48 1105.53 2126.97 1115.04 2115.24 1115.04 cv
cp
.364706 .156863 .4 rgb
f
3091.94 1113.9 mo
2697.31 1113.9 li
2685.71 1113.9 2676.3 1104.49 2676.3 1092.89 cv
2676.3 1081.28 2685.71 1071.87 2697.31 1071.87 cv
3091.94 1071.87 li
3103.55 1071.87 3112.96 1081.28 3112.96 1092.89 cv
3112.96 1104.49 3103.55 1113.9 3091.94 1113.9 cv
cp
f
2633.61 1114.15 mo
2178.22 1114.15 li
2166.61 1114.15 2157.2 1104.74 2157.2 1093.14 cv
2157.2 1081.53 2166.61 1072.12 2178.22 1072.12 cv
2633.61 1072.12 li
2645.22 1072.12 2654.63 1081.53 2654.63 1093.14 cv
2654.63 1104.74 2645.22 1114.15 2633.61 1114.15 cv
cp
f
2382.64 1079.32 mo
2427.9 1079.32 li
2428.51 980.53 li
2377.37 980.53 li
2382.64 1079.32 li
cp
.247059 .619608 .592157 rgb
f
2466.83 995.064 mo
2466.83 995.064 2571.5 1022.66 2577.61 1062.64 cv
2583.72 1102.63 2514.31 1112.27 2479.17 1114.77 cv
2444.03 1117.26 2428.51 1101.85 2428.51 1101.85 cv
2408.69 980.53 li
2466.83 995.064 li
cp
f
2579.99 896.125 mo
2579.99 896.125 2543.83 971.207 2505.33 973.606 cv
2466.83 976.006 2455.72 920.225 2455.72 920.225 cv
2502.12 912.348 li
2553.77 889.636 li
2579.99 896.125 li
cp
.956863 .517647 .384314 rgb
f
2239.33 895.392 mo
2239.33 895.392 2280.03 970.473 2323.36 972.872 cv
2366.68 975.271 2379.19 919.491 2379.19 919.491 cv
2323.36 908.288 li
2268.83 888.901 li
2239.33 895.392 li
cp
f
2339.81 995.064 mo
2339.81 995.064 2235.14 1022.66 2229.03 1062.64 cv
2222.92 1102.63 2299.74 1112.27 2334.88 1114.77 cv
2370.03 1117.26 2374.26 1098.55 2374.26 1098.55 cv
2397.95 980.53 li
2339.81 995.064 li
cp
.247059 .619608 .592157 rgb
f
2355.88 991.048 mo
2355.88 991.048 2360.3 869.197 2386.67 859.442 cv
2415.5 848.775 2460.9 858.943 2470.03 875.477 cv
2479.16 892.009 2462.06 993.872 2462.06 993.872 cv
2462.06 993.872 2404.94 1000.5 2355.88 991.048 cv
cp
.654902 .435294 .658824 rgb
f
2435.83 840.761 mo
2435.37 861.266 li
2435.37 861.266 2431.54 867.078 2419.53 867.787 cv
2410.58 868.314 2407.48 866.225 2407.48 866.225 cv
2408.96 855.867 li
2410.41 845.768 li
2432.18 841.483 li
2435.83 840.761 li
cp
.956863 .517647 .384314 rgb
f
2432.18 841.483 mo
2432.11 842.042 2431.89 842.698 2431.54 843.449 cv
2426.72 853.59 2414.13 855.52 2408.96 855.867 cv
2410.41 845.768 li
2432.18 841.483 li
cp
0 0 0 rgb
f
2406.88 798.927 mo
2406.88 798.927 2395.54 824.397 2399.47 838.775 cv
2403.39 853.153 2416.48 850.982 2424.33 848.261 cv
2432.17 845.538 2435.83 840.766 2435.83 840.766 cv
2435.83 840.766 2443.12 843.292 2448.06 836.529 cv
2452.99 829.767 2450.03 821.942 2445.87 820.126 cv
2441.71 818.311 2436.73 821.289 2436.73 821.289 cv
2440.67 813.892 li
2440.67 813.892 2424.56 776.055 2406.88 798.927 cv
cp
.956863 .517647 .384314 rgb
f
2407.84 831.366 mo
2407.5 831.366 2407.19 831.15 2407.08 830.812 cv
2405.4 825.362 2409.24 819.815 2409.41 819.585 cv
2409.66 819.224 2410.15 819.141 2410.5 819.394 cv
2410.86 819.643 2410.95 820.136 2410.69 820.49 cv
2410.66 820.543 2407.14 825.644 2408.59 830.343 cv
2408.72 830.759 2408.49 831.203 2408.07 831.332 cv
2408 831.354 2407.92 831.366 2407.84 831.366 cv
cp
0 0 0 rgb
f
2437.82 833.246 mo
2437.62 833.246 2437.43 833.175 2437.27 833.03 cv
2436.96 832.731 2436.94 832.232 2437.24 831.915 cv
2444.18 824.562 li
2444.48 824.247 2444.98 824.229 2445.3 824.531 cv
2445.61 824.83 2445.63 825.329 2445.33 825.646 cv
2438.39 833 li
2438.24 833.163 2438.03 833.246 2437.82 833.246 cv
cp
f
2445.16 831.277 mo
2445.04 831.268 2440.25 830.54 2440.25 830.54 cv
2439.81 830.476 2439.52 830.071 2439.58 829.644 cv
2439.65 829.212 2440.01 828.91 2440.48 828.98 cv
2445.28 829.708 li
2445.71 829.772 2446 830.177 2445.94 830.605 cv
2445.88 830.996 2445.55 831.277 2445.16 831.277 cv
cp
f
2436.73 821.289 mo
2436.73 821.289 2434.09 823.021 2432.18 820.022 cv
2430.26 817.024 2434.45 808.165 2434.45 808.165 cv
2434.45 808.165 2426.54 809.961 2421.66 807.345 cv
2416.77 804.729 2414.37 797.531 2414.37 797.531 cv
2414.37 797.531 2398.2 804.819 2396.33 793.685 cv
2393.37 775.977 2416.47 782.836 2416.47 782.836 cv
2416.47 782.836 2417.93 776.148 2432.18 781.415 cv
2445.16 786.213 2447.36 798.502 2447.36 798.502 cv
2447.36 798.502 2449.93 799.785 2451.43 808.266 cv
2452.93 816.745 2448.23 821.961 2448.23 821.961 cv
2448.23 821.961 2442.6 818.657 2436.73 821.289 cv
cp
f
2423.85 812.715 mo
2423.56 812.715 2423.29 812.558 2423.14 812.287 cv
2421.98 810.019 2418.86 810.645 2418.73 810.672 cv
2418.34 810.768 2417.89 810.49 2417.79 810.064 cv
2417.7 809.64 2417.97 809.221 2418.4 809.131 cv
2418.58 809.085 2422.83 808.219 2424.55 811.565 cv
2424.75 811.954 2424.6 812.429 2424.21 812.629 cv
2424.09 812.688 2423.97 812.715 2423.85 812.715 cv
cp
f
2410.05 809.775 mo
2409.8 809.775 2409.55 809.655 2409.4 809.43 cv
2408.96 808.782 2408.44 808.428 2407.82 808.352 cv
2406.28 808.157 2404.71 809.565 2404.69 809.578 cv
2404.37 809.867 2403.87 809.831 2403.58 809.507 cv
2403.29 809.181 2403.32 808.685 2403.65 808.395 cv
2403.73 808.317 2405.83 806.478 2408.01 806.785 cv
2409.09 806.918 2410 807.51 2410.7 808.542 cv
2410.95 808.899 2410.85 809.393 2410.49 809.636 cv
2410.36 809.731 2410.2 809.775 2410.05 809.775 cv
cp
f
2323.36 908.288 mo
2323.36 908.288 2351.94 928.223 2361.4 945.188 cv
2370.86 962.153 2388.25 859.512 2388.25 859.512 cv
2388.25 859.512 2348.8 866.298 2323.36 908.288 cv
cp
.654902 .435294 .658824 rgb
f
2271.12 890.608 mo
2271.12 890.608 2268.34 876.267 2261.44 866.637 cv
2254.54 857.007 2250.15 861.964 2251.16 865.873 cv
2252.16 869.783 2257.13 875.049 2253.65 878.158 cv
2250.18 881.269 2240 874.206 2243.55 869.322 cv
2247.1 864.438 2251.22 868.557 2251.53 862.11 cv
2251.84 855.665 2234.24 858.847 2230.21 862.109 cv
2226.18 865.371 2228.68 876.507 2228.68 876.507 cv
2228.68 876.507 2205.84 859.994 2201.39 864.85 cv
2196.95 869.705 2211.55 882.136 2211.55 882.136 cv
2211.55 882.136 2200.6 873.035 2200.88 880.899 cv
2201.16 888.763 2228.41 904.864 2239.12 908.844 cv
2249.83 912.824 2252.13 911.345 2252.13 911.345 cv
2271.12 890.608 li
cp
.956863 .517647 .384314 rgb
f
2222.24 891.396 mo
2222.11 891.396 2221.98 891.366 2221.86 891.298 cv
2221.46 891.082 2212.15 885.911 2209.65 881.439 cv
2209.44 881.058 2209.57 880.576 2209.95 880.364 cv
2210.34 880.148 2210.82 880.287 2211.03 880.669 cv
2213.31 884.753 2222.52 889.865 2222.62 889.918 cv
2223 890.127 2223.14 890.607 2222.93 890.99 cv
2222.79 891.249 2222.51 891.396 2222.24 891.396 cv
cp
0 0 0 rgb
f
2360.07 943.76 mo
2359.6 943.742 2359.26 943.375 2359.28 942.94 cv
2359.94 926.363 2365.08 900.205 2365.13 899.943 cv
2365.22 899.518 2365.62 899.233 2366.06 899.323 cv
2366.49 899.406 2366.77 899.822 2366.68 900.251 cv
2366.63 900.51 2361.51 926.551 2360.85 943.002 cv
2360.84 943.427 2360.49 943.76 2360.07 943.76 cv
cp
1 .729412 .341176 rgb
f
2416.36 868.982 mo
2408.8 868.982 2405.29 865.861 2405.1 865.691 cv
2404.78 865.396 2404.76 864.899 2405.05 864.579 cv
2405.34 864.259 2405.85 864.233 2406.16 864.526 cv
2406.22 864.576 2411.65 869.313 2423.67 866.499 cv
2433.96 864.089 2436.02 859.272 2436.04 859.223 cv
2436.2 858.822 2436.66 858.625 2437.06 858.782 cv
2437.46 858.939 2437.67 859.393 2437.51 859.796 cv
2437.42 860.023 2435.23 865.411 2424.03 868.033 cv
2421.12 868.715 2418.56 868.982 2416.36 868.982 cv
cp
f
2323.88 910.778 mo
2323.59 914.116 2323.43 920.07 2325.42 922.622 cv
2325.93 923.278 2326.54 923.633 2327.29 923.703 cv
2328.03 923.783 2328.18 923.519 2328.25 923.42 cv
2329.25 921.839 2326.57 915.663 2323.88 910.778 cv
cp
2327.52 925.294 mo
2327.4 925.294 2327.27 925.288 2327.14 925.275 cv
2325.95 925.161 2324.95 924.595 2324.17 923.593 cv
2320.93 919.436 2322.51 908.631 2322.58 908.171 cv
2322.62 907.842 2322.87 907.58 2323.2 907.515 cv
2323.54 907.45 2323.86 907.598 2324.03 907.885 cv
2325.32 910.042 2331.66 920.973 2329.58 924.265 cv
2329.27 924.748 2328.67 925.294 2327.52 925.294 cv
cp
.898039 .439216 .333333 rgb
f
2511.55 909.021 mo
2511.55 909.021 2479.05 936.492 2469.6 953.458 cv
2460.14 970.424 2446.66 860.246 2446.66 860.246 cv
2446.66 860.246 2486.11 867.032 2511.55 909.021 cv
cp
.654902 .435294 .658824 rgb
f
2551.36 890.608 mo
2551.36 890.608 2554.14 876.267 2561.04 866.637 cv
2567.94 857.007 2572.33 861.964 2571.32 865.873 cv
2570.32 869.783 2565.35 875.049 2568.83 878.158 cv
2572.3 881.269 2582.48 874.206 2578.93 869.322 cv
2575.38 864.438 2571.26 868.557 2570.95 862.11 cv
2570.64 855.665 2588.23 858.847 2592.27 862.109 cv
2596.3 865.371 2593.8 876.507 2593.8 876.507 cv
2593.8 876.507 2616.64 859.994 2621.08 864.85 cv
2625.52 869.705 2610.93 882.136 2610.93 882.136 cv
2610.93 882.136 2621.88 873.035 2621.6 880.899 cv
2621.32 888.763 2594.07 904.864 2583.36 908.844 cv
2572.65 912.824 2570.35 911.345 2570.35 911.345 cv
2551.36 890.608 li
cp
.956863 .517647 .384314 rgb
f
2600.24 891.396 mo
2599.96 891.396 2599.69 891.249 2599.55 890.99 cv
2599.34 890.607 2599.48 890.127 2599.86 889.918 cv
2599.95 889.865 2609.17 884.749 2611.45 880.669 cv
2611.66 880.287 2612.14 880.148 2612.52 880.364 cv
2612.9 880.576 2613.04 881.058 2612.83 881.439 cv
2610.33 885.911 2601.02 891.082 2600.62 891.298 cv
2600.5 891.366 2600.37 891.396 2600.24 891.396 cv
cp
0 0 0 rgb
f
2512.46 910.621 mo
2512.67 916.196 2513.55 922.875 2515.23 923.716 cv
2515.32 923.771 2515.59 923.904 2516.19 923.467 cv
2516.79 923.02 2517.14 922.4 2517.24 921.574 cv
2517.61 918.557 2514.64 913.647 2512.46 910.621 cv
cp
2515.47 925.358 mo
2515.09 925.358 2514.77 925.254 2514.52 925.127 cv
2511.04 923.377 2510.84 910.741 2510.83 908.227 cv
2510.83 907.894 2511.04 907.598 2511.35 907.484 cv
2511.67 907.373 2512.02 907.466 2512.23 907.725 cv
2512.53 908.082 2519.44 916.532 2518.8 921.766 cv
2518.65 923.028 2518.09 924.027 2517.13 924.736 cv
2516.5 925.198 2515.94 925.358 2515.47 925.358 cv
cp
.898039 .439216 .333333 rgb
f
2412.77 839.462 mo
2412.39 839.462 2412.05 839.185 2411.99 838.797 cv
2411.92 838.365 2412.22 837.961 2412.65 837.894 cv
2412.68 837.888 2416.36 837.28 2417.89 834.796 cv
2418.12 834.427 2418.61 834.31 2418.98 834.54 cv
2419.35 834.771 2419.46 835.259 2419.24 835.629 cv
2417.31 838.731 2413.07 839.425 2412.89 839.453 cv
2412.85 839.459 2412.81 839.462 2412.77 839.462 cv
cp
0 0 0 rgb
f
2420.92 819.887 mo
2419.04 819.887 2417.42 819.319 2417.31 819.282 cv
2416.9 819.138 2416.69 818.688 2416.83 818.277 cv
2416.98 817.868 2417.43 817.652 2417.84 817.797 cv
2417.87 817.803 2421.09 818.925 2423.2 817.837 cv
2423.58 817.64 2424.06 817.791 2424.26 818.18 cv
2424.46 818.564 2424.31 819.042 2423.92 819.242 cv
2422.98 819.727 2421.91 819.887 2420.92 819.887 cv
cp
f
2405.39 819.412 mo
2404.46 819.412 2403.36 819.239 2402.28 818.679 cv
2401.89 818.481 2401.74 818.004 2401.94 817.618 cv
2402.13 817.224 2402.61 817.069 2403 817.279 cv
2405.08 818.352 2407.31 817.535 2407.33 817.522 cv
2407.73 817.368 2408.19 817.572 2408.34 817.979 cv
2408.5 818.383 2408.3 818.839 2407.89 818.996 cv
2407.82 819.023 2406.79 819.412 2405.39 819.412 cv
cp
f
2438.55 786.524 mo
2438.55 786.524 2448.78 763.511 2460.22 774.471 cv
2472.42 786.161 2452.09 802.314 2443.5 798.539 cv
2434.9 794.764 2438.55 786.524 2438.55 786.524 cv
cp
f
2471.66 1100.95 mo
2471.66 1100.95 2449.39 1117.09 2448.81 1119.17 cv
2448.23 1121.25 2439.37 1163.89 2432.95 1169.01 cv
2426.52 1174.13 2420.57 1170.72 2420.57 1170.72 cv
2420.57 1170.72 2406.15 1075.57 2407.44 1072.12 cv
2408.73 1068.67 2449.22 1060.64 2449.22 1060.64 cv
2471.66 1100.95 li
cp
.956863 .517647 .384314 rgb
f
2423.97 1171.74 mo
2413.39 1069.23 li
2399.57 1071.37 li
2412.31 1173.67 li
2423.97 1171.74 li
cp
0 0 0 rgb
f
2441.02 1150.26 mo
2444.85 1136.04 li
2419.87 1131.92 li
2418.38 1144.97 li
2441.02 1150.26 li
cp
f
2334.21 1100.04 mo
2334.21 1100.04 2356.49 1116.18 2357.07 1118.26 cv
2357.65 1120.34 2366.5 1162.97 2372.93 1168.1 cv
2379.35 1173.22 2385.31 1169.81 2385.31 1169.81 cv
2385.31 1169.81 2399.73 1074.66 2398.44 1071.21 cv
2397.15 1067.75 2356.66 1059.72 2356.66 1059.72 cv
2334.21 1100.04 li
cp
.956863 .517647 .384314 rgb
f
2381.9 1170.83 mo
2392.48 1068.31 li
2406.31 1070.46 li
2393.57 1172.75 li
2381.9 1170.83 li
cp
0 0 0 rgb
f
2364.86 1149.35 mo
2361.03 1135.13 li
2386.01 1131.01 li
2387.49 1144.06 li
2364.86 1149.35 li
cp
f
2391.22 1052.08 mo
2357.07 1118.26 li
2309.26 1099.49 li
2329.23 1052.08 li
2391.22 1052.08 li
cp
.247059 .619608 .592157 rgb
f
2413.26 1055.27 mo
2450.63 1121.45 li
2494.76 1102.68 li
2474.79 1055.27 li
2413.26 1055.27 li
cp
f
2298.35 1026.22 mo
2298.29 1026.22 2298.23 1026.22 2298.18 1026.23 cv
2297.69 1026.26 2297.49 1026.46 2297.38 1026.6 cv
2296.67 1027.52 2296.48 1028.39 2296.81 1029.24 cv
2298.26 1032.99 2308.53 1035.98 2314.67 1037.33 cv
2310.03 1033.07 2301.84 1026.22 2298.35 1026.22 cv
cp
2317.21 1039.43 mo
2315.1 1039.07 2297.66 1035.81 2295.34 1029.81 cv
2294.97 1028.85 2294.81 1027.35 2296.13 1025.64 cv
2296.58 1025.05 2297.25 1024.71 2298.07 1024.65 cv
2303.45 1024.3 2316.31 1036.67 2317.76 1038.08 cv
2318.01 1038.32 2318.07 1038.7 2317.92 1039.01 cv
2317.78 1039.27 2317.51 1039.43 2317.21 1039.43 cv
cp
1 1 1 rgb
f
2381.96 1051.14 mo
2381.89 1051.14 2381.82 1051.13 2381.75 1051.11 cv
2381.34 1051 2340.5 1039.76 2284.92 1036.43 cv
2284.48 1036.4 2284.15 1036.03 2284.18 1035.59 cv
2284.2 1035.16 2284.57 1034.82 2285.01 1034.85 cv
2340.77 1038.2 2381.76 1049.48 2382.17 1049.59 cv
2382.59 1049.71 2382.84 1050.14 2382.72 1050.56 cv
2382.62 1050.91 2382.31 1051.14 2381.96 1051.14 cv
cp
f
2420.57 1056.06 mo
2420.24 1056.06 2419.94 1055.86 2419.83 1055.54 cv
2419.68 1055.13 2419.89 1054.68 2420.3 1054.53 cv
2420.75 1054.36 2465.84 1038.2 2521.63 1034.85 cv
2522.04 1034.82 2522.43 1035.16 2522.46 1035.59 cv
2522.49 1036.03 2522.16 1036.4 2521.72 1036.43 cv
2466.17 1039.76 2421.28 1055.85 2420.84 1056.01 cv
2420.75 1056.04 2420.66 1056.06 2420.57 1056.06 cv
cp
f
2508.25 1026.11 mo
2504.78 1026.11 2496.64 1033.1 2492.05 1037.44 cv
2498.17 1036 2508.39 1032.87 2509.79 1029.1 cv
2510.11 1028.25 2509.91 1027.38 2509.18 1026.47 cv
2509.07 1026.33 2508.87 1026.14 2508.38 1026.11 cv
2508.34 1026.11 2508.29 1026.11 2508.25 1026.11 cv
cp
2489.52 1039.58 mo
2489.23 1039.58 2488.96 1039.42 2488.82 1039.16 cv
2488.66 1038.86 2488.72 1038.48 2488.96 1038.23 cv
2490.38 1036.82 2502.8 1024.53 2508.28 1024.53 cv
2508.34 1024.53 2508.41 1024.53 2508.47 1024.53 cv
2509.29 1024.58 2509.96 1024.91 2510.42 1025.49 cv
2511.76 1027.19 2511.62 1028.69 2511.27 1029.65 cv
2509.03 1035.68 2491.64 1039.19 2489.67 1039.56 cv
2489.62 1039.58 2489.57 1039.58 2489.52 1039.58 cv
cp
f
2009.69 581.269 mo
2031.84 525.092 li
2031.84 525.092 2076.99 506.219 2087.39 523.346 cv
2097.8 540.474 2080.61 565.268 2080.61 565.268 cv
2069.18 573.021 li
2047.89 610.812 li
2009.69 581.269 li
cp
.956863 .517647 .384314 rgb
f
1913.46 643.892 mo
1870.59 601.36 li
1870.59 601.36 1871.07 552.433 1890.91 549.632 cv
1910.76 546.832 1926.75 572.407 1926.75 572.407 cv
1929.36 585.972 li
1955.68 620.447 li
1913.46 643.892 li
cp
f
2019.02 550.641 mo
2031.92 509.169 li
2033.26 505.776 2036.85 503.839 2040.42 504.574 cv
2151.99 527.5 li
2156.31 528.389 2158.36 533.399 2155.85 537.026 cv
2151.33 543.543 2143.8 553.034 2132.82 557.595 cv
2105.37 568.99 2080.61 565.268 2080.61 565.268 cv
2080.61 565.268 2071.81 556.469 2069.51 544.518 cv
2067.37 533.376 2069.66 522.115 2069.66 522.115 cv
2069.66 522.115 2039.33 560.324 2019.02 550.641 cv
cp
1 .729412 .341176 rgb
f
1886.61 623.279 mo
1855.96 592.516 li
1853.59 589.741 1853.55 585.665 1855.87 582.847 cv
1928.23 494.893 li
1931.03 491.485 1936.42 492.011 1938.46 495.926 cv
1942.11 502.959 1946.99 514.05 1945.89 525.893 cv
1943.16 555.486 1928.3 575.641 1928.3 575.641 cv
1928.3 575.641 1916.42 579.315 1904.77 575.771 cv
1893.92 572.467 1885.03 565.184 1885.03 565.184 cv
1885.03 565.184 1904.66 609.838 1886.61 623.279 cv
cp
f
2022.6 805.277 mo
2022.6 805.277 2051.37 730.251 2050.82 703.815 cv
2050.26 677.38 1948.89 586.645 1948.89 586.645 cv
1895.97 641.433 li
1948.66 703.328 li
1978.36 837.449 li
2022.6 805.277 li
cp
.156863 .423529 .486275 rgb
f
1925.44 849.472 mo
1925.44 849.472 1896.96 787.888 1910.44 735.286 cv
1923.92 682.684 2010.73 562.646 2010.73 562.646 cv
2070.31 608.905 li
2070.31 608.905 1997 722.659 1993.88 756.311 cv
1990.76 789.962 2001.59 832.172 2001.59 832.172 cv
1925.44 849.472 li
cp
f
1943.67 984.334 mo
1947.86 1073.64 li
1947.86 1073.64 1918.48 1081.47 1911.88 1085.16 cv
1901.61 1090.89 1905.44 1094.05 1905.44 1094.05 cv
1905.44 1094.05 1892.99 1097.96 1896.14 1100.58 cv
1901.07 1104.69 1916.88 1099.93 1916.88 1099.93 cv
1916.88 1099.93 1904.63 1102.26 1915.75 1105.16 cv
1926.88 1108.05 1964.09 1094.55 1966.08 1095.79 cv
1968.07 1097.02 1979.84 1099.9 1985.03 1099.73 cv
1990.21 1099.57 1982.11 1089.44 1979.47 1088.23 cv
1976.84 1087.01 1979.81 1078.48 1979.81 1078.48 cv
1996.23 999.462 li
1943.67 984.334 li
cp
.956863 .517647 .384314 rgb
f
2063.72 811.005 mo
2118.26 759.226 li
2118.26 759.226 2118.09 750.631 2120.49 745.826 cv
2122.89 741.022 2117.54 723.832 2123.12 720.09 cv
2128.7 716.347 2132.23 736.77 2132.23 736.77 cv
2132.23 736.77 2150.1 706.244 2153.81 706.068 cv
2158.74 705.837 2154.22 718.859 2154.22 718.859 cv
2154.22 718.859 2162.83 707.165 2167.21 708.846 cv
2172.17 710.748 2165.7 724.767 2165.7 724.767 cv
2165.7 724.767 2171.74 716.381 2172.53 722.245 cv
2173.33 728.109 2165.83 742.664 2165.83 742.664 cv
2165.83 742.664 2173.81 725.701 2175 734.498 cv
2176.2 743.294 2160.68 766.505 2152.83 770.554 cv
2144.99 774.604 2144.99 774.604 2144.99 774.604 cv
2144.99 774.604 2111.03 842.32 2090.05 846.659 cv
2069.07 850.997 2063.72 811.005 2063.72 811.005 cv
cp
f
1913.54 1101.63 mo
1913.24 1101.63 1912.94 1101.45 1912.81 1101.15 cv
1912.64 1100.74 1912.83 1100.28 1913.23 1100.11 cv
1931.12 1092.51 li
1931.52 1092.35 1931.98 1092.52 1932.16 1092.93 cv
1932.32 1093.33 1932.14 1093.79 1931.74 1093.96 cv
1913.85 1101.56 li
1913.75 1101.6 1913.65 1101.63 1913.54 1101.63 cv
cp
0 0 0 rgb
f
1904.7 1094.94 mo
1904.39 1094.94 1904.1 1094.76 1903.97 1094.46 cv
1903.8 1094.05 1903.99 1093.59 1904.39 1093.42 cv
1924.27 1084.97 li
1924.68 1084.81 1925.13 1084.98 1925.31 1085.39 cv
1925.48 1085.79 1925.29 1086.25 1924.89 1086.42 cv
1905 1094.87 li
1904.9 1094.91 1904.8 1094.94 1904.7 1094.94 cv
cp
f
2145.93 736.199 mo
2145.81 736.199 2145.69 736.172 2145.57 736.116 cv
2145.19 735.922 2145.03 735.448 2145.22 735.057 cv
2153.51 718.504 li
2153.7 718.118 2154.18 717.965 2154.57 718.152 cv
2154.96 718.347 2155.12 718.821 2154.92 719.213 cv
2146.63 735.765 li
2146.5 736.04 2146.22 736.199 2145.93 736.199 cv
cp
f
2157.93 740.259 mo
2157.8 740.259 2157.68 740.228 2157.56 740.166 cv
2157.17 739.963 2157.03 739.484 2157.23 739.1 cv
2165 724.396 li
2165.21 724.015 2165.68 723.872 2166.07 724.069 cv
2166.45 724.273 2166.6 724.751 2166.39 725.136 cv
2158.63 739.84 li
2158.48 740.104 2158.21 740.259 2157.93 740.259 cv
cp
f
1932.56 993.367 mo
1943.11 913.638 li
1913.78 841.639 li
2027.17 792.914 li
2037.41 809.587 li
2068.35 785.921 li
2110.5 834.623 li
2029.78 928.691 li
2002.71 1007.75 li
1932.56 993.367 li
cp
.364706 .156863 .4 rgb
f
2023.86 944.378 mo
2014.73 926.221 li
2014.73 926.221 2015.38 919.354 2025.57 913.149 cv
2033.15 908.527 2036.83 908.918 2036.83 908.918 cv
2040.36 918.669 li
2043.78 928.184 li
2026.72 942.048 li
2023.86 944.378 li
cp
.956863 .517647 .384314 rgb
f
2026.72 942.048 mo
2026.52 941.529 2026.41 940.85 2026.37 940.031 cv
2025.87 928.918 2035.99 921.376 2040.36 918.669 cv
2043.78 928.184 li
2026.72 942.048 li
cp
0 0 0 rgb
f
2068.64 967.534 mo
2068.64 967.534 2066.72 939.977 2056.6 929.218 cv
2046.49 918.459 2036.04 926.442 2030.44 932.469 cv
2024.84 938.495 2023.85 944.375 2023.85 944.375 cv
2023.85 944.375 2016.3 945.553 2015.12 953.764 cv
2013.95 961.975 2020.17 967.448 2024.66 967.104 cv
2029.14 966.76 2032.12 961.837 2032.12 961.837 cv
2032.11 970.142 li
2032.11 970.142 2063.79 995.77 2068.64 967.534 cv
cp
.956863 .517647 .384314 rgb
f
2056.05 951.323 mo
2055.52 951.262 2055.21 950.867 2055.27 950.436 cv
2055.27 950.374 2055.99 944.278 2052.53 940.839 cv
2052.22 940.533 2052.22 940.034 2052.53 939.723 cv
2052.84 939.415 2053.34 939.415 2053.65 939.723 cv
2057.66 943.711 2056.87 950.353 2056.83 950.633 cv
2056.78 951.03 2056.44 951.323 2056.05 951.323 cv
cp
0 0 0 rgb
f
2023.32 963.019 mo
2023.26 963.019 2023.19 963.009 2023.12 962.99 cv
2022.7 962.874 2022.45 962.439 2022.56 962.02 cv
2025.22 952.358 li
2025.33 951.945 2025.77 951.702 2026.19 951.807 cv
2026.61 951.924 2026.86 952.358 2026.74 952.777 cv
2024.08 962.439 li
2023.99 962.787 2023.67 963.019 2023.32 963.019 cv
cp
f
2020.47 958.494 mo
2020.14 958.494 2019.84 958.291 2019.72 957.968 cv
2019.58 957.555 2019.8 957.104 2020.21 956.959 cv
2024.75 955.366 li
2025.16 955.236 2025.61 955.44 2025.75 955.851 cv
2025.89 956.263 2025.68 956.713 2025.27 956.857 cv
2020.73 958.451 li
2020.64 958.479 2020.55 958.494 2020.47 958.494 cv
cp
f
2049.84 965.502 mo
2049.02 965.502 2048.15 965.286 2047.29 964.691 cv
2046.94 964.445 2046.85 963.952 2047.1 963.595 cv
2047.35 963.23 2047.84 963.15 2048.19 963.397 cv
2050.27 964.837 2052.7 962.84 2052.8 962.756 cv
2053.13 962.476 2053.63 962.52 2053.91 962.855 cv
2054.19 963.188 2054.15 963.684 2053.82 963.965 cv
2053.72 964.048 2051.96 965.502 2049.84 965.502 cv
cp
f
2062.76 961.422 mo
2062.13 961.422 2061.48 961.249 2060.82 960.907 cv
2060.44 960.704 2060.29 960.229 2060.49 959.841 cv
2060.69 959.459 2061.17 959.308 2061.55 959.508 cv
2062.24 959.865 2062.85 959.939 2063.43 959.718 cv
2064.82 959.19 2065.59 957.215 2065.59 957.196 cv
2065.75 956.787 2066.21 956.59 2066.61 956.737 cv
2067.02 956.892 2067.22 957.345 2067.07 957.752 cv
2067.03 957.859 2066.06 960.402 2064 961.191 cv
2063.59 961.345 2063.18 961.422 2062.76 961.422 cv
cp
f
2041.54 941.997 mo
2041.06 941.967 2040.73 941.591 2040.76 941.156 cv
2041 937.544 2044.39 934.965 2044.54 934.856 cv
2044.88 934.604 2045.38 934.662 2045.64 935.014 cv
2045.9 935.362 2045.83 935.858 2045.48 936.12 cv
2045.45 936.142 2042.52 938.379 2042.33 941.261 cv
2042.3 941.677 2041.96 941.997 2041.54 941.997 cv
cp
f
2062.41 954.386 mo
2062.06 954.386 2061.74 954.155 2061.65 953.801 cv
2060.48 949.449 li
2060.36 949.03 2060.61 948.596 2061.04 948.484 cv
2061.46 948.37 2061.89 948.62 2062 949.042 cv
2063.17 953.394 li
2063.28 953.813 2063.03 954.248 2062.61 954.358 cv
2062.54 954.377 2062.48 954.386 2062.41 954.386 cv
cp
f
2050.85 958.907 mo
2050.5 958.907 2050.19 958.676 2050.09 958.325 cv
2048.92 953.973 li
2048.8 953.551 2049.05 953.119 2049.47 953.006 cv
2049.91 952.892 2050.33 953.142 2050.44 953.561 cv
2051.61 957.912 li
2051.73 958.334 2051.48 958.766 2051.06 958.879 cv
2050.99 958.898 2050.92 958.907 2050.85 958.907 cv
cp
f
2032.16 961.251 mo
2032.16 961.251 2037.51 959.786 2043.08 963.692 cv
2048.65 967.598 2052.95 974.963 2052.95 974.963 cv
2052.95 974.963 2054.2 969.62 2060.84 966.714 cv
2067.48 963.808 2068.26 966.89 2068.26 966.89 cv
2067.72 959.654 li
2067.72 959.654 2083.2 978.678 2074.29 985.167 cv
2065.38 991.656 2059.28 988.261 2059.28 988.261 cv
2059.28 988.261 2042.87 995.133 2030.59 987.858 cv
2018.32 980.583 2020.33 965.879 2020.33 965.879 cv
2020.33 965.879 2026.95 968.261 2032.16 961.251 cv
cp
.262745 .0980392 .286275 rgb
f
2012.18 931.818 mo
2012.11 931.818 2012.04 931.809 2011.98 931.79 cv
2011.56 931.68 2011.3 931.248 2011.42 930.826 cv
2011.47 930.629 2016.92 911.087 2040.04 908.015 cv
2040.49 907.962 2040.87 908.264 2040.93 908.692 cv
2040.98 909.123 2040.68 909.521 2040.25 909.58 cv
2018.2 912.508 2012.99 931.044 2012.94 931.232 cv
2012.85 931.584 2012.53 931.818 2012.18 931.818 cv
cp
1 1 1 rgb
f
2113.69 840.009 mo
2105.92 846.667 li
2104.21 848.137 2101.63 847.938 2100.16 846.225 cv
2056.11 794.851 li
2054.64 793.137 2054.84 790.557 2056.55 789.087 cv
2064.32 782.428 li
2066.03 780.958 2068.61 781.156 2070.08 782.87 cv
2114.13 834.244 li
2115.6 835.958 2115.4 838.539 2113.69 840.009 cv
cp
f
2008.27 1002.58 mo
2006.19 1012.31 li
2005.7 1014.59 2003.45 1016.05 2001.17 1015.56 cv
1930.15 1000.36 li
1927.86 999.873 1926.41 997.626 1926.9 995.344 cv
1928.98 985.613 li
1929.47 983.33 1931.71 981.876 1934 982.364 cv
2005.02 997.561 li
2007.3 998.049 2008.76 1000.3 2008.27 1002.58 cv
cp
f
2041.25 816.635 mo
2041.01 816.635 2040.78 816.512 2040.65 816.293 cv
2036.8 809.954 li
2036.6 809.621 2036.71 809.184 2037.04 808.983 cv
2037.37 808.779 2037.81 808.885 2038.01 809.221 cv
2041.86 815.56 li
2042.06 815.893 2041.95 816.33 2041.62 816.53 cv
2041.5 816.602 2041.38 816.635 2041.25 816.635 cv
cp
f
1996.66 778.402 mo
1996.5 778.402 1996.35 778.355 1996.22 778.27 cv
1996.03 778.146 1995.91 777.946 1995.88 777.721 cv
1995.8 777.203 1989.28 725.441 2031.77 671.025 cv
2032.04 670.684 2032.53 670.622 2032.88 670.89 cv
2033.22 671.158 2033.28 671.654 2033.01 671.999 cv
1994.01 721.949 1996.69 769.555 1997.34 776.611 cv
2018.61 770.913 li
2019.03 770.806 2019.46 771.049 2019.57 771.471 cv
2019.69 771.891 2019.44 772.325 2019.02 772.436 cv
1996.86 778.374 li
1996.79 778.393 1996.73 778.402 1996.66 778.402 cv
cp
1 .729412 .341176 rgb
f
1932.66 685.315 mo
1932.52 685.315 1932.38 685.279 1932.25 685.202 cv
1931.87 684.974 1931.76 684.49 1931.98 684.117 cv
1974.59 613.985 li
1974.81 613.609 1975.3 613.497 1975.67 613.721 cv
1976.05 613.947 1976.16 614.433 1975.94 614.806 cv
1933.33 684.937 li
1933.18 685.18 1932.92 685.315 1932.66 685.315 cv
cp
f
1932.66 819.141 mo
1932.55 819.141 1932.45 819.119 1932.35 819.076 cv
1931.95 818.906 1931.76 818.441 1931.93 818.04 cv
1934.31 812.49 1934.53 807.846 1932.57 804.237 cv
1929.58 798.724 1922.42 797.417 1922.35 797.404 cv
1921.92 797.33 1921.63 796.924 1921.71 796.492 cv
1921.78 796.067 1922.19 795.759 1922.62 795.852 cv
1922.94 795.907 1930.59 797.288 1933.96 803.473 cv
1936.16 807.528 1935.96 812.638 1933.38 818.663 cv
1933.25 818.962 1932.96 819.141 1932.66 819.141 cv
cp
f
2788.54 776.945 mo
2788.54 776.945 2785.94 799.231 2788.98 807.302 cv
2792.01 815.372 2795.53 813.717 2795.53 813.717 cv
2795.53 813.717 2789.85 827.628 2797.52 827.503 cv
2805.18 827.378 2809.66 804.325 2809.66 804.325 cv
2804.66 769.606 li
2788.54 776.945 li
cp
.956863 .517647 .384314 rgb
f
2800.81 637.855 mo
2800.81 637.855 2726.18 664.261 2734.79 727.042 cv
2743.04 787.201 2824.2 782.937 2824.2 782.937 cv
2800.81 637.855 li
cp
f
2813.14 1011.78 mo
2813.14 1063.75 li
2859.98 1063.75 li
2859.98 1016.13 li
2813.14 1011.78 li
cp
f
2950.41 994.009 mo
2973.97 1040.67 li
3016.02 1020.62 li
2994.43 977.864 li
2950.41 994.009 li
cp
f
2801.72 752.433 mo
2897.16 744.036 li
2897.16 744.036 2946.8 860.481 2964.84 894.124 cv
2982.88 927.766 3017.95 984.381 3017.95 984.381 cv
2937.87 1025.28 li
2882.42 918.099 li
2880.76 1031.53 li
2791.38 1030.11 li
2801.72 752.433 li
cp
.156863 .423529 .486275 rgb
f
2861.35 1085.18 mo
2861.07 1088.57 2860.79 1091.59 2860.53 1093.96 cv
2860.22 1096.99 2857.9 1099.24 2855.12 1099.19 cv
2833.41 1098.75 2764.34 1099.96 2741.66 1100.1 cv
2736.54 1100.15 2732.75 1094.7 2734.22 1089.28 cv
2734.33 1088.81 2734.5 1088.35 2734.64 1087.85 cv
2736 1083.83 2738.63 1079.57 2743.56 1076.24 cv
2756.45 1067.54 2801.72 1044.48 2801.72 1044.48 cv
2801.72 1044.48 2802.8 1027.75 2810.98 1027.42 cv
2822.73 1026.95 2837.23 1053.2 2837.23 1053.2 cv
2846.43 1051.11 li
2846.43 1051.11 2856.37 1034.13 2860.96 1043.13 cv
2863.9 1048.94 2862.63 1070.54 2861.35 1085.18 cv
cp
.654902 .435294 .658824 rgb
f
2861.35 1085.18 mo
2861.07 1088.57 2860.79 1091.59 2860.53 1093.96 cv
2860.22 1096.99 2857.9 1099.24 2855.12 1099.19 cv
2833.41 1098.75 2764.34 1099.96 2741.66 1100.1 cv
2736.54 1100.15 2732.75 1094.7 2734.22 1089.28 cv
2734.33 1088.81 2734.5 1088.35 2734.64 1087.85 cv
2861.35 1085.18 li
cp
.756863 .552941 .768627 rgb
f
2806.7 1056.86 mo
2806.62 1056.86 2806.54 1056.85 2806.46 1056.83 cv
2789.46 1051.43 li
2789.04 1051.3 2788.81 1050.86 2788.95 1050.44 cv
2789.08 1050.03 2789.53 1049.79 2789.94 1049.93 cv
2806.94 1055.32 li
2807.35 1055.45 2807.58 1055.9 2807.45 1056.31 cv
2807.34 1056.65 2807.04 1056.86 2806.7 1056.86 cv
cp
1 1 1 rgb
f
3028.34 1036.23 mo
3029.83 1039.31 3031.13 1042.07 3032.12 1044.25 cv
3033.39 1047.03 3032.53 1050.11 3030.09 1051.4 cv
3011.01 1061.49 2951.68 1095.86 2932.06 1106.92 cv
2927.64 1109.44 2921.56 1106.54 2920.07 1101.13 cv
2919.93 1100.67 2919.84 1100.18 2919.71 1099.68 cv
2918.84 1095.54 2918.94 1090.56 2921.52 1085.29 cv
2928.26 1071.53 2955.79 1029.67 2955.79 1029.67 cv
2955.79 1029.67 2948.18 1014.62 2955.12 1010.39 cv
2965.08 1004.31 2991.07 1020.11 2991.07 1020.11 cv
2997.99 1013.86 li
2997.99 1013.86 2997.95 994.32 3006.53 999.92 cv
3012.05 1003.54 3021.97 1022.91 3028.34 1036.23 cv
cp
.654902 .435294 .658824 rgb
f
3028.34 1036.23 mo
3029.83 1039.31 3031.13 1042.07 3032.12 1044.25 cv
3033.39 1047.03 3032.53 1050.11 3030.09 1051.4 cv
3011.01 1061.49 2951.68 1095.86 2932.06 1106.92 cv
2927.64 1109.44 2921.56 1106.54 2920.07 1101.13 cv
2919.93 1100.67 2919.84 1100.18 2919.71 1099.68 cv
3028.34 1036.23 li
cp
.756863 .552941 .768627 rgb
f
2948.52 1041.64 mo
2948.15 1041.64 2947.82 1041.38 2947.75 1041 cv
2947.66 1040.58 2947.94 1040.16 2948.37 1040.08 cv
2965.88 1036.56 li
2966.32 1036.48 2966.73 1036.75 2966.81 1037.18 cv
2966.9 1037.6 2966.62 1038.02 2966.19 1038.1 cv
2948.67 1041.62 li
2948.62 1041.63 2948.57 1041.64 2948.52 1041.64 cv
cp
1 1 1 rgb
f
2796.99 770.478 mo
2796.99 770.478 2775.64 657.441 2791.7 643.918 cv
2815.68 623.732 2868.77 623.03 2882.61 635.84 cv
2896.45 648.648 2900.81 745.605 2900.81 745.605 cv
2900.81 745.605 2863.6 763.521 2796.99 770.478 cv
cp
.364706 .156863 .4 rgb
f
2834.03 612.055 mo
2839.79 631.149 li
2839.79 631.149 2837.9 637.678 2826.67 641.959 cv
2818.3 645.147 2814.72 644.149 2814.72 644.149 cv
2813 634.128 li
2811.33 624.352 li
2830.77 613.825 li
2834.03 612.055 li
cp
.956863 .517647 .384314 rgb
f
2830.77 613.825 mo
2830.87 614.36 2830.85 615.036 2830.75 615.835 cv
2829.23 626.663 2817.82 632.246 2813 634.128 cv
2811.33 624.352 li
2830.77 613.825 li
cp
0 0 0 rgb
f
2793.79 582.112 mo
2793.79 582.112 2790.7 609.079 2798.79 621.188 cv
2806.88 633.297 2818.69 627.341 2825.34 622.459 cv
2831.98 617.576 2834.03 612.059 2834.03 612.059 cv
2834.03 612.059 2841.74 612.194 2844.39 604.454 cv
2847.05 596.713 2841.87 590.372 2837.35 589.948 cv
2832.84 589.524 2829 593.781 2829 593.781 cv
2830.51 585.754 li
2830.51 585.754 2803.72 555.633 2793.79 582.112 cv
cp
.956863 .517647 .384314 rgb
f
2804.28 611.874 mo
2804.04 611.874 2803.79 611.761 2803.64 611.546 cv
2800.38 606.999 2802.36 600.694 2802.45 600.427 cv
2802.59 600.014 2803.02 599.783 2803.45 599.921 cv
2803.86 600.055 2804.09 600.498 2803.96 600.912 cv
2803.94 600.972 2802.13 606.734 2804.92 610.625 cv
2805.17 610.979 2805.09 611.473 2804.74 611.727 cv
2804.6 611.827 2804.44 611.874 2804.28 611.874 cv
cp
0 0 0 rgb
f
2833.41 604.567 mo
2833.29 604.567 2833.17 604.541 2833.06 604.486 cv
2832.67 604.293 2832.51 603.82 2832.7 603.431 cv
2837.08 594.538 li
2837.28 594.146 2837.76 593.988 2838.14 594.179 cv
2838.53 594.372 2838.69 594.845 2838.5 595.234 cv
2834.12 604.127 li
2833.98 604.405 2833.7 604.567 2833.41 604.567 cv
cp
f
2835.02 601.306 mo
2834.63 601.306 2834.3 601.029 2834.24 600.644 cv
2834.17 600.213 2834.46 599.808 2834.89 599.738 cv
2839.68 598.963 li
2840.15 598.885 2840.52 599.188 2840.59 599.615 cv
2840.66 600.045 2840.36 600.45 2839.93 600.52 cv
2835.14 601.295 li
2835.1 601.303 2835.06 601.306 2835.02 601.306 cv
cp
f
2813.89 589.8 mo
2813.7 589.8 2813.5 589.726 2813.34 589.578 cv
2811.54 587.827 2808.66 589.408 2808.63 589.421 cv
2808.26 589.637 2807.77 589.497 2807.56 589.118 cv
2807.35 588.739 2807.48 588.26 2807.86 588.046 cv
2808.02 587.956 2811.79 585.878 2814.44 588.443 cv
2814.76 588.747 2814.76 589.248 2814.46 589.559 cv
2814.31 589.72 2814.1 589.8 2813.89 589.8 cv
cp
f
2794.26 593.018 mo
2794.12 593.018 2793.98 592.979 2793.85 592.901 cv
2793.48 592.674 2793.36 592.188 2793.59 591.816 cv
2793.65 591.72 2795.07 589.428 2797.24 589.016 cv
2798.3 588.813 2799.35 589.082 2800.33 589.824 cv
2800.68 590.086 2800.75 590.581 2800.49 590.929 cv
2800.22 591.279 2799.73 591.345 2799.38 591.085 cv
2798.76 590.618 2798.15 590.442 2797.54 590.565 cv
2796.07 590.846 2794.94 592.623 2794.93 592.64 cv
2794.78 592.883 2794.52 593.018 2794.26 593.018 cv
cp
f
2811.43 617.872 mo
2811.14 617.872 2810.86 617.71 2810.72 617.433 cv
2810.53 617.041 2810.69 616.569 2811.08 616.376 cv
2811.11 616.358 2814.43 614.687 2815.14 611.937 cv
2815.25 611.518 2815.69 611.262 2816.1 611.371 cv
2816.52 611.48 2816.78 611.912 2816.67 612.334 cv
2815.77 615.79 2811.94 617.71 2811.78 617.79 cv
2811.67 617.846 2811.54 617.872 2811.43 617.872 cv
cp
f
2810.01 597.808 mo
2809.46 597.795 2809.12 597.434 2809.13 596.999 cv
2809.14 596.562 2809.44 596.187 2809.93 596.229 cv
2809.98 596.234 2813.38 596.296 2815.07 594.647 cv
2815.38 594.342 2815.88 594.349 2816.18 594.66 cv
2816.49 594.971 2816.48 595.472 2816.17 595.775 cv
2814.19 597.708 2810.71 597.808 2810.01 597.808 cv
cp
f
2796.42 601.866 mo
2796.09 601.866 2795.75 601.842 2795.4 601.786 cv
2794.96 601.719 2794.67 601.314 2794.74 600.883 cv
2794.81 600.455 2795.2 600.165 2795.64 600.227 cv
2797.98 600.599 2799.83 599.162 2799.85 599.146 cv
2800.19 598.88 2800.68 598.936 2800.96 599.277 cv
2801.23 599.62 2801.17 600.116 2800.83 600.386 cv
2800.74 600.453 2798.92 601.866 2796.42 601.866 cv
cp
f
2820.22 561.091 mo
2820.22 561.091 2823 536.728 2837.21 543.41 cv
2852.37 550.538 2837.89 571.604 2828.56 570.707 cv
2819.23 569.81 2820.22 561.091 2820.22 561.091 cv
cp
f
2828.72 538.937 mo
2824.78 541.452 li
2824.78 541.452 2802.84 537.573 2792.2 532.651 cv
2787.73 530.582 2784.58 524.923 2792.75 524.829 cv
2797.15 524.777 2801.04 523.263 2801.04 523.263 cv
2801.04 523.263 2793.1 518.778 2786.1 517.073 cv
2781.62 515.981 2770.21 518.682 2769.65 514.843 cv
2768.76 508.736 2780.27 506.491 2780.27 506.491 cv
2780.27 506.491 2768.99 512.875 2769.2 505.888 cv
2769.42 498.926 2797.43 492.683 2806.36 493.603 cv
2815.29 494.521 2844.21 515.464 2844.21 515.464 cv
2828.72 538.937 li
cp
.956863 .517647 .384314 rgb
f
2799.98 516.132 mo
2799.79 516.132 2799.6 516.067 2799.46 515.935 cv
2793.71 510.877 2783.69 510.101 2783.59 510.095 cv
2783.15 510.063 2782.82 509.685 2782.86 509.25 cv
2782.89 508.815 2783.27 508.474 2783.7 508.52 cv
2784.13 508.552 2794.36 509.346 2800.5 514.751 cv
2800.82 515.039 2800.86 515.537 2800.57 515.863 cv
2800.41 516.041 2800.2 516.132 2799.98 516.132 cv
cp
0 0 0 rgb
f
2801.5 523.12 mo
2801.13 523.12 2800.8 522.857 2800.72 522.482 cv
2797.43 505.623 li
2788.86 504.043 li
2788.43 503.963 2788.15 503.552 2788.22 503.123 cv
2788.31 502.695 2788.72 502.426 2789.14 502.49 cv
2798.25 504.168 li
2798.57 504.229 2798.82 504.475 2798.88 504.794 cv
2802.27 522.18 li
2802.36 522.606 2802.08 523.021 2801.65 523.105 cv
2801.6 523.115 2801.55 523.12 2801.5 523.12 cv
cp
f
2817.92 527.432 mo
2817.79 527.432 2817.65 527.399 2817.53 527.329 cv
2809.9 523.009 2801.62 523.112 2801.51 523.12 cv
2801.02 523.104 2800.72 522.784 2800.71 522.347 cv
2800.7 521.912 2801.05 521.552 2801.48 521.542 cv
2801.83 521.542 2810.28 521.411 2818.31 525.955 cv
2818.69 526.171 2818.82 526.651 2818.61 527.03 cv
2818.46 527.288 2818.19 527.432 2817.92 527.432 cv
cp
f
2893.5 669.55 mo
2893.5 669.55 2930.67 628.016 2906.16 564.972 cv
2890.13 523.731 2834.21 508.534 2834.21 508.534 cv
2817.34 535.356 li
2817.34 535.356 2844.3 560.92 2850.52 580.939 cv
2856.74 600.958 2847.34 627.169 2847.34 627.169 cv
2893.5 669.55 li
cp
.956863 .517647 .384314 rgb
f
2847.34 627.169 mo
2847.34 627.169 2848.28 646.476 2861.71 660.298 cv
2875.15 674.121 2893.5 669.55 2893.5 669.55 cv
2879.94 631.261 li
2847.34 627.169 li
cp
f
2829 593.781 mo
2829 593.781 2813.68 591.813 2808.11 584.437 cv
2802.53 577.062 2801.72 574.751 2801.72 574.751 cv
2801.72 574.751 2792.24 587.011 2793.28 597.686 cv
2794.32 608.36 2780.46 577.457 2797.67 567.104 cv
2814.87 556.751 2829.34 562.326 2835.51 569.889 cv
2841.69 577.451 2841.61 592.025 2841.61 592.025 cv
2841.61 592.025 2833.97 587.984 2829 593.781 cv
cp
0 0 0 rgb
f
2781.09 720.933 mo
2776.15 720.933 2771.53 721.635 2770.81 723.752 cv
2770.54 724.541 2770.33 725.57 2770.84 726.002 cv
2772.58 727.466 2780.55 724.365 2786.78 721.207 cv
2784.97 721.037 2783 720.933 2781.09 720.933 cv
cp
2772.32 727.91 mo
2771.27 727.91 2770.41 727.7 2769.82 727.21 cv
2768.86 726.402 2768.69 725.068 2769.32 723.241 cv
2771.25 717.592 2787.65 719.682 2789.51 719.931 cv
2789.85 719.977 2790.12 720.235 2790.18 720.572 cv
2790.24 720.905 2790.08 721.24 2789.78 721.407 cv
2787.52 722.646 2777.6 727.91 2772.32 727.91 cv
cp
.898039 .439216 .333333 rgb
f
2810.95 646.035 mo
2810.5 646.035 2810.15 645.681 2810.15 645.246 cv
2810.15 644.809 2810.5 644.457 2810.94 644.457 cv
2811.18 644.457 2832.29 644.313 2839.09 630.795 cv
2839.29 630.404 2839.76 630.248 2840.15 630.445 cv
2840.54 630.642 2840.69 631.114 2840.5 631.505 cv
2833.29 645.838 2812.05 646.035 2810.95 646.035 cv
cp
1 1 1 rgb
f
2882.42 918.887 mo
2882.09 918.887 2881.78 918.674 2881.67 918.338 cv
2845.29 804.314 li
2819.22 798.687 li
2818.8 798.594 2818.53 798.175 2818.62 797.75 cv
2818.71 797.324 2819.14 797.053 2819.55 797.146 cv
2846.07 802.868 li
2846.35 802.928 2846.57 803.131 2846.66 803.398 cv
2883.17 917.857 li
2883.31 918.273 2883.08 918.718 2882.66 918.85 cv
2882.58 918.874 2882.5 918.887 2882.42 918.887 cv
cp
1 .729412 .341176 rgb
f
2902.66 785.999 mo
2889.87 785.999 2880.01 776.396 2879.54 775.928 cv
2879.23 775.619 2879.23 775.12 2879.53 774.812 cv
2879.84 774.501 2880.34 774.501 2880.65 774.806 cv
2880.78 774.932 2893.5 787.287 2908.13 783.773 cv
2908.55 783.669 2908.98 783.934 2909.08 784.356 cv
2909.18 784.781 2908.92 785.207 2908.5 785.309 cv
2906.5 785.789 2904.55 785.999 2902.66 785.999 cv
cp
f
2795.53 814.506 mo
2795.44 814.506 2795.34 814.49 2795.25 814.453 cv
2794.84 814.299 2794.64 813.843 2794.79 813.437 cv
2797.75 805.654 li
2797.9 805.251 2798.35 805.035 2798.76 805.198 cv
2799.17 805.353 2799.37 805.809 2799.22 806.216 cv
2796.27 813.997 li
2796.15 814.312 2795.85 814.506 2795.53 814.506 cv
cp
0 0 0 rgb
f
283.132 1114.92 mo
280.829 1114.92 278.504 1114.87 276.155 1114.78 cv
228.124 1112.92 188.579 1094.17 158.613 1059.05 cv
110.797 1003 95.6665 914.304 91.395 849.771 cv
86.7695 779.906 93.5185 722.522 93.5884 721.949 cv
93.6406 721.515 94.0581 721.222 94.4648 721.262 cv
94.8979 721.314 95.2055 721.706 95.1533 722.141 cv
94.8794 724.418 68.8022 951.342 159.815 1058.02 cv
189.483 1092.8 228.645 1111.37 276.216 1113.2 cv
320.588 1114.9 356.603 1100.27 383.259 1069.69 cv
430.676 1015.27 440.601 918.988 440.578 847.799 cv
440.551 770.587 429.14 705.449 429.023 704.802 cv
428.947 704.374 429.233 703.964 429.662 703.887 cv
430.095 703.804 430.501 704.097 430.577 704.524 cv
430.692 705.175 442.129 770.451 442.155 847.799 cv
442.178 919.257 432.187 1015.94 384.448 1070.72 cv
358.878 1100.07 324.816 1114.92 283.132 1114.92 cv
cp
.262745 .0980392 .286275 rgb
f
250.862 620.21 mo
250.862 620.21 230.77 606.987 214.906 622.88 cv
194.882 642.942 210.496 701.329 210.496 701.329 cv
245.308 697.881 li
244.577 643.718 li
250.862 620.21 li
cp
f
291.525 1120.81 mo
241.486 1120.81 li
241.486 1074.16 li
291.525 1074.16 li
291.525 1120.81 li
cp
1 1 1 rgb
f
156.2 1057.9 mo
144.189 1010.23 li
190.34 999.031 li
202.351 1046.7 li
156.2 1057.9 li
cp
f
237.455 1121.51 mo
236.914 1141.72 li
236.87 1143.38 238.203 1144.75 239.891 1144.8 cv
362.06 1147.95 li
363.748 1147.99 365.153 1146.68 365.197 1145.03 cv
365.307 1140.94 li
365.358 1139.02 363.816 1137.43 361.864 1137.38 cv
360.169 1137.34 li
360.169 1137.34 358.29 1127.67 345.897 1119.79 cv
298.326 1095.96 li
240.317 1094.46 li
239.648 1119.47 li
238.468 1119.44 237.486 1120.36 237.455 1121.51 cv
cp
1 .729412 .341176 rgb
f
291.997 1092.23 mo
291.997 1092.23 346.402 1115.14 344.298 1119.25 cv
342.194 1123.35 330.832 1124.75 322.166 1123.39 cv
314.166 1122.13 280.791 1104.97 281.207 1099.19 cv
281.623 1093.41 288.378 1090.68 291.997 1092.23 cv
cp
0 0 0 rgb
f
237.459 1121.37 mo
236.914 1141.72 li
236.87 1143.38 238.203 1144.75 239.891 1144.8 cv
362.06 1147.95 li
363.748 1147.99 365.153 1146.68 365.197 1145.03 cv
365.307 1140.94 li
365.358 1139.02 363.816 1137.43 361.864 1137.38 cv
360.169 1137.34 li
266.282 1133.72 li
266.282 1133.72 263.738 1125.52 254.635 1121.38 cv
245.532 1117.2 239.648 1119.47 239.648 1119.47 cv
238.4 1119.44 237.488 1120.29 237.459 1121.37 cv
cp
f
133.333 1010.64 mo
113.367 1015.6 li
111.73 1016 110.738 1017.63 111.153 1019.24 cv
141.124 1135.51 li
141.539 1137.11 143.202 1138.09 144.839 1137.68 cv
148.875 1136.68 li
150.769 1136.21 151.916 1134.32 151.436 1132.46 cv
151.021 1130.85 li
151.021 1130.85 159.998 1126.46 164.373 1112.62 cv
174.878 1061.23 li
160.647 1006.02 li
135.93 1012.16 li
135.64 1011.04 134.478 1010.35 133.333 1010.64 cv
cp
1 .729412 .341176 rgb
f
177.828 1053.82 mo
177.828 1053.82 170.076 1111.42 165.475 1110.54 cv
160.874 1109.67 156.433 1099.31 155.421 1090.75 cv
154.486 1082.86 162.293 1046.68 168.077 1045.51 cv
173.861 1044.34 178.362 1049.98 177.828 1053.82 cv
cp
0 0 0 rgb
f
133.479 1010.6 mo
113.367 1015.6 li
111.73 1016 110.738 1017.63 111.153 1019.24 cv
141.124 1135.51 li
141.539 1137.11 143.202 1138.09 144.839 1137.68 cv
148.875 1136.68 li
150.769 1136.21 151.916 1134.32 151.436 1132.46 cv
151.021 1130.85 li
129.159 1041.18 li
129.159 1041.18 136.518 1036.55 138.116 1026.83 cv
139.75 1017.1 135.93 1012.16 135.93 1012.16 cv
135.624 1010.97 134.543 1010.34 133.479 1010.6 cv
cp
f
320.165 811.779 mo
320.165 811.779 361.511 959.881 344.357 995.602 cv
327.204 1031.32 196.321 1077.93 196.321 1077.93 cv
163.977 997.885 li
241.486 951.005 li
274.599 827.84 li
320.165 811.779 li
cp
.654902 .435294 .658824 rgb
f
220.665 814.462 mo
220.665 814.462 209.782 903.032 214.943 958.129 cv
220.104 1013.23 223.335 1086.62 223.335 1086.62 cv
307.534 1087.47 li
298.343 811.779 li
220.665 814.462 li
cp
f
433.226 720.777 mo
432.36 722.632 423.427 736 407.138 739.402 cv
390.85 742.806 389.589 722.988 389.589 722.988 cv
412.326 706.576 li
433.226 720.777 li
cp
.956863 .517647 .384314 rgb
f
296.56 746.784 mo
296.56 746.784 306.429 768.586 327.499 776.963 cv
348.569 785.34 405.848 737.615 405.848 737.615 cv
388.601 713.722 li
339.337 724.942 li
296.56 746.784 li
cp
f
255.784 685.712 mo
255.784 685.712 233.495 685.636 221.467 697.355 cv
209.439 709.075 219.548 823.765 219.548 823.765 cv
219.548 823.765 260.659 825.383 283.871 823.765 cv
304.45 822.33 322.478 815.15 322.478 815.15 cv
322.478 815.15 313.359 702.564 307.105 691.278 cv
300.85 679.993 255.784 685.712 255.784 685.712 cv
cp
1 .729412 .341176 rgb
f
251.381 672.527 mo
251.507 690.73 li
251.507 690.73 257.008 696.469 263.965 696.471 cv
273.359 696.474 276.549 687.298 276.549 687.298 cv
276.194 665.962 li
251.381 672.527 li
cp
.956863 .517647 .384314 rgb
f
251.381 672.527 mo
251.381 672.527 255.069 688.979 265.703 687.207 cv
274.274 685.778 276.186 673.498 276.186 673.498 cv
251.381 672.527 li
cp
0 0 0 rgb
f
280.14 637.157 mo
280.14 637.157 285.165 661.04 277.567 672.64 cv
269.97 684.24 259.79 681.045 255.193 677.631 cv
248.993 673.027 247.629 666.52 247.629 666.52 cv
247.629 666.52 239.243 668.336 236.322 661.521 cv
233.253 654.363 238.395 648.459 242.599 648.044 cv
246.802 647.63 247.306 648.388 247.306 648.388 cv
245.941 640.711 li
245.941 640.711 271.049 611.844 280.14 637.157 cv
cp
.956863 .517647 .384314 rgb
f
276.275 648.455 mo
276.275 648.455 288.937 642.796 290.096 652.655 cv
291.439 664.077 277.766 664.412 277.766 664.412 cv
276.275 648.455 li
cp
f
282.787 658.686 mo
282.656 658.686 282.523 658.652 282.4 658.584 cv
282.021 658.371 281.885 657.891 282.098 657.512 cv
286.232 650.144 li
286.445 649.758 286.922 649.628 287.308 649.841 cv
287.687 650.054 287.823 650.534 287.61 650.913 cv
283.476 658.282 li
283.331 658.541 283.063 658.686 282.787 658.686 cv
cp
0 0 0 rgb
f
246.1 659.552 mo
245.922 659.552 245.744 659.493 245.595 659.37 cv
239.008 653.909 li
238.674 653.632 238.626 653.133 238.905 652.8 cv
239.181 652.464 239.678 652.411 240.016 652.695 cv
246.603 658.156 li
246.937 658.434 246.985 658.933 246.707 659.266 cv
246.551 659.453 246.326 659.552 246.1 659.552 cv
cp
f
240.119 660.68 mo
239.885 660.68 239.652 660.575 239.497 660.375 cv
239.228 660.032 239.29 659.536 239.634 659.269 cv
243.418 656.319 li
243.764 656.051 244.256 656.109 244.526 656.458 cv
244.794 656.8 244.732 657.296 244.389 657.564 cv
240.604 660.514 li
240.46 660.624 240.289 660.68 240.119 660.68 cv
cp
f
287.701 656.415 mo
284.061 656.415 li
283.625 656.415 283.272 656.061 283.272 655.626 cv
283.272 655.191 283.625 654.837 284.061 654.837 cv
287.701 654.837 li
288.137 654.837 288.49 655.191 288.49 655.626 cv
288.49 656.061 288.137 656.415 287.701 656.415 cv
cp
f
268.835 662.847 mo
268.287 662.772 267.989 662.372 268.054 661.94 cv
268.958 655.854 266.752 650.904 266.729 650.855 cv
266.549 650.461 266.724 649.992 267.121 649.811 cv
267.518 649.641 267.983 649.804 268.165 650.198 cv
268.264 650.417 270.59 655.604 269.614 662.175 cv
269.557 662.565 269.219 662.847 268.835 662.847 cv
cp
f
276.304 644.251 mo
276.181 644.251 276.056 644.223 275.939 644.161 cv
274.632 643.483 272.612 643.772 271.946 643.942 cv
271.52 644.044 271.094 643.795 270.986 643.372 cv
270.878 642.95 271.133 642.521 271.555 642.414 cv
271.677 642.377 274.563 641.662 276.669 642.762 cv
277.055 642.963 277.206 643.44 277.004 643.825 cv
276.864 644.097 276.588 644.251 276.304 644.251 cv
cp
f
256.46 646.192 mo
256.262 646.192 256.063 646.118 255.909 645.968 cv
255.598 645.662 255.591 645.163 255.896 644.852 cv
257.555 643.153 260.52 642.938 260.647 642.932 cv
261.077 642.83 261.456 643.228 261.485 643.665 cv
261.516 644.097 261.188 644.476 260.753 644.503 cv
260.728 644.507 258.259 644.691 257.024 645.955 cv
256.871 646.112 256.665 646.192 256.46 646.192 cv
cp
f
251.055 650.529 mo
251.055 650.529 257.154 646.403 256.789 640.146 cv
256.423 633.887 255.047 632.29 255.047 632.29 cv
255.047 632.29 261.322 635.625 269.124 633.273 cv
277.951 630.612 282.816 618.482 278.002 615.174 cv
272.636 611.486 259.595 616.678 259.595 616.678 cv
259.595 616.678 245.931 615.927 237.019 626.778 cv
228.106 637.629 238.092 650.409 238.092 650.409 cv
238.092 650.409 242.011 646.08 251.055 650.529 cv
cp
.262745 .0980392 .286275 rgb
f
267.558 669.5 mo
264.088 669.5 261.296 666.652 261.159 666.511 cv
260.857 666.196 260.866 665.697 261.179 665.395 cv
261.496 665.093 261.992 665.1 262.294 665.414 cv
262.325 665.444 265.565 668.735 268.893 667.722 cv
269.313 667.602 269.751 667.833 269.878 668.245 cv
270.005 668.662 269.771 669.103 269.354 669.231 cv
268.743 669.42 268.141 669.5 267.558 669.5 cv
cp
0 0 0 rgb
f
275.542 622.88 mo
275.542 622.88 281.411 628.244 282.787 634.782 cv
284.163 641.32 282.787 646.856 282.787 646.856 cv
281.466 646.838 li
281.466 646.838 278.302 630.984 273.186 629.531 cv
268.07 628.077 275.542 622.88 275.542 622.88 cv
cp
.262745 .0980392 .286275 rgb
f
303.331 758.913 mo
317.82 771.983 li
346.45 717.22 li
346.45 717.22 305.927 686.692 293.712 685.223 cv
281.498 683.754 303.331 758.913 303.331 758.913 cv
cp
1 .729412 .341176 rgb
f
88.1626 743.751 mo
89.3091 745.447 100.229 757.248 116.85 758.053 cv
133.471 758.857 131.606 739.088 131.606 739.088 cv
106.576 726.447 li
88.1626 743.751 li
cp
.956863 .517647 .384314 rgb
f
219.032 743.52 mo
219.032 743.52 218.088 774.432 204.847 782.718 cv
185.626 794.747 117.844 756.085 117.844 756.085 cv
131.128 729.781 li
175.372 732.723 li
219.032 743.52 li
cp
f
431.812 701.427 mo
433.84 703.454 433.84 706.741 431.812 708.769 cv
406.538 734.044 li
404.51 736.071 401.223 736.071 399.196 734.044 cv
397.169 732.017 397.169 728.729 399.196 726.702 cv
424.471 701.427 li
426.499 699.399 429.785 699.399 431.812 701.427 cv
cp
0 0 0 rgb
f
123.299 752.853 mo
121.272 754.88 117.985 754.88 115.958 752.853 cv
90.6831 727.578 li
88.6557 725.551 88.6557 722.264 90.6831 720.236 cv
92.7104 718.209 95.997 718.209 98.0244 720.236 cv
123.299 745.512 li
125.327 747.539 125.327 750.826 123.299 752.853 cv
cp
f
240.405 687.945 mo
240.405 687.945 215.574 687.945 197.323 702.935 cv
173.423 722.563 169.289 732.317 169.289 732.317 cv
225.893 767.634 li
240.405 687.945 li
cp
1 .729412 .341176 rgb
f
259.812 653.346 mo
259.414 653.346 259.072 653.043 259.029 652.64 cv
258.593 648.531 li
258.562 648.242 258.691 647.961 258.932 647.798 cv
261.282 646.189 li
261.641 645.939 262.133 646.038 262.377 646.393 cv
262.624 646.753 262.533 647.243 262.173 647.489 cv
260.211 648.833 li
260.598 652.473 li
260.644 652.907 260.33 653.296 259.897 653.342 cv
259.869 653.346 259.84 653.346 259.812 653.346 cv
cp
0 0 0 rgb
f
275.54 651.736 mo
275.143 651.736 274.8 651.435 274.757 651.031 cv
274.321 646.923 li
274.29 646.64 274.415 646.362 274.648 646.198 cv
276.66 644.762 li
277.013 644.503 277.506 644.587 277.76 644.944 cv
278.013 645.298 277.932 645.792 277.576 646.044 cv
275.939 647.216 li
276.326 650.864 li
276.372 651.299 276.058 651.688 275.624 651.733 cv
275.597 651.736 275.568 651.736 275.54 651.736 cv
cp
f
305.656 1025.58 mo
305.241 1025.58 304.893 1025.25 304.868 1024.83 cv
294.966 856.89 li
294.943 856.514 295.193 856.172 295.56 856.079 cv
315.361 851.037 li
315.79 850.936 316.212 851.186 316.32 851.607 cv
316.428 852.029 316.172 852.458 315.75 852.566 cv
296.58 857.447 li
306.443 1024.74 li
306.469 1025.18 306.136 1025.55 305.702 1025.58 cv
305.686 1025.58 305.671 1025.58 305.656 1025.58 cv
cp
1 1 1 rgb
f
133.42 730.938 mo
133.42 730.938 120.535 719.176 114.19 719.61 cv
107.845 720.044 99.2788 724.61 97.5547 731.421 cv
95.8305 738.23 109.468 732.182 109.468 732.182 cv
109.468 732.182 120.42 745.798 129.253 745.004 cv
138.086 744.21 133.42 730.938 133.42 730.938 cv
cp
.956863 .517647 .384314 rgb
f
126.929 745.84 mo
120.201 745.84 116.474 740.249 116.427 740.175 cv
116.19 739.812 116.293 739.325 116.659 739.088 cv
117.022 738.854 117.511 738.952 117.749 739.315 cv
117.96 739.639 123.041 747.168 132.226 743.026 cv
132.627 742.844 133.089 743.02 133.271 743.42 cv
133.45 743.814 133.272 744.283 132.876 744.462 cv
130.693 745.448 128.706 745.84 126.929 745.84 cv
cp
0 0 0 rgb
f
386.519 715.225 mo
386.519 715.225 397.399 701.586 403.733 701.019 cv
410.067 700.452 419.245 703.618 422.016 710.073 cv
424.787 716.528 410.37 712.694 410.37 712.694 cv
410.37 712.694 401.69 727.86 392.841 728.462 cv
383.993 729.063 386.519 715.225 386.519 715.225 cv
cp
.956863 .517647 .384314 rgb
f
394.631 729.647 mo
392.913 729.647 391.063 729.254 389.093 728.471 cv
388.689 728.308 388.492 727.851 388.652 727.444 cv
388.813 727.041 389.27 726.847 389.678 727.004 cv
393.013 728.335 395.914 728.415 398.298 727.247 cv
402.002 725.432 403.261 721.188 403.274 721.145 cv
403.394 720.726 403.827 720.477 404.25 720.605 cv
404.668 720.726 404.91 721.164 404.79 721.583 cv
404.731 721.783 403.318 726.545 398.993 728.665 cv
397.655 729.321 396.198 729.647 394.631 729.647 cv
cp
0 0 0 rgb
f
94.9165 728.48 mo
94.9165 728.48 80.7588 738.645 81.2309 742.262 cv
81.7026 745.879 88.1626 743.751 88.1626 743.751 cv
88.1626 743.751 84.2402 748.238 88.1626 750.126 cv
92.0849 752.015 95.1025 750.126 95.1025 750.126 cv
95.1025 750.126 93.7568 752.014 97.4038 754.373 cv
101.051 756.733 110.757 743.056 109.916 739.748 cv
109.074 736.44 102.901 739.796 102.901 739.796 cv
102.901 739.796 106.243 732.914 103.411 732.317 cv
100.58 731.722 100.58 731.722 100.58 731.722 cv
100.58 731.722 98.7031 725.604 94.9165 728.48 cv
cp
.956863 .517647 .384314 rgb
f
423.046 710.731 mo
423.046 710.731 437.204 720.896 436.732 724.513 cv
436.26 728.13 429.8 726.002 429.8 726.002 cv
429.8 726.002 433.722 730.489 429.8 732.377 cv
425.878 734.265 422.86 732.377 422.86 732.377 cv
422.86 732.377 424.206 734.265 420.559 736.624 cv
416.912 738.984 407.206 725.307 408.047 721.999 cv
408.889 718.691 415.062 722.046 415.062 722.046 cv
415.062 722.046 411.72 715.165 414.552 714.568 cv
417.383 713.973 417.383 713.973 417.383 713.973 cv
417.383 713.973 419.259 707.854 423.046 710.731 cv
cp
f
88.1626 744.539 mo
87.956 744.539 87.751 744.459 87.5952 744.299 cv
87.2915 743.987 87.3012 743.488 87.6137 743.183 cv
100.031 731.155 li
100.345 730.853 100.844 730.865 101.146 731.174 cv
101.45 731.484 101.44 731.983 101.127 732.289 cv
88.7109 744.317 li
88.5586 744.465 88.3598 744.539 88.1626 744.539 cv
cp
0 0 0 rgb
f
95.1025 750.915 mo
94.9365 750.915 94.77 750.863 94.6279 750.755 cv
94.2798 750.493 94.2104 750 94.4721 749.651 cv
102.271 739.321 li
102.535 738.971 103.029 738.905 103.376 739.168 cv
103.724 739.43 103.793 739.923 103.531 740.271 cv
95.7329 750.601 li
95.5771 750.808 95.3413 750.915 95.1025 750.915 cv
cp
f
429.8 726.791 mo
429.603 726.791 429.404 726.717 429.252 726.569 cv
416.835 714.541 li
416.522 714.235 416.513 713.736 416.817 713.425 cv
417.122 713.11 417.621 713.104 417.932 713.406 cv
430.349 725.435 li
430.662 725.74 430.671 726.239 430.367 726.551 cv
430.212 726.711 430.007 726.791 429.8 726.791 cv
cp
f
422.86 733.167 mo
422.621 733.167 422.385 733.06 422.23 732.853 cv
414.431 722.52 li
414.169 722.171 414.239 721.679 414.587 721.416 cv
414.932 721.154 415.425 721.219 415.692 721.57 cv
423.49 731.903 li
423.752 732.252 423.683 732.745 423.334 733.007 cv
423.193 733.115 423.026 733.167 422.86 733.167 cv
cp
f
264.806 697.063 mo
257.835 697.063 251.381 692.789 251.067 692.576 cv
250.707 692.336 250.61 691.846 250.853 691.482 cv
251.097 691.125 251.588 691.026 251.947 691.267 cv
252.034 691.325 260.451 696.888 267.913 695.141 cv
271.232 694.364 273.907 692.234 275.865 688.816 cv
276.081 688.435 276.565 688.306 276.94 688.524 cv
277.32 688.74 277.451 689.221 277.233 689.6 cv
275.048 693.418 272.031 695.8 268.265 696.679 cv
267.116 696.946 265.954 697.063 264.806 697.063 cv
cp
1 1 1 rgb
f
317.82 772.771 mo
317.4 772.771 317.052 772.445 317.032 772.022 cv
316.172 754.715 li
316.198 754.432 318.06 742.019 317.118 729.642 cv
316.194 717.44 304.939 704.491 304.825 704.361 cv
304.539 704.035 304.571 703.535 304.897 703.249 cv
305.223 702.959 305.723 702.99 306.012 703.32 cv
306.489 703.865 317.727 716.79 318.693 729.524 cv
319.647 742.086 317.759 754.669 317.739 754.795 cv
318.607 771.942 li
318.628 772.38 318.294 772.75 317.858 772.771 cv
317.846 772.771 317.832 772.771 317.82 772.771 cv
cp
f
216.494 762.559 mo
215.928 762.472 215.64 762.065 215.714 761.634 cv
217.724 749.991 li
217.797 749.563 218.215 749.251 218.636 749.35 cv
219.066 749.424 219.354 749.831 219.28 750.262 cv
217.27 761.905 li
217.204 762.287 216.87 762.559 216.494 762.559 cv
cp
f
223.449 851.906 mo
223.18 851.906 222.916 851.768 222.77 851.519 cv
222.548 851.143 222.673 850.658 223.049 850.437 cv
232.31 844.979 237.58 832.078 237.632 831.949 cv
237.792 831.542 238.251 831.351 238.658 831.508 cv
239.062 831.672 239.258 832.131 239.096 832.534 cv
238.875 833.086 233.58 846.063 223.85 851.799 cv
223.724 851.872 223.587 851.906 223.449 851.906 cv
cp
f
306.197 1087.47 mo
222.33 1087.47 li
219.588 1087.47 217.366 1085.24 217.366 1082.5 cv
217.366 1069.59 li
217.366 1066.85 219.588 1064.63 222.33 1064.63 cv
306.197 1064.63 li
308.938 1064.63 311.16 1066.85 311.16 1069.59 cv
311.16 1082.5 li
311.16 1085.24 308.938 1087.47 306.197 1087.47 cv
cp
.364706 .156863 .4 rgb
f
193.279 1078.92 mo
160.421 997.054 li
159.38 994.46 160.526 991.464 162.98 990.363 cv
173.982 985.431 li
176.437 984.33 179.27 985.541 180.312 988.136 cv
213.169 1070 li
214.21 1072.6 213.065 1075.59 210.61 1076.69 cv
199.608 1081.63 li
197.154 1082.73 194.32 1081.52 193.279 1078.92 cv
cp
f
1588.08 116.413 mo
1576.12 116.413 li
1576.12 0 li
1588.08 0 li
1588.08 116.413 li
cp
1 .788235 .721569 rgb
f
1582.1 82.957 mo
1624.86 119.992 li
1667.63 157.027 li
1582.1 157.027 li
1496.57 157.027 li
1539.33 119.992 li
1582.1 82.957 li
cp
f
1667.63 157.027 mo
1667.63 158.136 1629.33 159.035 1582.1 159.035 cv
1534.86 159.035 1496.57 158.136 1496.57 157.027 cv
1496.57 155.918 1534.86 155.019 1582.1 155.019 cv
1629.33 155.019 1667.63 155.918 1667.63 157.027 cv
cp
1 1 1 rgb
f
2845.63 116.413 mo
2833.66 116.413 li
2833.66 0 li
2845.63 0 li
2845.63 116.413 li
cp
1 .788235 .721569 rgb
f
2839.64 82.957 mo
2882.41 119.992 li
2925.17 157.027 li
2839.64 157.027 li
2754.12 157.027 li
2796.88 119.992 li
2839.64 82.957 li
cp
f
2925.17 157.027 mo
2925.17 158.136 2886.88 159.035 2839.64 159.035 cv
2792.41 159.035 2754.12 158.136 2754.12 157.027 cv
2754.12 155.918 2792.41 155.019 2839.64 155.019 cv
2886.88 155.019 2925.17 155.918 2925.17 157.027 cv
cp
1 1 1 rgb
f
330.539 116.413 mo
318.57 116.413 li
318.57 0 li
330.539 0 li
330.539 116.413 li
cp
1 .788235 .721569 rgb
f
324.555 82.957 mo
367.319 119.992 li
410.083 157.027 li
324.555 157.027 li
239.026 157.027 li
281.79 119.992 li
324.555 82.957 li
cp
f
410.083 157.027 mo
410.083 158.136 371.79 159.035 324.555 159.035 cv
277.319 159.035 239.026 158.136 239.026 157.027 cv
239.026 155.918 277.319 155.019 324.555 155.019 cv
371.79 155.019 410.083 155.918 410.083 157.027 cv
cp
1 1 1 rgb
f
1512.71 341.876 mo
1512.71 377.015 1484.22 405.5 1449.08 405.5 cv
1413.94 405.5 1385.46 377.015 1385.46 341.876 cv
1385.46 306.737 1413.94 278.253 1449.08 278.253 cv
1484.22 278.253 1512.71 306.737 1512.71 341.876 cv
cp
.666667 .756863 .737255 rgb
f
1494.36 341.876 mo
1494.36 366.884 1474.09 387.157 1449.08 387.157 cv
1424.07 387.157 1403.8 366.884 1403.8 341.876 cv
1403.8 316.868 1424.07 296.595 1449.08 296.595 cv
1474.09 296.595 1494.36 316.868 1494.36 341.876 cv
cp
.776471 .878431 .854902 rgb
f
1428.03 347.803 mo
1427.17 347.803 1426.47 347.112 1426.45 346.25 cv
1426.44 345.379 1427.13 344.661 1428 344.647 cv
1449.67 344.302 li
1468.81 317.365 li
1469.31 316.655 1470.3 316.492 1471.01 316.992 cv
1471.72 317.498 1471.89 318.482 1471.38 319.193 cv
1451.78 346.781 li
1451.49 347.191 1451.02 347.438 1450.52 347.445 cv
1428.05 347.803 li
1428.04 347.803 1428.04 347.803 1428.03 347.803 cv
cp
.588235 .698039 .670588 rgb
f
1604.22 864.63 mo
1601.17 868.063 li
1601.17 868.063 1579.39 869.859 1568.02 867.782 cv
1563.24 866.908 1558.75 862.221 1566.44 860.063 cv
1570.59 858.897 1573.85 856.446 1573.85 856.446 cv
1573.85 856.446 1565.15 854.108 1558.08 854.228 cv
1553.55 854.305 1543.49 859.812 1541.93 856.231 cv
1539.46 850.537 1549.73 845.449 1549.73 845.449 cv
1549.73 845.449 1540.78 854.49 1539.11 847.665 cv
1537.45 840.864 1562.25 827.724 1570.94 826.353 cv
1579.63 824.982 1612.57 837.96 1612.57 837.96 cv
1604.22 864.63 li
cp
.956863 .517647 .384314 rgb
f
1570.73 849.935 mo
1570.59 849.935 1570.45 849.903 1570.32 849.839 cv
1563.59 846.412 1553.94 848.184 1553.84 848.202 cv
1553.37 848.288 1552.88 847.975 1552.8 847.49 cv
1552.7 847.006 1553.02 846.538 1553.51 846.445 cv
1553.92 846.362 1563.85 844.541 1571.14 848.242 cv
1571.57 848.467 1571.75 849.007 1571.53 849.444 cv
1571.37 849.755 1571.05 849.935 1570.73 849.935 cv
cp
0 0 0 rgb
f
1574.04 856.319 mo
1573.71 856.319 1573.39 856.138 1573.24 855.82 cv
1565.64 840.371 li
1557.19 841.003 li
1556.6 841.067 1556.27 840.67 1556.23 840.181 cv
1556.2 839.688 1556.56 839.259 1557.05 839.222 cv
1566.11 838.544 li
1566.52 838.497 1566.82 838.713 1566.98 839.04 cv
1574.84 855.031 li
1575.06 855.476 1574.88 856.012 1574.43 856.228 cv
1574.31 856.292 1574.17 856.319 1574.04 856.319 cv
cp
f
1508.93 864.63 mo
1511.97 868.063 li
1511.97 868.063 1533.75 869.859 1545.12 867.782 cv
1549.9 866.908 1554.4 862.221 1546.7 860.063 cv
1542.55 858.897 1539.29 856.446 1539.29 856.446 cv
1539.29 856.446 1547.99 854.108 1555.06 854.228 cv
1559.59 854.305 1569.65 859.812 1571.21 856.231 cv
1573.68 850.537 1563.41 845.449 1563.41 845.449 cv
1563.41 845.449 1572.36 854.49 1574.03 847.665 cv
1575.69 840.864 1550.89 827.724 1542.2 826.353 cv
1533.51 824.982 1500.58 837.96 1500.58 837.96 cv
1508.93 864.63 li
cp
.956863 .517647 .384314 rgb
f
1542.41 849.935 mo
1542.09 849.935 1541.78 849.755 1541.62 849.444 cv
1541.39 849.007 1541.57 848.467 1542.01 848.242 cv
1549.29 844.544 1559.21 846.365 1559.63 846.445 cv
1560.12 846.538 1560.44 847.006 1560.35 847.49 cv
1560.26 847.975 1559.78 848.288 1559.3 848.202 cv
1559.21 848.184 1549.55 846.415 1542.82 849.839 cv
1542.69 849.903 1542.55 849.935 1542.41 849.935 cv
cp
0 0 0 rgb
f
1539.1 856.319 mo
1538.97 856.319 1538.83 856.292 1538.71 856.228 cv
1538.26 856.012 1538.08 855.476 1538.3 855.031 cv
1546.16 839.04 li
1546.32 838.713 1546.61 838.494 1547.03 838.544 cv
1556.09 839.222 li
1556.58 839.259 1556.95 839.688 1556.91 840.181 cv
1556.87 840.67 1556.5 841.067 1555.95 841.003 cv
1547.5 840.371 li
1539.9 855.82 li
1539.75 856.138 1539.43 856.319 1539.1 856.319 cv
cp
f
1517.85 826.696 mo
1517.85 826.696 1457.84 836.052 1438.78 864.285 cv
1419.88 892.279 1446.75 939.16 1506.91 946.557 cv
1567.06 953.952 1542.91 893.693 1542.91 893.693 cv
1542.91 893.693 1507.07 884.837 1504.12 880.893 cv
1501.16 876.948 1521.07 874.492 1521.07 874.492 cv
1517.85 826.696 li
cp
.247059 .619608 .592157 rgb
f
1601.12 826.696 mo
1601.12 826.696 1669.31 832.486 1681.54 869.742 cv
1692.46 902.99 1656.07 959.474 1594.77 965.632 cv
1534.47 971.689 1571.72 894.716 1571.72 894.716 cv
1571.72 894.716 1611.79 886.488 1614.75 882.544 cv
1617.71 878.6 1598 873.149 1598 873.149 cv
1601.12 826.696 li
cp
f
1330.51 1186.42 mo
1332.59 1187.61 1453.24 1181.36 1455.95 1178.87 cv
1456.92 1177.98 1456.87 1172.25 1456.09 1164.08 cv
1454.69 1149.21 1446.29 1123.83 1441.64 1108.17 cv
1441.64 1108.17 1399.42 1111.01 1395.65 1113.41 cv
1391.86 1115.83 1351.19 1150.16 1351.19 1150.16 cv
1351.19 1150.16 1335.67 1156.06 1330.11 1165.24 cv
1328.48 1167.94 1327.65 1170.8 1327.37 1173.48 cv
1326.67 1179.96 1329.06 1185.62 1330.51 1186.42 cv
cp
.156863 .423529 .486275 rgb
f
1330.51 1186.42 mo
1332.59 1187.61 1453.24 1181.36 1455.95 1178.87 cv
1456.92 1177.98 1456.87 1172.25 1456.09 1164.08 cv
1327.37 1173.48 li
1326.67 1179.96 1329.06 1185.62 1330.51 1186.42 cv
cp
1 1 1 rgb
f
1365.12 1139.45 mo
1364.72 1139.45 1364.37 1139.13 1364.34 1138.72 cv
1364.3 1138.28 1364.63 1137.91 1365.06 1137.87 cv
1398 1135.24 li
1382.63 1125.19 li
1382.26 1124.95 1382.16 1124.46 1382.4 1124.1 cv
1382.64 1123.73 1383.13 1123.62 1383.49 1123.87 cv
1400.79 1135.18 li
1401.08 1135.36 1401.21 1135.71 1401.13 1136.03 cv
1401.04 1136.36 1400.76 1136.6 1400.42 1136.62 cv
1365.19 1139.44 li
1365.17 1139.45 1365.14 1139.45 1365.12 1139.45 cv
cp
f
1478.15 996.582 mo
1478.15 996.582 1400.36 926.522 1353.36 963.758 cv
1306.63 1000.77 1379.97 1118.88 1379.97 1118.88 cv
1464.01 1119.07 li
1455.82 1078.79 li
1556.7 1078.6 li
1512.18 1015.57 li
1478.15 996.582 li
cp
.988235 .639216 .219608 rgb
f
1400.66 1004.92 mo
1400.4 1004.92 1400.14 1004.79 1400 1004.55 cv
1399.92 1004.43 1392.51 992.795 1382.58 984.323 cv
1382.25 984.039 1382.21 983.54 1382.49 983.21 cv
1382.78 982.874 1383.27 982.841 1383.6 983.121 cv
1393.72 991.753 1401.25 1003.59 1401.33 1003.7 cv
1401.56 1004.07 1401.45 1004.56 1401.08 1004.79 cv
1400.95 1004.88 1400.81 1004.92 1400.66 1004.92 cv
cp
.262745 .0980392 .286275 rgb
f
1586.77 1053.11 mo
1586.77 1053.11 1617.66 939.015 1591.65 907.616 cv
1584.42 898.895 1574.54 894.614 1564.04 892.98 cv
1532.96 888.146 1503.46 908.812 1494.92 939.758 cv
1476.34 1007.09 li
1586.77 1053.11 li
cp
.247059 .619608 .592157 rgb
f
1571.72 874.492 mo
1571.19 896.079 li
1571.19 896.079 1567.15 902.189 1554.5 902.907 cv
1545.07 903.441 1541.82 901.234 1541.82 901.234 cv
1543.39 890.333 li
1544.95 879.703 li
1567.88 875.244 li
1571.72 874.492 li
cp
.976471 .596078 .478431 rgb
f
1567.51 877.083 mo
1567.45 877.646 1567.21 878.31 1566.84 879.066 cv
1561.77 889.302 1548.64 891.252 1543.25 891.603 cv
1544.81 881.409 li
1567.51 877.083 li
cp
0 0 0 rgb
f
1542.08 834.082 mo
1542.08 834.082 1530.59 859.758 1534.52 874.275 cv
1538.44 888.793 1551.66 886.632 1559.58 883.903 cv
1567.5 881.175 1571.2 876.366 1571.2 876.366 cv
1571.2 876.366 1578.56 878.933 1583.55 872.12 cv
1588.54 865.307 1585.58 857.405 1581.38 855.563 cv
1577.19 853.721 1572.15 856.716 1572.15 856.716 cv
1576.15 849.26 li
1576.15 849.26 1559.98 811.043 1542.08 834.082 cv
cp
.976471 .596078 .478431 rgb
f
1542.98 866.813 mo
1542.64 866.813 1542.33 866.595 1542.22 866.255 cv
1540.54 860.755 1544.43 855.167 1544.59 854.933 cv
1544.84 854.581 1545.33 854.492 1545.69 854.745 cv
1546.05 854.994 1546.13 855.487 1545.88 855.845 cv
1545.84 855.895 1542.28 861.041 1543.74 865.793 cv
1543.86 866.209 1543.63 866.649 1543.21 866.779 cv
1543.13 866.801 1543.06 866.813 1542.98 866.813 cv
cp
0 0 0 rgb
f
1573.23 868.776 mo
1573.03 868.776 1572.83 868.705 1572.68 868.561 cv
1572.37 868.262 1572.35 867.763 1572.65 867.445 cv
1579.67 860.039 li
1579.97 859.722 1580.47 859.71 1580.79 860.009 cv
1581.1 860.308 1581.11 860.807 1580.82 861.124 cv
1573.8 868.53 li
1573.64 868.693 1573.43 868.776 1573.23 868.776 cv
cp
f
1580.64 866.804 mo
1580.52 866.795 1575.68 866.049 1575.68 866.049 cv
1575.25 865.981 1574.95 865.581 1575.02 865.149 cv
1575.08 864.718 1575.5 864.438 1575.92 864.489 cv
1580.76 865.235 li
1581.19 865.303 1581.49 865.704 1581.42 866.136 cv
1581.36 866.526 1581.02 866.804 1580.64 866.804 cv
cp
f
1554.68 857.223 mo
1554.15 857.161 1553.84 856.764 1553.9 856.332 cv
1554.52 851.53 li
1554.58 851.099 1554.98 850.8 1555.41 850.85 cv
1555.84 850.905 1556.14 851.303 1556.09 851.734 cv
1555.46 856.535 li
1555.41 856.933 1555.07 857.223 1554.68 857.223 cv
cp
f
1540.42 856.046 mo
1539.88 855.972 1539.58 855.57 1539.65 855.14 cv
1540.36 850.354 li
1540.42 849.925 1540.8 849.617 1541.26 849.69 cv
1541.69 849.755 1541.98 850.156 1541.92 850.588 cv
1541.21 855.374 li
1541.15 855.765 1540.81 856.046 1540.42 856.046 cv
cp
f
1559.18 848.026 mo
1558.89 848.026 1558.61 847.869 1558.48 847.598 cv
1557.29 845.287 1554.05 845.949 1554.02 845.955 cv
1553.61 846.055 1553.17 845.78 1553.08 845.352 cv
1552.99 844.923 1553.26 844.504 1553.69 844.414 cv
1553.87 844.375 1558.15 843.503 1559.88 846.877 cv
1560.08 847.266 1559.92 847.74 1559.54 847.94 cv
1559.42 847.999 1559.3 848.026 1559.18 848.026 cv
cp
f
1545.26 845.028 mo
1545.01 845.028 1544.76 844.908 1544.61 844.683 cv
1544.16 844.026 1543.64 843.666 1543.01 843.586 cv
1541.49 843.382 1539.86 844.806 1539.85 844.818 cv
1539.52 845.104 1539.02 845.071 1538.74 844.747 cv
1538.45 844.421 1538.48 843.922 1538.81 843.635 cv
1538.89 843.561 1540.92 841.768 1543.2 842.021 cv
1544.29 842.159 1545.21 842.754 1545.91 843.795 cv
1546.16 844.155 1546.07 844.646 1545.7 844.893 cv
1545.57 844.984 1545.42 845.028 1545.26 845.028 cv
cp
f
1565.97 1050.7 mo
1565.89 1050.7 1565.81 1050.69 1565.73 1050.67 cv
1565.23 1050.54 1564.94 1050.03 1565.07 1049.53 cv
1568.05 1038.29 li
1568.19 1037.8 1568.68 1037.5 1569.19 1037.64 cv
1569.68 1037.76 1569.98 1038.27 1569.85 1038.77 cv
1566.86 1050.01 li
1566.75 1050.42 1566.38 1050.7 1565.97 1050.7 cv
cp
.32549 .270588 .47451 rgb
f
1477.83 1022.48 mo
1477.3 1022.47 1476.89 1022.04 1476.91 1021.53 cv
1477.22 1009.56 li
1477.23 1009.04 1477.7 1008.64 1478.17 1008.66 cv
1478.68 1008.67 1479.09 1009.1 1479.08 1009.61 cv
1478.76 1021.58 li
1478.75 1022.08 1478.34 1022.48 1477.83 1022.48 cv
cp
f
1487.72 1029.93 mo
1487.2 1029.93 1486.79 1029.51 1486.79 1029 cv
1486.82 1016.31 li
1486.82 1015.8 1487.23 1015.38 1487.75 1015.38 cv
1488.26 1015.38 1488.68 1015.8 1488.67 1016.32 cv
1488.64 1029 li
1488.64 1029.51 1488.23 1029.93 1487.72 1029.93 cv
cp
f
1549.1 874.093 mo
1548.56 874.093 1547.99 874.021 1547.4 873.868 cv
1546.98 873.757 1546.73 873.325 1546.84 872.903 cv
1546.95 872.483 1547.36 872.24 1547.8 872.339 cv
1551.66 873.355 1553.88 869.72 1553.97 869.565 cv
1554.2 869.189 1554.68 869.066 1555.05 869.294 cv
1555.43 869.517 1555.55 870 1555.33 870.373 cv
1554.48 871.793 1552.23 874.093 1549.1 874.093 cv
cp
0 0 0 rgb
f
1221.22 1140.3 mo
1222.19 1142.49 1323.1 1208.92 1326.76 1208.51 cv
1328.07 1208.37 1331.42 1203.72 1335.63 1196.68 cv
1343.31 1183.87 1351.57 1158.44 1357.1 1143.07 cv
1357.1 1143.07 1321.4 1120.34 1316.95 1120.05 cv
1312.45 1119.75 1259.35 1123.33 1259.35 1123.33 cv
1259.35 1123.33 1243.35 1118.89 1233.43 1122.99 cv
1230.53 1124.2 1228.16 1126.02 1226.35 1128.01 cv
1221.95 1132.81 1220.52 1138.79 1221.22 1140.3 cv
cp
.156863 .423529 .486275 rgb
f
1221.22 1140.3 mo
1222.19 1142.49 1323.1 1208.92 1326.76 1208.51 cv
1328.07 1208.37 1331.42 1203.72 1335.63 1196.68 cv
1226.35 1128.01 li
1221.95 1132.81 1220.52 1138.79 1221.22 1140.3 cv
cp
1 1 1 rgb
f
1304.13 1141.9 mo
1303.99 1141.9 1303.84 1141.86 1303.72 1141.78 cv
1273.65 1123.18 li
1273.28 1122.95 1273.17 1122.46 1273.4 1122.09 cv
1273.62 1121.72 1274.11 1121.61 1274.48 1121.84 cv
1302.58 1139.22 li
1296.15 1122.02 li
1295.99 1121.61 1296.2 1121.16 1296.61 1121.01 cv
1297.02 1120.86 1297.47 1121.06 1297.62 1121.47 cv
1304.87 1140.83 li
1304.99 1141.15 1304.89 1141.5 1304.63 1141.72 cv
1304.49 1141.83 1304.31 1141.9 1304.13 1141.9 cv
cp
f
1589.3 1046.1 mo
1589.3 1046.1 1448.03 974.824 1416.19 985.293 cv
1374.39 999.037 1298.65 1112.38 1298.65 1112.38 cv
1365.04 1176.64 li
1365.04 1176.64 1433.79 1083.85 1444.8 1085.07 cv
1457.53 1086.49 1529.15 1116.61 1554.63 1108.42 cv
1580.12 1100.23 1589.3 1046.1 1589.3 1046.1 cv
cp
1 .729412 .341176 rgb
f
1433.72 1064.2 mo
1433.54 1064.2 1433.37 1064.21 1433.19 1064.22 cv
1431.27 1064.37 1430.97 1065.17 1430.87 1065.44 cv
1429.67 1068.58 1436.45 1077.42 1441.74 1083.15 cv
1441.79 1079.11 1441.46 1069.65 1437.58 1065.81 cv
1436.49 1064.73 1435.22 1064.2 1433.72 1064.2 cv
cp
1442.47 1085.86 mo
1442.26 1085.86 1442.05 1085.77 1441.9 1085.62 cv
1440.41 1084.07 1427.32 1070.34 1429.39 1064.88 cv
1429.9 1063.55 1431.13 1062.8 1433.07 1062.65 cv
1435.29 1062.46 1437.15 1063.17 1438.69 1064.69 cv
1444.17 1070.11 1443.3 1084.51 1443.26 1085.12 cv
1443.24 1085.43 1443.03 1085.7 1442.74 1085.81 cv
1442.65 1085.84 1442.56 1085.86 1442.47 1085.86 cv
cp
.262745 .0980392 .286275 rgb
f
1551.5 903.49 mo
1548.43 903.49 1545.11 903.062 1541.59 901.989 cv
1541.17 901.863 1540.93 901.422 1541.06 901.006 cv
1541.19 900.587 1541.64 900.365 1542.04 900.479 cv
1558.74 905.549 1570.56 895.579 1570.68 895.48 cv
1571.01 895.193 1571.51 895.234 1571.79 895.563 cv
1572.08 895.894 1572.04 896.393 1571.71 896.676 cv
1571.61 896.763 1563.62 903.49 1551.5 903.49 cv
cp
1 1 1 rgb
f
1572.15 856.716 mo
1572.15 856.716 1579.93 842.928 1565.81 839.724 cv
1551.69 836.519 1544.79 836.577 1542.08 834.082 cv
1539.37 831.588 1547.6 810.141 1575.8 823.452 cv
1594.73 832.389 1584.53 858.496 1584.53 858.496 cv
1584.53 858.496 1578.07 853.986 1572.15 856.716 cv
cp
0 0 0 rgb
f
1617.54 881.911 mo
1624.15 882.186 1635.58 882.01 1638.09 878.992 cv
1638.51 878.49 1638.62 877.948 1638.45 877.282 cv
1638.27 876.592 1637.87 876.139 1637.2 875.861 cv
1633.42 874.262 1623.26 878.891 1617.54 881.911 cv
cp
1622.24 883.6 mo
1618.52 883.6 1615.47 883.391 1614.69 883.329 cv
1614.35 883.304 1614.06 883.055 1613.98 882.719 cv
1613.9 882.38 1614.06 882.031 1614.36 881.858 cv
1615.07 881.452 1631.81 871.914 1637.81 874.404 cv
1638.92 874.869 1639.67 875.726 1639.98 876.882 cv
1640.28 878.031 1640.05 879.109 1639.31 880.004 cv
1636.82 882.993 1628.55 883.6 1622.24 883.6 cv
cp
1 1 1 rgb
f
1483.88 870.521 mo
1483.32 870.521 1482.8 870.585 1482.31 870.728 cv
1481.84 870.866 1481.37 871.091 1481.4 871.285 cv
1481.77 873.615 1494.27 879.088 1501.79 879.984 cv
1498.07 876.983 1489.41 870.521 1483.88 870.521 cv
cp
1503.75 881.689 mo
1496.55 881.689 1480.46 875.415 1479.84 871.531 cv
1479.74 870.915 1479.88 869.79 1481.88 869.211 cv
1489.41 867.029 1504.02 879.757 1504.64 880.303 cv
1504.88 880.515 1504.97 880.857 1504.86 881.159 cv
1504.75 881.464 1504.47 881.671 1504.14 881.683 cv
1504.02 881.687 1503.89 881.689 1503.75 881.689 cv
cp
f
1493.05 947.345 mo
1492.96 947.345 1492.88 947.332 1492.79 947.301 cv
1492.38 947.159 1492.16 946.709 1492.3 946.3 cv
1498.77 927.521 li
1498.92 927.109 1499.38 926.884 1499.78 927.032 cv
1500.19 927.174 1500.41 927.624 1500.27 928.033 cv
1493.79 946.811 li
1493.68 947.138 1493.38 947.345 1493.05 947.345 cv
cp
f
553.306 1010.07 mo
552.87 1010.07 552.517 1009.72 552.517 1009.29 cv
552.517 902.717 li
552.517 902.282 552.87 901.928 553.306 901.928 cv
553.741 901.928 554.095 902.282 554.095 902.717 cv
554.095 1009.29 li
554.095 1009.72 553.741 1010.07 553.306 1010.07 cv
cp
.654902 .435294 .658824 rgb
f
851.402 1010.07 mo
850.966 1010.07 850.613 1009.72 850.613 1009.29 cv
850.613 902.717 li
850.613 902.282 850.966 901.928 851.402 901.928 cv
851.838 901.928 852.191 902.282 852.191 902.717 cv
852.191 1009.29 li
852.191 1009.72 851.838 1010.07 851.402 1010.07 cv
cp
f
2590.89 705.996 mo
2594.44 705.258 li
2600.25 743.661 li
2596.17 781.956 li
2592.59 781.709 li
2590.89 705.996 li
cp
.576471 .368627 .588235 rgb
f
2996.48 694.438 mo
2988.17 693.856 li
2983.09 734.287 li
2985.05 784.646 li
2985.95 792.776 li
2994.26 793.358 li
2996.48 694.438 li
cp
f
2995.85 743.514 mo
2995.23 770.83 2990.8 792.886 2985.95 792.776 cv
2981.09 792.667 2977.66 770.435 2978.28 743.118 cv
2978.89 715.802 2983.32 693.747 2988.17 693.856 cv
2993.03 693.966 2996.46 716.198 2995.85 743.514 cv
cp
f
3004.16 744.096 mo
3003.54 771.412 2999.11 793.467 2994.26 793.358 cv
2989.4 793.249 2985.97 771.016 2986.58 743.7 cv
2987.2 716.385 2991.63 694.329 2996.48 694.438 cv
3001.34 694.548 3004.77 716.78 3004.16 744.096 cv
cp
.654902 .435294 .658824 rgb
f
3008.43 743.14 mo
3007.95 764.319 3003.76 781.403 2999.06 781.297 cv
2994.36 781.191 2990.94 763.937 2991.42 742.757 cv
2991.89 721.577 2996.09 704.493 3000.79 704.599 cv
3005.49 704.705 3008.91 721.96 3008.43 743.14 cv
cp
.576471 .368627 .588235 rgb
f
3012 743.386 mo
3011.53 764.293 3007.34 781.156 3002.64 781.05 cv
2997.94 780.944 2994.51 763.909 2994.98 743.002 cv
2995.45 722.094 2999.64 705.231 3004.34 705.337 cv
3009.04 705.442 3012.47 722.478 3012 743.386 cv
cp
f
3004.34 705.337 mo
3000.79 704.599 li
2994.98 743.002 li
2999.06 781.297 li
3002.64 781.05 li
3004.34 705.337 li
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 24.2.0
%%For: ( ) ()
%%Title: (2112.w037.n003.83B.p1.83-temp_01.eps)
%%CreationDate: 12/17/2021 6:16 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb",KB3Q%op[IeNG?sre83f4hmBZnPL4g[A'+jN?,R[#g9[R'Or'1("cC$8jW=,#V4")@7R<H`C2J)(6[]?N&TiekYY5Z%q:_IQD
%B'BV-AP,;bkC7Poc\j/g,?cFj^lN)*;(\WFRT)CRc*ti5V0Q=Lk1rKO;_;#8NK$?gLJpba3&g>dPBcDZ9%EBem?3[JK0&6[o.jAu
%\[cIglnfAV8g0jV8X3XATGBA7mlgGP-!tC%ggd;O(A>o?I=o7BQh97dD)Ph(d&W$K3n`>T#D5"q^W#ppmS0t6X?4[9[IS;DMl-5"
%dHRW7F2SmA(pjDF(?*G)f"H61V5>)(+tNn9RnF'(@O6"n6V)iE=jW:'rtOpopnZUE_#Lm@ir?5bk<"&%UeVc$TB"r_p7[<EQBEpq
%pfd8=W#Zm$A<@(Q1d#j&[?B!\M5.(bRjm9nV5s(uq;`=sreR9ue*p#5.4O)[&h<&Q5O4&mihkfP&#I)?<cl)p,bDVC_6&(.:=ku5
%`LjqF&fY26]J!&a-+Elb;JZC<7<;`'jIf[q97j'J,Irti>aFW-J,L!m:Ar1LK(N):/S)sm_H%B>]>IZphtc6^)h*G;nu1\OcDp%a
%gbk(h%)oLcL8Cb(e`%_D-3n']*QH82T7P4@O+,EnB!6W!%%HfL@E>cb&C.%snYTFA0E>\Z8Z\?:OP&Z4]iYP/QY?b1r1W7O[e.cA
%?Z5!jLM##;po(.FA`b+O8Pr@j7p[9M\#o4$`@2uO2*555q`(fsQjK%Zdr\D#1rTZBrL;I=dA2&AP?lf1Y@Z["cLGg"j$OChr/9It
%3e"-qinI^uWf(VXKuGSN5?Sa;ZRdY>=h1'[.-F]eF"G5fLT5EU`AknIp^[=5YtP@[AMR@FPJM/m)(^upiO?@fAPr,*%L_?<U66A#
%(pY!@kYlke<W2B/*NJ--(.5b(0,?pfHu-cGL_Tj-15HYD-/<ohLrtMirl%Zh'`Q(K"L1ADL_Th7h!ki*&MNKNcr>r(M]lj1(X(l[
%#kPSpK,9afZkT=Q^S7aD?6CAF01I>cVnr83nr&;G/;?.D?Yi=g;ID,ko,*7$YScB`F'=Yp<(7kt07H4jKcK#XDt"%L^K:na`4pnl
%6<jY5`<`\D?P[>E^*NNU'13J@a'sXF5&CGr!Wa4P(n0Yk[-b1o'_-[W$mOoY-mD44"m4f[`"E#Y0d5k=US*ODN.8)@+pc_I.JIJ<
%+J7jb8@gJ"^<lXq7tVU%,D<q+,X-,Mou6\/m7#?QGVjZ;0g:%qpfPc/?SjDS&DrBfDt%51$HX'r(Bb@FjQK*iE]Eqb*N8DPhJf(^
%`!Y[YOE>s^KT\mV6YZ+(I`QAuefctk9KkJ9H:SZu\GhTgSjgPkWi@Q@K<LlH<4sAJ'46Hsil<akkO;LL5]tNiT^YtZ0IAu=YN!U2
%`Fmp8HFLS[FBX&,^5AQMD=KW6'gGMXRh_Uc<W)4MLsP%\pecVb:X:6rnZUlSq!<JCYDArcA.0,bQgXR:klDU8-s_88*qVOqlM.PY
%Fb+]-24%<F'Md2j'ohsFeK7odYOp\ks55a[?-a\s?N\G8XGK0h].E-m._p<sVN+IJ#LYdQI(UrrEq]fckO"W@@gHbs0kIRmIhhL#
%->X1'8cLAb+j5@*ol_O)T6WX&5(N+hY<LjSp\SU"0'J&aPe(aRWsd\Ge^HDeSajQ+kh4^`-@SbZrHaC>\A+dkL>TU:X#ACK'9@SO
%%Pgq1R`9U[e^_B&qYs0?O,J?gc#EI.nJ1)2n#c6)gHN*]p7f4H/:B"V]jgYP?c?PeDp$+h3*;^Vq"S#<qPnnW]^o-b0&;ROoKD["
%ZmYH2O`%krIe0*9`,nb#l$@'`"\e52^hL3kGG31`dPf:GmBeIg>L2TF>X("FNUUiG]!$2'Hci_onp]pn^@\DmPL0?"[V[7[K3p^o
%Hlm3XV!Knho`<SJs,shTD>XW3K1G`4NX"iD'?e%#&:=3.Z&K%Hqc</AWaNjFP*q,9;133&2PAm?,8r_6aL"sfq1++T&JHB##N"'7
%o)ZP6&$Xr,&+AL!V!GuVPQm<;XqfF0fCKU\K`]2E`R$an/,b-epE#\$3l&@`Dd`mMLTZh"A=O^CNfoL4,>IYnp7:sE4kJL*h,@VO
%Qnl>ldpj!q._SpYhc6^i3j_\,`oYXM&'#uAGc4]sJ'(<cI4)8_4Yhf]1P#_i3g<HG%3u/8a+%b=T-!9,d+mnMJ_MU1GDb[<]Seu(
%dk!a\Jd61%0E7aGCPU9VS33Bdka/L=4adEHkSO6mdQb0!j#Hl+4cAPfi5'>8&Shq`e5.c`1n`3M!mrUId+<E5_%1SdgD_9HY`.^E
%LOUcb"FmhpNb0$4^Qn=;&#KZ"9/IbkY,er(R7`XRn7^'pNlRQtP'rBGEBACjWcPtE$3$h;5XU1M[PUFcn=rqRFNn*Y)RHk.cq%4a
%f#IHGMqqL$l'W%PK$XK3&5Mp@\l\Pnc.B=r=P,a&dBFP4C-0WPmYRG8P>+JA)i#-Kfc%pIaFrCZZ*"kNX!%rS^NT#1;a0[lJmjD@
%mPAk#0JEnlGp"@j:MVtSRiI))a0KR;$%gMF^-bjc1"-dbX\8,n>R,8!GabY3e?m7goR>b++:TCP6K[C(iEud3T4R!U]oinH7J[KR
%\>/GY)H&lCGbM)aF]!GMmnMq`n2r;`TpKuN2H>hGbX>N6Hm[/Ur8/([./Um7`?iClBN^MoJ7RK;\t4aT^s`TJ:k8^#B\b7M)\I?'
%VeCkZBq,,n3bB6I,7AQcMd!N+D?EWZA"/lQD0`.EAUtQ,-P$.BnqJa_\hBCe$l+_2/.Fa@[KtckRI2WlP$d`-T4UV"&;crc@dn'Y
%md>_o*oI#U/#V'h$Im.=ObOA?5o;&EVU99+nTYsR:NEni#=1U3=W1edfRh'G/n9T(Hig0&,7B.lk-0*/"n$pu3O2g`gX/_0ND*mF
%"TfI\K;@h])VHfQ'#A+1VSO#$$qC1$pV)\J%MV>MgX)P[R:qioPe@MO!!11Go&,SVirgu<PK]qUg)R=mX3B!o%]:Pm'rWGoMhl1U
%/r/nTC_*_T6UB'P8O?1N$%d0FG>]<h]$r2]W+Q-8%>G@0i4L1)=@`JRNfZsqiT?O7n23ItCi9\"GV0C#*bh,`dG1Fk/s+7c,ht2=
%5WT9[L$L'Y";),-G@-iTir7/cUdE95<"plVE84nM"st-$GX_O#:$aOKG?><A$M'iul3#9A1'rhKAQ=j!%C8fnfp<(A/;7FE-`h!h
%4[08h73cNq[kg9E9KXfK&q#4:0g\%m.ZFk[G"bZgB^k]uCg%Q/JV2i7;(Qd[!UMW]MQ*!^fbHi3j?Y(1"B).*:In=q?:J9kr!5t%
%8<dPY,Ab]C+t:Is@]Z,+&mI@llR!)[`l#L+F2*ft)[SrgI?3*NLjMC*9q,+8N[$e_[kg?>8Oe?MjL"$-#$&\]/JJ?iK`T&fO:Igf
%7M*(TRMJ4P1q?.40m"ZcNBnkYn!M0m`aY6CH&U3qK[FEM\O`VTUhpbrK!>at%!)ronPs/](R1bUF'Hk.icqhhk<s9jc:hBlE5iRc
%Kj#V$CYD,@#Z6^1,)@SoP5gPHG>NCsWUk5%Qu?]hdn0Z,!d-f7VP5#g1l&eA3*B?_<0S]G2K[`eX..>mBaZ1Xe_tqb6frpE-iljF
%`hH4]-aYiaiAjR/9a_C`cpEKjKiQ>R?QK9`cF4bOEe;[0UfDEsB,(f^INSrCLq@Rc/AX4Y#gl.QQMYuZq,3mD?8@]h`]/(+206@.
%Rq\1&>G2)jTF*-p<5nu!C)`$RFVG$7>VK$n,iUBMN_#LUrZ_k;gY*pR\Fm4eP);ju:3]"_(F?nI02,o30R0e.^kTu<!Wnk-N$.+L
%jM96OIX_EC*N)*!pY0;uV\Ine3V5.lUb5&rW0g/[CZ-BRnmB2SR"_h3'37(:8d8TJeL7srW])Rf?P60WTd8"C;(\G>+QP`_l7Hd$
%P4&Fd,`Sg3*;U/2:sL7HCLXI_@#ioT?+>Od)CW<,qo7)os.m;LMSEQRdBaE_+=?Q#`m:iA14\g"GL$F95rIb#5dI`%%.K4KJBp40
%#Ed<V.`#pGSrc)A4:OAoO,.cu$/=[(#R+cgK(C=JK;].^<_,;N^u)GL*C%V99i,.0,64f$rg`_)^GiV)C:8[sLutGf2W$<a=,g3;
%0u'\r$HiuZQlT&8po=MR(W]qm_LHS-#h*`J@2P.2R*'V.N-!"'XJb@a;]^pr6FDf!(3Q,o/<6g/rGV`oXJ^r`cu8V`J./skI]S)]
%#%tLrq/o$P6,&Ihi$)g0$'Q\3S'^j=H8tC830N,1bH*,!Qj'n2<"BeK82r!t',,WYq:NJdL5HF;"XZ!C_P6c3/a\ANK:/#kfgdJV
%A5&"\/&&o-Ksp_b=CGJiUd`\MVS'WOE9PP^%/gb_j%iYU#9BUcN'hZ%l=b5.Mt!"g1N,#$S$G4N76/<BVWtrgjL@=Q)>LB^oI0Z9
%F<R[$GVR_t]LLZFLF[Zu"j&>bb^=dC)UK%5!WEc$a\2[h2>H:s4Wn0@p16T*7+4OZLaA"=&E1!N:t"ra/qAgirV,k93m03n7\PW-
%Co19SaP2U\4qf5o=YA94e'V6umSs@CeCc@61l%IaVPPCe`2g'Tr9?R`n>i7J$]'YP[cQY5nfDLF%2Cb++8n/tpMe_O*gjMM*FFIf
%`>n!E&1R6cF+HR^D?iV`%RX]f'Ta=F,sogO)E\dHkf_tg@e+4be:$>in8WGIpcVe+q?LK,0o_%.$ODJ/m#!9DF^t2<]FPnoENMo[
%LtFI>fIR5q+@JE(FJ"6C<0=\BZP0?kD[XeYZoK?nR:iB+^C#6*P.%9*2%#HUN+'^B6EG^O/H+QmYQ.?_4YO;iO@(;?*XPgQ;*&sD
%$MK<!P>%VMC)X"NW/.Ira:`VP$H#T,s#Ym\^f^c:A-P7#&(3RQUs[-/gsZ/3-M3<O$/U'-Wa$7UM'7=>I='EW#7H22b]uqpQgKIV
%-.roP*r4a/qS/aR;)Y.ci+ktaOM.6Kb5-(^XR0)SiDeW_lYhlAbW+n.Zr'QVDnp_5IDSIRKWibtNZ])U#LAV7*De6oFeOCg725,I
%hu!FslQ(F_Ekm?9ecVuM'%f5!UDf4BhbdqBCBrs@3tC"2OeqeW0PaK`Z$SEH_6tc)X46fg]dN%cbW,-N*r[fln,'`Wm<EpOi#g2;
%#>tI:q#5J`s,DCJqs'P?6=\[HPu=1OMtD@ml49pVN8C8FgeO\rB5kPnR;*U8:u_jeEBa-,?7f/q]Pk[uo\HM$Ct8Ls7umsqH!#b-
%`<r1;ro\cdi]I&.\C?*`GO*d[D6ItcrTAZgksG'c9q8ikB!ktCknXn%='sn';IYd6dO3?*:*/,>cU!t`;lhP[BJ<M.l>Aq9$[(^/
%ru.eaf"J6;b@(JS\l8FeQDugA@8SXPMoR-Aim\Y67F9tAnJcl9!1gtRZ(Tj!'<=j:hP^HXW"gf2epa4mdT<]b_B[q18n+\p">9?1
%X`'WVmnPZg]3i3c`9Ar8PY/oa\l63mjqHMB<oZ)X<iq[>^:J\6:f..O^;??;4,'Bc?5G*q\"5Qr'q9*n:UOHFb9mq#[n[CK@EHuF
%d-[c`osu=+'<M_!FM0-g`'duM]`kgTo`SW^;_P%oU.i$[U0e*&Gi02#71cN\<XOhZH1<V*(H%8(`>\K3nl<(sCm;ir8s!P\hCRe^
%mcfd%diG(iKbdJN<ClqYQDdjuR9$(c/L*%R4l<`ehXT\d`E"V?H^\sMY@UsRWhLq)nR3$:E?^Tt\4T>?030Xa_brH6o+DIuCm`f)
%#+@)C&RV-$n)fM(-=.k$*kY9b^o'*rqhN^R9CK4+4C7[=e:.o%C,<-iDn/hu0@t`fp#8uPklS%hTjYH<GM:7$Di:GYh5sK[/[<"p
%p*08Es"o4uDH]JXm9QS^[9Mfl>tV2j6IV3hB[L`nWTBBs(4)4E3+Yqi`dibDLP1Vd.!($g\93]g\'5bgp]ZG,:)mgDNIf-b_aC+i
%hO/I+dpS-;Bs,gB3\bT3PTF\Pqd(g1De#I$PoF;6q[ipi++a1r)X"'``+H'!24+Sj\'Z\E;'UP+@5/JDBn>No]7Z4Y[0E?>1d2V,
%[)$ud>32N,e+r.Gd33PhU!:05@Lblnb%\Ar])/l=gl+#ogWC$7\OuP%=bL1#0S0``LUXb3@9fUM9P)Z\"193TK8l1D2JACJ"7OQk
%Ts3afg8a>l>nI4[E!7b3>f"SP7'>\Q,p]KJ\*cN"&-J3%kV0Dh*5;&CN`!f06_?#r-tuNC,fXs%6_bdeEUWtZZgMsFF)40'@iELt
%UG<;?VP2d%Pj=(H1mArS;!tp_5bM"9X;2b='$S<K<auuj`Q4oOA%?;)2iZprZ.q1%S&TL)@_$@MRp.qeFUH[fPHd)[9N4EhVG0<L
%(QTqR'(*WtaCN=Q=/AqN*B9)L:5n,(d4AhaDaeuR9e85%/j:i!KSN%M]&2hG%FY^;F]sbodA^sVQGLuBS#b/m%Cb#'p_,]B$?:/s
%@>HXN*$!s?g;4CqD*6'*/p$uIVTN#dEni!deESpbELc#C2@_QIokPrDT&uSAS<REgpuG,:TqG9"5R"WXk37/?hf!iHaq;DN7m'h/
%E^Pa-@UK6NY#TN-R;/SGF=M9B<+hJiiMXUaE9H+^[Gp$N_6D(L"s!D'^_e=8nMkcQ*dT[\NLqrPpc1`!e9G[)hAH#`q&%0&@\pUW
%0-.FrkD"!A:"=YfNDH+:O`5VU@l3cU_8IpDgbZPsRB%=&V?'<.-64(s+;GI*dbXTe:LuYmcj9NpGB"tNSMoj14uqrR:;,;m/\B7e
%aGcBn^5'tGO&@%PaknUe(n!A'BMX(?%M&?r(rpV)K($$b0J47""1Na>+seVlgR1`ar6\A8GPV0N>s=Zk[Bs4`h4HE"_UC)#Ilk+W
%".KnKD#Qq"D5`Z*O"&X2Rd>Gr0bQudPGX/""<2X2Sr.OO^?u\mXZ/AZ00%a?`?3`]2&'j6`KCmI7JWXVMP5@0eU$TuY7?MbmRAl=
%RA@0%EDA&Ye_$f<QDsGD.^+V&p_`8;n^1[,E.hh?&iT@$3r(ZT3Opm$"a_!)&<>#rNe,Eq:[SNOgE0p8o%9N#O(CjOh<RtupqbDe
%$DnURr1Q.#CJfF0NDBsn7c*o6KN=#ILdp/%0LJ&"'$$[`rB31h0p^-@[n`dZQ;66Kh;02c26EXrYjb<+=JiVnI[sJnCi-Js7]kb4
%?$sB0JQ!L`P7o0_*ZpS%#rau4*G@(FEqEI%3jG3*;7E/i_Z,tdGcO<j%Ruc@`c8'XJj\+/)*FC6cqboW>ee76[DteP`B\%roimrM
%Z/^(Q8M&onRhN<,2VT_38rOa\PL$_\XZl&T1,\.0,:p.PokHM4XtV=`/3L(FDQ(3#Q:g\U\<Ve^Q$ZY23E>8!`0t^Q\RD10G:AQ.
%0lm\U,!K]pcFaI@%L]<S`i<1$j2"cOLP&P%mehkaB]'abSU*sO6BiH.>@O7(LiZL[-oEP49#Z\R`&Lh]G=q[`C7O;b;UJnr'uTR(
%[=R62+X&RB,t,oe26q0N`H!L7@.d<T?ihrmb>6P]PW6aCHuQE(:NrNq,`nG^7-U3PPI(uL%Pf7n\L2>D8t9\0`bm;!/5%bh8a#>j
%%p,ZU;2/b5->>,**+VOqr(McIMr>b=a^1360$SJkb&f;Z?a2MQYSSTM8UF=o+>`R8B;5*o`,YoKh0ojdJ25r=1<TH1P4kWg6"]3N
%gSF7+M.M(S,_c+W=)#Zo:JIpI2C?'Vn&t<3D82Q\@f1+g(`u6Fd8:<n"I""Y@@$?M\GXTsa)SInEUq32EjNuch<7#8AS.so*i.Dh
%WEtKKJuN(GlF!Tt)[j?f;[:Cn?(8E@UTE$O'[is]RqfA.BsjqH2KdTJ>&C:i-:OuW.mfT;H(2c4.^p6?psiBgZ!%-t:8@\^,;u)^
%0h=!h7al)$5)kS\s15&eP4R^S&e6Vp2kGq<.L@oN#!"EhP?<1mUp=L1s!IC/QF^;'p:N+igb(`=<XS8;Z-rMpU62R22:lPS@pS1=
%PoUWTe,*DH:SjcBkFs<Q9he3X-N$jVn@K"qiH5gJ8Gnn3`m["VIb-=3aggu>;8[0V#,<qSQbEn!1B)nb^5SLrF;=*Reml%159;j1
%+05<nJ:34[r]flh`j&-#N1(6t=3J!d"$H%I<fG(s:RWmQogP[J"8iTY8E6ttGFt)]_c-aVIiaT_(7:oPf4&:.mX!hBj+2o=(?NKM
%+jMXL)rbuKpTlV"YEk`*Z$BPsRrME[(olcO52+(b!to8GpKD3ibT13#kC9]&N=d0&aYAt=\.EXU)`oYad.F-kl=@*u:;S$<e+MV_
%qX8P)GImc8":oUcr]Aj"^SE]+"^"\]@k,jiRdUf_Ta=lnS]D%a9\4ZmURp_@Y5+)eHno"!*M\S6fWY)dMV$I^3"L?Q)`80GUQO.2
%0f"A&ZC,G2I'H9`p2ne$R^4#%caE&i&7qBO]e2HGI)O:VW3:"8E(d%mpVDZMMDr"=.'T#X]5(n!eQu[;B9uG+EQ'S/3i61$201Ir
%OA.NAdgXpu&\1KWO9qtlGuJqCasL4OG8$dWGZ3Gr<ihVBk%<F$Cf]jsV<7p81j(\pWO(hFE^r'2(<`PCk0JeM/?*fO"Tmk"Z.s*f
%H4F25/UkfMadj.K*Oc0D@cj5WZ9qC9A;_/gmc25(lJ@c,Lq`Vs)*X?qhl+)2nE9,$F\4oijs*>V*s%tp,UXgGW*Xu1h':V)=_4D,
%QT*WhIr!SlHS5N>.au>Z2"<=q]\F=2C#W^B'/*[\73l3P/.CWIVMUXRianR'R3l8>98T!5T/_;$(AOd6UhKnpIKMV'!hO*1C#h$?
%pVL\+o.:W%h8CBqcTFnG1u=QnP`!^qVq<fU1QH2mc5H"H^Lnb9=ntq0B4B:1+u->=9uPqn42#06<,hW9>r"-6j#F`+Bsau%,i$6N
%hsm-R`\@cJVoE^Ek5KkT30*$Fq`Sc]\=?!XhS-AncNN+=FF*6eWo'_8hKd2m9B2t=-L=]\N%;fCa4Wu%KT,kLp?M<n_enE&lY[jm
%F2hfA`HV`%+i\"oWR*'Rd*!t.E;4X%3;iare\dpK7l4fVM_W"7Pf:.OomX`mW,^r1Y2,$I;l1/\GXZ;0E&k)$.s$?j\96j!K*hqq
%$_90*N.F_DIq+<&`dd$c@b$8ZH/FO6=Bcr^Ehb41EI@F$dlbW`"CK_:O"ihYehiFBb#?ERJ36:@*2\"?Bc^b`Q,U7PFdg>fH_sL.
%(upe"BKECV;2or=A%Kr*K1PeTq5U]>.H;O,nmZrOGOeJ+FBC-7faTV"%7DUXIUqoTWO0f<JG6NT<t`T.LF-iPH.1Db2IiUngrOQu
%1u)?lrRu9Bq)Ash>PV^d<iMZKMp6XQ6t%?PKB:C9V-(SN.6XPCImPe,MC$R"okHLIFf/]d_IRt(;Cm<-kZ9**jul((.`V'mRajBX
%7s0&Y9]3lUdsH^niA:CYKAsC4s1rK'r`%n?XB!#MQ%7HGR1tSpX,_N$0YJMQ%Y)LcHB;j8FKhF6pF\f:FP5u]h`0_g<+Vd^IDnKa
%]&d]A[X?&W].r"0'aL#GhXK%uXZ/U>$I(kCk.'O4@r,9c]2ZG+;Pn0p^QHO-`cAheo;9pjhaV8tbtXtD#=NVfCrnN&)a1r^)U2!O
%\S3lZNTU4EH`LU\V(dYo>R[^2iS68[Rtc"5E,HT>9uFNeE:0H(/_njH3-/L"@l\V)@_"@=)U4771`&gU`[%"2-[1apcV<&7$o-'\
%O1Kq(&abPIXV):kn9'&\`$jr)C;1\f-;5qKqumteM`sX*H2X<B15<,H3o9IQa$s"H`+S-GeTD1MD=P!oNN85+^Y;Ef:poHHMp3=_
%Z1>Gbk)WE1FLtUlaO;Pm#`e!tRV:a=TM%7#'/HiP.YqdcH48r_UaDm-9u"YrOQ>%B[J5g&*-HrNj2qc@fhAe?cWZAC)mn36(3VG+
%NAXo4CFASBk+-b2:8I[G"@,=?j83\p$OBA73W]K9qH7/CVtLHB4Lp+lM^s4<dP5UeW*'43c6QX&V<TebMt=8WDT,e;#tb[8+"P@%
%:i6S'`QWR"AV]V9AW()Sp>[aFY5ZOoOC?r=o[?ogF8("Wl.C6&;bpie.?(^5i6T#^pu.cDL5'%DgZ"9;kMKINinb'ZYf\pe78ogl
%l4a-jI%jPX%SrXiO`QEJq4RTspE:k9k<7XL4bB-<It7J#WIYo3l!:JJ1*0P2=?+7'j*,JiaIP6Uq>NlBmg\G<d!DsB>BXL>gL.)s
%F8Y-nHR\'=SN+=VP!gXW1"nVZ\hGagK0D/Q;r`+Pfc#"n(rsFQ\oEZ^>#W$m-Lp0H2NGl6s0(+qEQfP$+#Z+X:=!JAj,]40/1"c`
%D&hU"#Z'AQ4qmaVZp47lnY'>H]k<WNlflAV_dUqFe8Fp3&2]E)]^.n)0lG;S$Pe+4;`jQm:/*.n^M`KAaC%^+D&cR7(E@a3=/sg^
%qT7i4X,.-GgGdfpA5$):4na)1*)5uYfsMZ7m)\'9Yr2oT92&q)D2^-9^pG^Lj_V5?5/'PN0_17g`,2W'Lom*5Yl"=o+N?FYYu(dA
%S4BE:V*BAm%6cBkFmL,`ABUHX\"5,$-RjQ<LCEK./daP.X#OW,MbK_.Lp7jc#bT/^DFI/.=e"JUQ2Ja+Wf]jcZ4oq[M+JMih5QbN
%>KkU==(^2Sh&Ja)%NYp?X#lTdFdsg.N1eB>(*XVZ@6WED>gI-`j)6/an"WA$eApHS$Z1/^QV)`s'9$FSF'fA:0$/fegLBu67W?\/
%+O-bW<98.u;@"=u6nf9?Q\X,60sj:!]rZMKD>0o0Oh^_TItooXc5,:XQWinQLn61#"%jB0=)MKZhJ1gm%\/Dtj44l6o`C(ld$G(/
%D8n#iMDml*H:?/[e^?MVD<5]JI(d7Y89k:=,bi3P"/tl0+(ET4KM/[.7FgV:U<p+9n+Vm8Mso*ejsf.Lh15=rZ;UX-ThdWs(Z0j-
%32"hdK'42+R*_?d/XC/u2^kIINpr+EM['3pE=d-lIo=MK9EQq2AML?.KAJ!VK/[%4%?l&Phk[N7^Bs)J&,c&$hL,FWG9B?6+S#H+
%Osp51?_61tJ6iR:(toR^+tLhh7q,#&%AqIV;f\@%=!2O2Fe=dL^-@/a)U1;hLOi?Z`g`Sk^$$:4r9lTU^Y@^lJmRodW-r>9_OOAs
%7?Iht"\a@@o(5HJW`m9:rh$8)g7Z-*n-5Gck$)DQ+0nWTUgib4h$9V>i5^Y)"$g6,jt8q;!^_aqYP5>ZQ`aGPmjJ4^<M>69S[p,7
%%;m>/g8rj<H^03[Y?X`+Wa34'D53gGrgdYM;_PhCakUH7B41.JEPBl2r8uKJRfbeS.#_LAN3%ZZ1nl)4SlAe1$9fkTn8:N?$R@lX
%RtjCq)!$j<s%X_d33nfaA[$4]j\")$SNH>(/K0IQoQLY]Y7mY6^GU3QO4Qfo-,l;jEO\)Pk+bhq[i3M+q%'KZOhgO:Wc-p%Hn;Ph
%]d3Q;MWdOI6!k+=1FS^eP57-"c0=/'<e#HYP;SUEfAB*U]T9odBp=MNa\h)uAn`\7@a+KYf.$AY45OIkBdD,ZGDD6P1(^dC>A$Cn
%,D(uZ>!0d_B-:Nc*`kuZ#p382I/MQ)9B<m:gGFfF*:Z1>U*\C"X4;[o>ZI9O9^TIDc(fUTAoLA-#1H^hAGca3PTl#Zc]9+VLB?ht
%8;s>12Osno>/+K"r0IXE>O^&pZ"-TZh:=l<:K8&o8dBa><\9FaJHWP!\"5R^]+)6;O<W=B3N)UrikTEd-;L(#e#aF9;O/kRi\mg5
%<j9iSXhmr9=_fm)<$COK)r&)*\S4&_DW800CXq/9fIj^P!N4MZ7'#O\-YVc*Y>,&_h,<pg.@muV<iOJXr)EQp>*J8e_+8jGM$rZ-
%ViGDd'0#Sn+jh_;oF"j"WLHdoVr#(d3qYgkmTWJc:r.:N/qr<$Ou9-AN+`pKXcapV8F>)tY;=o*A^G2FC#$,jjHPP9Z8'"XTeX;6
%h=?D!EsdApY:Df/$FO?C?"Z'1eRg4Zl+KKreZ8t6%qr-aRbaGa>2i06e"F!%#m\m_C3X.>HB@!F3!5o>:T?ep"P@G"d&9UJUpqWj
%f^N1CR_Po?N4Goh")1g]ASI%Q^U]1WpYTRlVbh1j=2e(Bl!%$8dVV,aKKkq]:?@to30cI3#D.Ekf("?lB(;A&$Y"L?o4dCFAuIlh
%Pbm%J.4et@-*@@#i`)Ac"GiVtkYb6>$3L(#@`;%uRe>s:gZ[-!g>sahRlD<j/\#Y,N.gp>)CiC$/I.,rfQY*@V3jD)J[/Rh_)@^%
%=Wtl!@>WH6XTn-+,VJSk%>giuDS9((b,"QIOLqXD,[(!KA-FC_Q/p;kmCks4Q\mX3.ng0F$Y"5\'>Mq+890ua0/us]=H-Xe"(lMV
%$ijY:j'r;Y[*L5X!;k-)ZLe6b"&@\#F/K>(!TJ!F0AE/']=U'hg&5[B.A73.Pa4t4iE3="h`PXC8k[91bO3f*\Q5]jUN$ca$c@X9
%K@YRXq.dV$(:mn:=?ilFUYc;e4fp\$i%O_0GJ8ir?Ss.Q#JMpk^gO"VW>%JLfl$XWWCC[jUBoj7$J(qChGGfWQ^ZPe5.uGYU0<N4
%mVSPDos50\Sb@0`?FGc:'##4tjbtS0-Tsn$%/7i4U8JUb^eB$0=AB^)olDjc[X6:K$V-:JeW`PR'XCXeUa[J<a2NPa&h(S32jD#M
%#B$6f.SGHl\.iqm#gIfnQ7=rrQ"i9G'?(='Ec:,9(XjN@jXd.8,TO'c2^DtGd3/=K9l6fu;7dke9F4R9JA2s:O"SLrLer;p:tq)t
%(iQ<soo[31qLNrs&#6].0@d*;p#qW4^,+,Rd+ZZqYCO>ULZ@5tc>O6+cl70oRuP$hm0\)`2mCgNDVgIY*/)jmNpC(qlOC<qRmA=g
%OSfr[mhaNT]ukIT+mJP`K^RCB<O#\Md)bm98*'6KS+9kM$;Gj>qDooHFPf1H=ha7Pmi!5.]2:!1I&l4XrZDH?d?alnAk<QbX\7X.
%@b/3si@ZCYIO)4AE4k7[6'5JhoorG%f(G9T'cAE$/-DZBLtI>P2ldthQWu5*-,3Npo@=#dh+#PT[["/qG@$UKQ<HMH]^c[QI:\+)
%<j.FX5r5Fs2MsF.Vi*G!5`+L:\?mf<O53<V:_F+E[tlCCJVo_9piI/N<$*a;T5HrB-QhD;E$)M\kspr,.BOD0El"n7"3PkEoq<b!
%&dt$i4Ung.J4+A?4gRP/[9=_#h1L<-->T_[L'XS#c+;c3[1_FgV[SjUWH&j$F=gBcq+c=FGoOgm\*3l];/F,%UDpX>Hhm4Ch`*/&
%Ma*`;P;qFN(tW(?.*r$<:"*Z2CRL(.9D5SQGuf&@"u`LoAT*XG8`]*aP#J>Z,qM,hKM)&[:nsXt&1(PGHlpN1>>$id0TR:#(F[6'
%hG7>p"/LK;i`7bWn\n=7?"Ka:86,!>p^^>%+CP"["me_mP;W=&J40P^'HDn@0,nMa&WhY!^O*a6;ZKRJS)$Np&5G0`5`mHXMpZh%
%TO<h04fkKaIUJ)kqFN$!b#]L1CTJIXT\kc+^2$Zl@OVdM!/$G5$W,Bc@o-s:)Rg3$>9/Qa%f[e(>m!1feuq6(c_+H]:@o>(lF;Ba
%*rF5u.OI!j5]&i!6,,=9c-VoW1pa)!#PoHn"kcfH*,<2oXn@g0lUis5-k4PWTee[,:gMe()W)L!>`%<^TFS_WlA^8JNd@f0]Y/";
%kSOMhQ@6:\#Y%;3*Bss:M@`:rDmUSYHb-MkdCO'$.T7bGlIXQ?VUW4RO-5`Vm-5BE+F_.gVuJ<K\2Oo[?3e_DE,I0.$A%r22K=79
%`1a4k\"15[[O)Eae6'4ad&%NCh'03I3jr)3#AJ%]7sd08m<,1BBE^e-3KEq"B*5BO;R)j!6A]G/?QFYAW1r!_[Jk5D6]HQMU_8A^
%S=%?2LbQAT0V7tgaPjY3)I[AdeYH03E:jjlU;HbMd1>!\VjY4]gWW"J?D(d6F3.s5Vo=^(CgSOHDJeXkoqU\t1[!!4T5:-++3a0=
%Rto*rrBa*$)p_<OD&b]Snm_%F_b^0nD<j)=^UmkMq=A5S\b%nO9J/!B,a4->AtW;]gtt-g)?)l[8aT[ZeXd+d*nBf@=djcO.D_La
%=7BkBhVEYCmYVV$hdQWXg%i[l9CQP%JNiLLcL8H^O.5c]>IQP`il<9@q!;:8"$br4A(lC.fAOp5$o\)ED'+8<L3H9dnDbC.Zb);k
%YJQ'+/2_LS4*PnI_n4GdXM0lI2U9nD,7W2IVG>\\n7GCkDfZf*rY7Z3`fFmsT=;NeiYr.%E-#6q]rKOOJIRC>=_9ZFONUmYI.Ga4
%B@UmDY0N9"guE3$S^R8)0'h9XCWG\GYDp*JcM"OJoNqI*F7j5,IJ/!Gq-<W)9E.CZ,C8Y%4E4aT4e'+7Z?uG!Q@8CS6hu,4T)ALH
%?[Gb%Am$dE2qH[9gNV@HEc$1%[_0$-o)u)R$S`Q&q"i]SiUYed!L1<H<!V^4c605j/d[?a!WE-s?$Q/Oi-.W)nB;*Bki`YnffKKF
%bXcEU?_'Bgoacg,Fa*`M]9DkYiT^:6cMFV.,?ddsI/UF8h7@s=1LGR:]Y"-YqRh6c;-88?oke\QP,PV<,Et-'=X$.?rpFR5>eOk5
%*p<6W/F-mH4B$XuHt-aN?se?UokC#"m-NmF/cANss7>FMh2@WAQ*"YhGuUfVfLVX;5-&4O2[);E_TEt/;H^L!PjQ,qc>>f#3;dg+
%rpkBS@-..JlaH='D!j0P+73;^X0)$;\$O]%cS$g'C])`[ls=+=!Lhaq4Y,dO-$/L3Z1Z,ET!%8Ne<N,p&LY`FWu'.WIPlQ-9&?^e
%mqC=bBsk[`ngq+dQ+#:B1YM*%%siEri*`UVYoZDbOtco0c7Z)3a]XGQOu%gT?]rOtK`T%pcQn]M?Slbu1EOH"Q9WY?QO_o#9eLAR
%AJ01&>q"^WhSkQNBf<G&[?[B8`EI!;=_$^9`imriaHQ5;RJDm_ak>52@IfPhEg</)0T5+d*18bo(,hE5jPnY:qrH2NBf3I!E\itc
%Gr;q!>Wr+/Sm;/so-Kg9>$FV%h\;\.Q1FIGUtT3o;P.ei9'WP1<mmLfr$#jWc@/A@os10rT,m,eShlrc2dRjr,rbF;J1LG+rdlH*
%[U'q"T:S9X8Ns2R/'71<j_Q^DIeGP-1LGWrbT21]Q@(ktqiKSpWm)ktY-l^"I:qt'H2)Jm.="$om3Q+FV2NIE]`TMT>']^#H/ABQ
%PC-;7h+>>mHub/$I!G7O,sT'mI7SfN1KTcAk9m1L_OK8SjE4mH5C$IUR`W0eja"/Enb-b(HBd,XIa)5I9f?(\k;14CV_p87gHM!m
%hk$C2=hK1SH=eJp<1-m)b^H'[%\1c]>s0T'2`'T_N>FDEiPOTuk!nIMbgqC;Gii0-mFRcMmE+TdmaFg=B(+bdBkIC_o:q_K_LXF_
%;L2?2H/1SIRsD&"6QaaQR@27IjQ4Tc)7mQ=gs]kmYG$O<D!g7VmF^:5DOLs:XkB,kqP2_hj6>st;Xs$]G4!e*5-*sem9+L:?^\=F
%:1O"fkKW>GB.%'Cc"7Jn*6gZ3<H>GC(O&YeO$C94B$\1R=dsh$]<j9hOk42WSR\Q]le\.tB>8+5^Ha`aQ'9GZCh#YWo4[:Ml1Lg*
%e]c:5Pu#$$O-InU?QPWWfB#O#_r]K?>;'d68"$HinE@ES?@-duEa_-m=`$9HFHP;0IIptHr:lD\1&Lstotei+7sCREX[fe]DJCf7
%fm3_Ubg!m_gn.eb/UWpa&"Uk5eP*0j4[,CnRbLlG:Zln>?es!J]R7"AGKNh0k2+B?hopKuh0khEHmr6??S4Pbcdf2ijnWH'1$0;?
%$ErSjoB"]=_.GUg2icG_o?W<Y7He?4f/eCAJ+2U'14M3sqIKT]X50h%7k#AJ2m2t*^660#c*u8i/f*Rg(MaComeWCVj8<D%@Ir%3
%LP>,^<F]J+kd7R5r*epU_F8IL[d^8=Ha%I+]j4bhn*aO72".#!7;]Q=od%)8]&moH/T,DV55AYH(O'nhD\`jK7kUB5:?NEXHuSY7
%Kbq/q`R;2(/N1(Fc7CP`]D8;rbf]GggY^mlHMXV'>2&qDD(H^*mKuU*?=Y[S5$*q$Q\o![fZhjrP&2htA\YB!Vrlm_/mBF(?^IBK
%2t!!(l]9i_=7]F)q/+[\[!Yko4tPS+5JCKB<\N@6/1o\*>g_p'jiZ`WRB)V>BB=I$E&Cj'\N"h4?ZBZrF":T-m*nXKk(H#ZX,E=N
%gT+Lqmr7si>4qjZ:*WhF4j#]q=5SHhelVI8opsY(e_S3u9]bVYD/F0+AW:Q.V:X.N?SBu:QEI9(kN3"tmIQ*kK=/>@amE9tk+.Z=
%fm\F4ZKA>_WFr[tlmDDrI.8D'^Amt*b'EgZH)gM2;Hf]<Tg)jj4#siT[gTP)HD^B5e,%H];dY%KqSf@T&4^g?lg^l'AT9I'=OCL%
%hC25p-`=Uj*mZ>!2q\T#lBQ6:($JbjgKWHgDH-:JBjH.-\ob"@3QcpL]#ll&9$L>cb4FY7D=20oX_CQH<j]!o:.]f#q=I^7Z^fb"
%$LT@l^@'<"kY'UXMJa;)TCn0=q6b[q[U85?q4hU!Qi.lXR(51STGqCSR9;894D+3)Mmk2m`gc'[9uDDVW*qOT7h'P$DRjKP$T;M_
%AhnGilh.#!1V\+.QsWp]RC0]?rRA.'cd/`KpA1b2G&hnC?'Q0uelVioSh5FG/B4"`3OEb;T3f6?k?HX\/(CWCXAM5mF)Z505CWUE
%B"uQ+)tpnGbsT,<o%=gCHh:"lReuZCDpP'-poBt?a8E:@#\LgLG]dN,q"E7X7W'OZlKd^&``r2G[S]/6P(dd3+2'4*2iZ%!DDRbf
%BPa8O5ONG*/m^)F2BCo=Z*H?)5(8gn;LEk>S)8SZfH6D#J%^=*q8q@>\!\UJbCuc?LX'c9alW>nQVV?L9RU]!pLSd=8bVH0f&=g6
%]rfJ%#:KXX[:4"Pl.T>'mci;2rSuA%gA^V@-b#Om>-Bsag%s+aqQi$-(S70Mc6](tb'178o$bXk[-kR[VKWAcDpfF\(Y@n)$dS/5
%_W/6]g\b'P]`#.5e@.YZn'5h&lM21Y-BgJqeh_#WIk,ToCqdtq?gXFt+2)A'ZL$eZOaV568nC4ngnqEccNg@0lgn?"SS`_!C$5/E
%A9t/`>^i/H\G4LnD6DdegnB)h3d5_rD!WK-QCdH3C\F[^]qn*_B(t=jra>Kdb#82K_I$oHB92A&cemOGCcsF)QYuLtcX(MVV3dL^
%m(Ik?cg6)=]Cct5/a`&HQ92_Liq2U2j,;Z5GO+AMdJLr,-gs6i^P(g.KCUQOpD<5ng\iLd)BPg45@$f5n)'_Os)P?>-I342MVFPO
%Ze%Y5i61h+no0<=g`E>pSbImUk3V&8q=07,;<f:5H'J9'BLhN(>,t/#GO?6,[9I;;GjjmPf(!>C;tF#[j)s[QSZC&K3oZ'=d*8WW
%'l3&EEW'!"H)c@&-g14"e!'@]lPHJbmelD"h=Zu4dn`J,[Bnr<LQs[mm-3Q:j,M$QZ^^+Mea)>pq<[G7pFeI3^H6l;l?3&AoBtE3
%oL(i,\D92*^Rj?YEj<!"C-X]ol'q"j([p_$R>^q7f$56#q8Y.,N`HoShq[!-jPR+fI`1)T5JFjXqsh@3^IpW,lZX;WqbQ+?X_q+q
%Q$8PfhlG@gjnCG$RnrJ\T<>Ud/3V*&5@io6mll-/Wbm/XISA!R2]jsh2m,?YIW`7%Z$KG[T+&c/rH+9OGQ"M^Q="!r?GG@-gfmb2
%AcBsAb3('\YOsnS;=?\uHJcq.O7o_?3)?0;?T@MG*M5Bp^#N0qRjZ7s=6G;/j/`%IeOeU]Cn=!Qq9t)p5$r`Kk7k#JRkKIsH)4gq
%T>+`RN>IK:*^=qZm?TMs-eJ4dYPILZM`7d(]Ba,+NNVMm2b0e;QT',JC@YDT<S>#J?8%r.QL=&2U@DZ+ZhWhY`qs6,E$$+L0@k,l
%n&ssNQ1C9qc/+XG5$oepSS-F<Y48@NPTK;+Z:f+?W`u'?;r/ugH[K!LJ'r?j.LV/^TsD"tI]2>ZPpb*^Q>0H-4P)6d[oZdpCRT9#
%><>$^r*6;*,[Weq?gZ0Dk1>MSB;V9M;f;P:lJm0gEgc;QQKG@Gs)!HUE0nX(9:LDm[O%;h[t=gQ$JMu3iP)"GSI)rW6VYh)FPE^:
%l?mX`>,>i9<cZZ+3sct6?s]qiPo@nH^=oSDgN!=AQ+I0j(713bSXZ6Ho8]'D*]/PhpNr`7MfP<;HK$)@R,*oZ38EP1maBu*.J88h
%,,*tS;\QbfMf/R5Pi'tV[8P9,euN@@>Q%k?VsQOS?Zg9P_Zn&>BADlTBmOfQ=<(C8`?:MtFhQ]SRf`K7!\XQ`L]4S]l+`*9@+[1p
%UufEdR/Qb;>l'@Z=q=lU]&@>sE+qF_<=SMg?1YRTAT:^m%X8-jid8(^G8B7rNE@0d"te4ONhE6?p$.gkgin4W5t\gTVGXdD+<$"q
%R;/Q`Mem_D?rHO+(b>[]P=LZsR/03=,BA#nnnuX?7=$LL`S^9:^V9H[o`_++,$<uF+$+Vl,52Yh\F[G4iYX4HRZK"fDgRa3W3:@c
%or'ip_t5&td<!H6pR(<"0oWYWq0q=B+t_[DB5)JEp"N$l0#hnV]%gf;h]G\)2-oQs*3<^C7^?n6lkp6WNd,XZB8K^'ejo\-BD#a0
%^o?3sa?+/oF.d(%U\1GEJ:;5m6Yf<5aO,]jN'%m1TQ!kCh%!3!d$lb9n[NWe*UW)uMu%_TE+sQ0nk+B2Th5/Em(X3EcnUE,9PL!Z
%Z38*I/+)(<HM2O9]#&/bXY`fbYul,;DI!#]&YZt0+\HT\elU<D.SeGU]5<h:.Sd7uG6Qd*jWFGYd=F9.<ik)qO^YI`Hf6IIi#tK^
%DSMM9$/9AI2_n=@,C9H;8iB@r>0W&e)YmhH)VS8QB=FPl&ho4Vc!*-cD6$<[LnJD;8:80p.uB#P%;!GV,g^gDU3_9U5V\YT^b<YI
%D9u't<%=/`=bdI(hhJ'GC%t3+Q)K8_S,g7iMI:sh+WA%6MNpT7,3gJM\7%5q*=!$QJ-UpC'cY<-M'?fWG7l2leGFe%[=CH6NeMmp
%i&u'6i4VaK[Z-$$M4VE[JE8@"FnId8:pH-r<UT?/[o@;Ci@Bq9]iZ6?Po*KSgNOXT_ONNT8cb[/fYY2VJ)<hj;Se#m\6%i^pNqkI
%TF]c;Geb^OY!AV6gWs=pZjU8MK/5g/fe_DHW1oegK#tUk3'GVpW8ZU+KQ`TlF+9^;A">4n9hN=IEpD&VY&ChB/sZ>bdfLdU6Z)'W
%]sausk3t,c9JZMj>pr2tN4>KUordo(^PjO>bt_rL#p2iomU,qa^I9W3&),gB:tQ:glZQP<hZ($H&>_%RZq)bsQVdU&E"E9[HANI5
%d7o42^>g?a[IAX^P\MnLg\=7cFP@QU9A)unnO(GWFB)u1h1`*e,1KVi,f1K/b'8!#!^GTSL!Y5SWo,8)'u#Tj]^A@JJUicM,+RZ4
%#-\c<i_@PNfXR%:W7dK6V,Yq/;)I=-Hh>l*V7%<]g'U'2rOTt]au=8fjNG<lMP&gmHM@O^YDj")?!Q,SJes)g0/blbfX.!Gf"j8:
%38d%\_H-X6;f.6_.Ri,S$BYZ:G^8N"26S(QR*h7\DsfK+2>1uW]dOo]oq=JZAT^6kBmb3Qpu@E+XqdR0;*:(i;+l8_fX0!`@&a+a
%2tusq_/G?";3uoFDNQ:"R[,Ed#D63#l\CUl)'WYG1gs!XFPYlRnT:&^n>^3"DP.J;;G9ruKaNnrb@'t^ZtrA_"aFsf[`1=[eh&]-
%Bq:>/BK<51J=$M]a&-n3g6?'9k#BT"e_F-KNJX*>Tc,[cAgsP?)!;64euYpLXcOKgZ:Nek>7m2]USC=_cErRqC2")5PH+/;DLj`G
%Ne.^R>#ELs_9A.dD$!!p_mC(<I)g&/P@=9:rhh1\Zt,X](c7q[kdK9>"S00Zaq@[];nB-3$+W2&9%n,fq_4s#%FU$S\G.Y!6T\'^
%q/n?e*;J(lh7@GL(7,YP/d1R`]m^e#<)&,[1VuLh.9f_fA:P*>m?DI><It9Q8lItU+VCELU9XpbC5R#UP$rltD6fDOQn<rY@D`qU
%?`?a;k'%?dA[#nMTij^";1XmbC.12X@8K$@:`h<"j>GU"pE=MWYXfWi+Uh+3MVDC?6&'/5p]l\B:b=B8R`uF]"Yd/T%@CY*5TbtR
%.KCYE5djS%BrR63R\BQJ(H*cGr@q[f&\&/X"U(!/WsZqRB(>'rHlt<iO#JI,_:WP2)\n+F&.9c)Zn.1B"<Nc'F6#go%!8gU1LXHV
%MHej]!p_OR6VSE+%<"MG,oCA%<<mG:ZXg:XWh==*9h&Msmnd9oX(I5.<^L\$`=)9[4jpkOKA,lUIB\Zkf4$\_LVj4RgNlK0S-=o_
%<%t6`A3pD/6Y%<#+C86o"A05aV)W^u$'!WbTV=+XM"\ZjJC'0_7gb^ohV#=i[jo;n&RY\r*;$ng_-fZ7"YmL%nVn$p#@\)3G_<jg
%@R7?VW0%$*mp1PM%41"(mZ^>_>,0oi<YY_6/e$Y&>.0L4)3d.\MGpU^\(87RERDb'-V3>uaeK?'Fn_dY/q#^p2M^-c9MdPMle;A-
%o^lPc&Y:nOH;bk0#MofZoVU!iH['10e_fPZ4`&](=hBp7F@2f`$6c4&Da8lC)Wp?NEcD^?.FSf8_+d6h!>*uilRM&%a^JWq-E)&`
%5:M:BZ>H$6PZ(7C8$J+20bIGQYR9Ls`H)JL7[9cq@-H7_M8X574c8KT'soRVLG>s0%,Ea&Y`e!>a3r<mGTStt]8WQX@,30m2H,KA
%JEfH.(m\SQ.:<Qt<`-bSN>jRd5ned7dnpX-Jq\4>*Z.[=D4'6$]N*]Br<DF6n6U2C$:?]?=q+Ij-)eW[A0;$/iL6c>&5[81#4KVh
%omeahJKP/Z0*FU5L/\LAd(l*&*sN_g,7-X2aKPbc$,L#F^p[>X(utj.WhrDea=r*/e7nsn#%*7>I4V4d!a9]@jfdo@0LmSH@VVET
%Y0!?<)DfdWF;4=Qm7-[ekptJGd&n+4>G;5D*DG^hj8KMPNr*:Y"Z/+('H#6s3V#*>^`s-J&$,B/;n?>uj$"J4&#I+U&g6qb6?u*J
%oq?%I&"o?aO:_s_$1\W@de\r(Q5eaO;Y4OQ&i=U!O0#F^UDd,Yn9u;n4Ak`(pY-VN!=g(E'c3*e<TH<@F[W@c?jIkpm'ZE7VH0Ch
%Al#bR?+$YhOp$B5:NOV+*:i<mcTVX<#*,77q#PHfFnD]Ml*iZ/;,9ON?np)e##e'6MH)K0W^8LFV?24789/*QKR'$6J081GAMCpD
%P\HLkXDM[a%Aq$6'N67hHn[?Nn;g#j&]2?;61I@q$U][`P:kg=!`7b&aNuo)QF'NsVCL[3,oCbU.f7##OJR,FJ5FUVN-Qe5K!`jr
%@LP2g-\Y^jSDc_&cD0F["rJn^f`<FY[fLU`=lcO_+"h40nR8C+N9&Ke$*UOolJ\rk%,qh:fW)&BMOI",AXI1t>*NE$kG#Nu%`_af
%LBiV=I76]R8Zk;',Kj+2>4kd$@/IK:N.uiki\8h<AGCU8gdj.R3?VRqT&QabaZT^P:-gkpSu:'hVPS*94?Y[G15"4V@;<.]H$DW!
%?,iE'J]n$7(NRMoi4*Lg"Q[?bb[Rs,:Bp^kE:BF7Xbi4%CCmIdS%"TB1BhKp\!%?B$fol@Zk7S&6$HU(SF;$N!:i]!P2DtM!Ej##
%gh_U4'.TNM/CM!k'L4S=Y>O7^.O\fW'JK]S#L!7A)(0,&/*hLRj4GWg\t8QZ\,p):nd.g$BaH8efVHAASl0MN&7F]5Ws"%TeRW.J
%dF'U37`@:%Bf-<OW^GqXl&J1Ih;eWLMl[XM8X](,LSY;\*]8_1aWfR4eL?b,$JPpO#D+-P$l;QM#RUtY?ncuQe@kiU$\rI7d&Y#P
%3>HU5+pW";0%:=2[WSTeV0#2&"6;&'j8?c'[RVU)3Id^#^iYX3)Dg_&W.9-2UHPiNljE-"@ig\Qb;4ZRk5jI60.i5Yk.(%+YnLQC
%kU?Rk$:EroQn"<[)HK6+3EUJ-QOfnN5uXb5#XSO=a8k7&Rfmb;"j+(;L^8#A.;J.R#U7K),T)(<EYMLgQQ%+maDkY1<,Gb@3A154
%W'<T\j<1H<ds.>f,+^hU+gM5kPMsZCh'Ra/KYj%pAJ*uO&@u>n,05<H6DI%=OBXb:X-a'^#]^:h`_BYQ5q9m%.KqS`-IUh^efKr>
%"=oofM]eku\Y3]B#U5j6Zd^lF6nfJaR@O?+3GXDX8OID&*0_;ud=ab1X_\mum3n?j$"Q>i2)N2r;,pS\P8"rUpQ8l^=ejb1V?K43
%L#@PbK6Lae8g->c\Rc4@B+RZV&9GYp\.kqOe1k/[Zl(p0WY#8_9^/uOS.)*U<mY^SL*`dlVGqM%'4Dsub-hUK2&o6hb0.[4TTlS`
%"/J>XL<WT&,FsK1Il,ee!"DD(MElS(_bPS?FOK[1Elo@,Wl@X[_b<joC<s3Q>D-FT\;=W^Els]mHAuL73Frq)UonJ&Os'M8j&^<E
%YreE:Pj_DS1!M0AEG/&8#YakfD"&5L1^,@1'a#Tdk^S;,`r7#hc*n=_MJ6U0*&tjl_p$m+!5=&BjoI:cKEmA]K2J6sn/+jQ"rDf4
%Lt,2T$US[brF89)[+0[hP7Ys*NF'4G)@`B$3:=:$-Kp4f\=*[%I5mr$Pa@.I5bUX90#4I7$jgYu\0"D.qN)iV=E'%S%h-KaMF'H7
%__+8JFJIs$R0chk&BMeq'=Mb/Mke>J@gt%N#KLj1li\,=X\gngi0<M#M.\1'J]9?GM0nkN2%gPDrhCh"Q^8F]`CPQ#YrYP]LN(/l
%m3]\.+Cm4VLl&>bBSi/`)((c-!$!^*'%AiP5sLNhn4+anLiE,d'*/--A]rUueGtk03T%VA80H#F"OO*4OMQL9n@K"+d>aa4_b=b1
%5@>g-dRr`]*oL)mfN)Hr,c4%?Ul<6q,Xr6'T`o>DZP?ZnU(ocmZlHuSSH4fb9IadS97lH=[88dfU]LdoSIi`LSPg2?L^[2f2/t2n
%&[o]t<be33H4;!BH%5o0a27M6c4*LN%1RC$>P^L9J8cV30Gnc]<.J!cUAX7u3iPbH:#VM"-m*hEPRfrWiWC#N$T%Z8#]ifhMt-o(
%j-66h"!P"9j8,RCOP'"fnki!KTFjYH[0%$H?%e;Y-kalGZIG2$=;S:@78E&)`3r:mN:;Bq:A@YB^gL7eA<2>X,&>&*OJ%u(a'J'f
%@rYGY/kq0&''4cWNH-5A*KW8E,(N3OOau;MV7(ci\r\3J-ZmO2<HM:on>7aIJ-+dj%<6F,1qXO4DJG]%O.bh(nH!k%Ea>3>0L8#B
%H*.A>,=`59?t'9lLFIrd7XB)_2o4E(Sp(NMGduJS`<P?6C>3JqZ+SoC+d?-fY;50ohi3VrgpRBZ?pF`@098;IHKf03iK<CjC5!8m
%K2+ap5FT7CYCHg%0?I#sa.O6*(1!m7f<X>A,\G'N!2tKW17Y\Gi3h:KZXYhU)_b8d[H@SiW7uV/1k*Pb]gk:c^\-G/Rln_kf1jP4
%Ojq`oeGkt'B;s!4ppUSb5HVa1YT^G/%M7\O@RXO.('V=J1C8jE&d!Da&\GTdjZkr3B@,XVY\"`(Uh.pb.PH]PcsXgJkX/Mhou@\J
%((H!==VetF6B3Dr_s1WmR>KV\Y`fVD08g%]aKfIb%8[Ho$0]`%_s+I?]OasPV^WRf8\cIYG8*/F(*+3dn=Nu%Q$1INJo/m(j9t!F
%gS!j]du:)h;,:A?h$7kRigQaAnu*Q`//X8s#]?Iic:--@^.O$1,4Au'EP3HR=:C2u%4H+3#=A\SSP)c]S7C=7WW7UBcTR@u#S:,G
%1^aR(]5gT$+E?M1RPTXT1E\ls2,EQT&*OW3,#[2"Ksnn]!f2"(6I^F:>2g_A!AtT#f7=Ehl@Co!,Q`YrKW.8^oP>4,<JC=&_)i.2
%3QuKkW"n*m7T$+!Qp+%WUX:N[DbELNpS"T%+UulH2EF)8ZGtO0fT/*&\'_VR7_g:p!'l>79'-OMG+<QYNADF?!QHm-!2M?.gdB?u
%87?A:@:2>D12LG06$5n6%IP-8JPm+rTLBCthSpHRNGZh._,97;A.iM\A?n,=#SKQ$ifb\HM@>T&q.gsY)"TMc7sP_46`qO;Nrb#0
%6&9.-D:=3t_/m7C+_1q39\etR1.?`I=Md'pg15%O5q&lZKe1'_TLlZ3&o%qq#)TPeTf+jjfg:>2KM'<!!A^E$#q-?nMF88Q/T%-d
%9n1KTaBq[F8c+4Pb#3KJZ0Xc!L,es)!\#$R/?qe`"W=0QDU^!]-8"UmS$iGV%,4<DI38qs.ah^POP'C<9JDhO.B"H.H*f^PL)jp>
%aoWIiEk__CUZ;(^5rqW/bcb@IndE,$cFC7O$DFto/I`XbC)"2a.,\)*Q$F)F$JL5_"=sf`,P-fASRS$*.EK?$>A`cL0V;Di1r?:A
%fLO!N-\?H)3krh<`-j9"[7tTk'pKaK0,$*ph@-)_"Zt"#K:0<.)N"1g#5.`&[^uJtYl\4RcsP.=!-h=.0uOf?!LV?$,f2t&&:/@;
%Dd;Q;%@Yr<hXYSM%GW.+>U<"oEX9mVfX$-E(TIce7a*!.a/s-A^rKq!;/UZ`rJ,C>eF=_[!TZ9_bgLh<71+UpOT@ROUQGP#LP"Cc
%!\RX^8)G=*NrQ9p<+;fF3$..bIR-q""LnfA[nUW<?!tOudE$CjG]6tFNF#GFWHd/5Bb`l;k*([X+aSY@,kek1p2JabVTWs9h#(ZN
%A=ZO]UM#8`[gZpPr^u)]Ji+/j9*2.>4CF6>l55'9TQ+P1#0ncketJ#e!jIDp<1;dR)M7Kg6-[CbJt??e+@$on$3h6\nduQ;E!aA9
%pDF(;##UY0lndisLA?J=<^UhV67E98Z'BVBW7$[.J+KBS*THYkRAT4;3VU*%(]srt2Pq;P9LAF_n*HY(jP;Ip89[;UNh[Pf1NL_/
%(njA!K`m]9Z\h9!/\EsD4#CV[^O+.ReSWiYN+()fJcSt]YJo&6&m.Ui_i$,^SP3@6E6u[TpU:+%T>ae6mfn=Anb+uSr\DX)!5/>>
%DONICX1H>G`keokGk/0G(lrjp]#^71_s7>hL\KE!VWeGZr'<B:,Aub7-P6CSIM0Ir25PWn7B,4)15-5"FG3nC[3jbZL1#%8k]f1@
%JUD&K3#LM$pJF/FC@/1e05lBM+\kn^F'c`df=ECh31;2h>cMX5d/=5L1Vq`Z8!9\a\jN;0rmI'8i421=dIUd%djqicYF=`AFpJY*
%0"+Jme=,6m2.EV^^V%P91a.<H/9*g;?<"j+V$L)2\9?a7Rs=U`c406!#_o1a_(6!^Bb;WoUMf.I7M2a2V.De?&b]]R?ndt)+Fcc[
%-nk3IQq'#3d.V?OOdZYD?GBIkLPCF4[=NaRJo2jH]9)5Pml\&CIX%uS.lPEA>W$)sNJl1Fk.a&1TN22M4%Zu-P!]3be.H?!A13Vg
%i/+\1JCq\gA>\"hZE%_dU`A5[&oC>EH/2A(*u^0Ee->Wo$+c8GmNg/Ok"4Xu+*]f,/uAuHr=TVJn\P*"Yej;8%fV$Y=Xc]Q!iL\;
%R4Nnl=O!=K4q'lGJU=(/[L>Wf[4u0k7S:kA$9IH-e9lHKpA_KFK+G,Q[baJ29TGQrBs\=<#5cKoRXp<191BhDZ,;t$2R;"0a,>%u
%2R;#[7NuW1(8PpR4`qWX^,lZ(aS))Ub7^f[(QWFg#_=q4P&eRCD^b)C6VY3Ca2G=Y1g+c!Tk[$2&0R@7dqR4Pe8b3b.7ePg9sKRa
%ipH(jh$L.H&G?++Z(T4OK-bUu),SEGL_6H@c8QFdh+h+=@Z,?;`XEDL"9!0ls,FL!R>.0YD;$GBd7$R46B/K(@eJ4N#&CYLCVY^o
%fq`q5l]Ws<&C\MpM9J$kU?MA'*aE)>B2*JaK@"+Ql`VXS>GOQ9Se*5&Dq#Q*La0uQ@Q:s/Ul.irFqS=_n\f([ZT/Ba8-m-,+p/s]
%7NDT12;g*K)Y\e<O8@Y;Cbcn5mJ/+FGr?'J6$G^gHijpL/8_%.ci<X&=K"n.NqZMp@V4Y+9,a"fBGbR@PT#FI9t*fqG#Zb'gd5DL
%H;r2ZU^:P@T-9:P/>ueP5p$^r)l6F%&,Q'QL'LTb;eM8diTV$3Zt*%O4,m7U/LkKnY)CbWH*XC%(-]Z)N%l#(K\@bm`"t:e,k7i\
%=t"-oAU*KCQ8RF6N>Ua#pp+La9Ni4b9jcJM'J>82A.=AcG?;q]L@7j%0hKl6IF$9>%q!hJH^^hc&QqJob(pT0o+7_H.^fb#A,L8W
%r9BV-&:d]RVXQPt"PX,e"=ViZn;8oUd_mAdE.Y*sdnXI8?M5(<b%Xu;//5Gm196i&2@h3f4+:-LI1&JKCuRDE%2[;L4q*Q/DP6WQ
%K5..(0RiY`O6Z13rkNd&VAP'^80:L47E/8\UYr0m7`d4:h;pfk#!FV<913IT"6iBT')Fe^BVcQEna&dk0Y:7A/k:_+W;%p(#S9f/
%iT/0P#T/T4e./CS#jI1:G<QhSZ6nIimh4VG,8&B"h0#K*^Ql)n9Gf7<>>cTQ]q*I3>@mh;3.EGP$\^9F9UQ_eO$/DA4[Nr.%N2>W
%kY7*d_^pi&<EM>t/<9JQ=Ysjjc>_5r55%R:*!(lVMj@N9d3DO\:k5PuSe2XC.)ERAWHnP^S'!MA7kF""QJ##RrRiEQi/b,WYRGTT
%9G<Jg,6h;\@0lfL]QqB6]tu8O'[Z^o#;^c&'Z\7>df[EW3MVh=-n*"S)c'g]O(_p:]k=8tbI^!jJcZ9o1_'=`Ct`BL+bbZ&!5pg8
%O6mkB*,9N^cV]&u'r-bq\/U'7@Od6u_K_9Jm;^^_n>]L$9[ltR&a9_52pkojGhoZ>H^_j\@%_UE,@2d5C"NK1&!e3E<9#,4"7b_'
%;r9$[cP$C)gV5iSAYj2li^PMI:`6C^kVhj<5h:P"d1-@TCg6r@n@(/dQr*LJo4-L!3NPea!hDo8Foi?0gH1!p$Y2U^%.JB.lHV9"
%&CX)Y]nN0d2H8IbNaRT3GR0%.g]^C'n]<`rUQZ[5G^$$E)q=IcFcE@AfO0/*g5Sf\'d*>X0E]Y5lN3rO@]([b'V@jL"(gE)ENqo`
%@"o&T!fRqP!Xt:41amUhCjJ,bh*")/.033RQ#GN[DU\:1#dtH'&k,O=PD>Cf7_MnFmOtn@8!f(#3#Qj</)4't\/!hoo2%W<?mZI!
%@6-ToOC1+.]]tq8>[?PrnY.C1G2P7,4rsc0@abi/EIt`g+;f?d*Xpg9?-G)n=%J%>,j=+&*W`>]W$Dpji5:Z_B&dJB!Ae^Zd<^l4
%f7o\;`WY_"C!qH>g2k)P0d`)*)lX,tW&AH+@2elJjACg"@Yk@F`EP4k??P)"]5Ng.R"uk%aI:LO]J_hNed]PO*uI.nd,_W,94sQn
%_'$ZC,i<Wg\)X0L"F$fE$@:U"DM:!256gM%">FS3PqW;/9T2j<[Um&)?UG>+1uUACM%;8Y4^UlM7;[Wa.(Ise+sjE2*XrhU+6cpX
%9XQR!(!e[9n89J/2P#KV6>$pGHOn`&CN^k%ZI-LAOr,4$[)'\X>6+bZTb$N17sfegh9qZ-l?Tsdcc!dp7\fE;oLD,7]7si"?Wk!r
%VL@[*ieR-O(5df"702QC/5I2n)Q3@79MA,@Ea8HNhY#PKhL5#*X5d..)-stXMR^n8H`$"KJJ@M-!e,_?Jkt40"HR5L']"=:Mp%d0
%pFo8UlWQ7i/TI,_MJL6sYTS><k`RHDL'/QP!?INT2/sV$'XpB'JZ`"BXsL>PI.ep%m)6(\f6!P\N1#0HBtq=YWiER6:H(V8f4*Z$
%kW&<9]\OH2NY#G>0L!ODKGjr84<-Xp3h4(R%WFqmV*Tb:o;hm__Yr?ACENm(4!QT`Ss/U0UHgSK[)?mUX,&)Ag;aRB4Ncn*=`bl-
%WZqe#0VQ=9joCgil8D+CoMcHUXtg4f3[Sqk"K%/rH*JD=$h-;:mp(g+(G/!=W5=5@_CO0`PO-/U]Jjj`%Sk^P'GHF7_(@oreiUC:
%TFL.;G@-CCL5K+arb&.IDrrU^"j@Un4#9!C;Dl-\F4P<*MeO'?&9VsG%7\t=6YZ&1/T8@ji5JeBJ1rQDoq3=":Y`Uu1Q7X0P+I]U
%=<@.^f--]C=\HE[SZ'A)0?=3%glo5rfgn"=-6%%-7Fr.pkj\dW"^iTHJh9mQkR0(54<DMC/.R9*QZ%0*R&8j4!MWq>1i9nIqZF;A
%&'XR:5/8iQDM[JVl?Ls^)qlMj07Gd;<cKu0m3Bl!6PE6tTdS0=?f4)O#=:b)L-6T#d'u"F5VA.oST@/s)@c&:mX\AcaocY%5K/O8
%00XGV[87J"St\"u?dV_n3\Um$#Jm`7:BJK(TEGI'?05qZ+$3CaY`0$Y!!?l)d=G,3@SR"oU_ED5@&Ua4rtjI.NXqDJ9A71,dOfH\
%(;Lo^ibT!KCUb`e*,,sZQ#>Pe5]j4j9KA*&1_Y(8ftr%a\5,_j3.l#R-Z9ot?pe1:J\0f)B#pHR\?D!3S\sVk^^s(#Fr=@gof+:)
%ZAH[?drTS1>SNsn64giX_?7ps`!5.;dR/6"eC/sO/Qffd7#liTV=8naW8,.`Q,+.=:R).C>oA7c(L:AJg,L'mLq0?rrgJ;jE!G$h
%5OHu"T!U%9a2NDF$"!13OACU-gE^P0:soe<#Eh;6l3ji*JaF'`^_.5@l$oT-JZ"5o,(`rUFef$g'JGMC@%D"`V$\7_U*b"TcB(n4
%A:7-VGbb-MI9>?I0VDDuJT:%B9b6K^o3iuBWu-//0_IOV53\QiMF\FZg;)k/ZOt9SaeTkbVf<dD.cTeSc"DiIYnIRgQcLCr"R8=q
%b]!2Rm[\Xe1H00g`2EE]*13BpkRB_[R_0FXOV82+*57R+:b]0E\fG![4fLafLggIPhK,6-X"n9t@$YbNcoJ6&1!8"&a.-'\OHDIt
%cU8T(*&sM.;/()*4dAU;39Ytb6>Q?Y15f(G6R,qC1N85B@N8>qjUlU]JN>AZF%fVe%IZ4+_0H1]q$S,3QahR$WbgLekK6_.6&TOR
%G[*V2</us&!KDnr6*`(gQBdH/";$"ld?LA&('dG\2D*l#q8F8TJMRAG+3T3iio3Elm`#-tBY4J!bq8,saGeGT1[2_`>iBqVL6:E$
%f>eZiK.Yl:JUN?P2d(a#.c+f'&!,_9GG*[>5f^[!`TPH"K,3njgauuF_%).59`ui[@fZOi%a%Ys<3264@-9*K>4MBaK%!"J(f05o
%WV"+h9h,;A8l)&a>!\*5@ZN+g.QrHW#!T6tAeI;uLpdLQXNbU%8HW7mB[`g_kXX+<RW;Xq'C+#D1pR6;gCVJ.PTttlke&8K"/?eQ
%E.6g\8!3>cUri""q(>hnO1G@YW%!31(<#;W8t$k.p\qoR%.VIJ0#Z;Y7pF?OQq#DQ`_1=ihQ'#NcnL_V+Uq^-JH<94V\0lD&lDuO
%c1$VEGjc&HgC$oY@>\=;_,r2JA'hIebZ]Y6">J*4)-F`A*0EsN!>q=:e`3L=)YV\+aL@ogTJ0ZfGsNM\Pd?0LR"BZ#dC;J)`k7d4
%4T1:Q@>P?rhAY@lo6<p@:$\_<m@(Nd9'_tRaTg4T2JNED`!Qhg4m*B#SDfJ[@33Kk_fd006q'e1Lu]gGRXs4&:g`1!(B5F8'3nmB
%3k0g\&l2$*:c2nm:-LCh.410rcd@gAU[RNOBmA"^][meP0=Yd.pPQfG!3JTY9(AWpf'lh2bS6C9X$X=1<oVs76lLBQ(euZ1EWA77
%*G9q_-].>o[\f5"$du31@NCD[m1^VKX^H[?-^W3d"7)p&oTm$:k,!Z,-@&h0[Ft;iW`TYk(iRcE,ub8\GWm:GS*+lJcjllJSNV6(
%Z[RhioWXb5"m<0%,sqkLXD,`^F>@^^HfbF?7Z;GdArmtVn-P`Be![]O9@5'!"&$u1Q5r]ke0nX^gPmkSqse6^3UeP=]Y_W/5B?9G
%S2Y$*TbS*][O?W\p-lrj$1f52@A$=-M@FclP&eFYAk\,%E+*USE]^ec_$#sP9?e6C=[Yl';lk:dH?ok9OdOCJd3jVB><rb?k.X_m
%3Q3<n+;gSe9Hr5uEe]WE"[bpT&KgfsSiUY-HseFg_c(Hh;kS+4+h-s/PG/VB1)(@rL;9]LMi<n`(#!oB5SJ:N@>hDKF2[;DW<V5.
%-G4B;R;nBk>lI`CdBs@!qtasC&u:<,A+Y5h@O,hmYf5!qK\Edr-%M/rlog#%V[$`FaKRP*'L!4q*+@R+97@5>eFU'kXr3X,h8G5q
%M=D!9;$G%V7;],!GtA''>UuTXTXqTHJiBglBP=:t7:Z[%#_Y-PE\BSm4jALdBOVfD%hVfl]=r.eIX=m3@k[s=gNusM]]0+rnR3Jf
%QoN?;H<mH7at*rOFGgLSg2<-[D05a<)kZQ;=!/&5R.l\B]H=g<J>VEm&f?0*nK0*:R8&YS87dZS0jQ>k$dR*E`KW8?fRbX5EP!],
%cmW)(`C5[j6I.M6js.3G7Ze2/\R5HplKCC4="u6O[g=X%T!$Lab7Yq0Gbpeh0u3D_W3Bc:AuAAniU@\%j'^^VXp#S+#UbuE-La9a
%+Ki="W#h$h(%NY/fu]J9'(iBuPBKdfWiAN*.eZl216b&(`tu%-*[l7CYJi=S#`k@IGpo(oGmHldU?J#W"pGkOl:KeV0%7Ie(i5H&
%Pe"gPNJm_q*#lb_1<DQ-"AIF'LR97)CV0//+0DKkWelY!ISiNg]a#dO"soYA]&N+XnCJK`C5Hd]W;5uQ"2Ib%':&dM1]]E%7OV,>
%2>k6$2r.?j^n_VT[YQ*?6lr?Q<CKiC\+MH0oX.2F\9MTlc5DgT2?e;gqe@J96^2#/=^Y2;phYH;T>j$FiODrUJeH.&aF,t[/Y*##
%Fkq[!BV'pIKf#Mp"VW3+p7,UHB*OqP1anE]@%)s(Y(7XHJ:SRQbeSoKPP`S>^#-C+VO\GYGa3I8,E1U0,/H+R?PZPM\<r7"BMe2i
%?N>.O>SDWqeaiHWBXF<8D[s"*%Dkb:I@*=sO.NdtM.Iub._>"Gan1=`S#.c9Y(OZB=3#A==h;*9!gCD4a\&pbM@;q8C>%IN[*Z-I
%&En2='^^65onZ`Re)ug(M7]i#lJ:,":^nKlMBG8k6jYRuD$Jt+:RGfb@B?uG'Dp12^M\9p"@5^P##$:]jp<67FMJB.>A%D!2X^Lk
%`?[mMEF/]sd/GpC>hqc/@9B+BB58PZ>iUYd:b:EE$4j(##o!GTMVUb&2PU3LH.so>U#8*]E^;i0OVWR/MDFdjkb<\BR,QK2]B2gn
%E(3diZ;Oq#_Xhe4"?A$e`^kK]<=q)m@PJWT-prb">6Nj@,a4(?W>'B3]"6?-hML>C4Sg0Y6rOjhX:O=)>0HPYkIAj&I!L^0LV/s9
%K;=;Hi?BqHF!\&J\";$b#B!#XD%A[RacPV>:1V#'RN)ln)+Ip'-aIXd)p\g_!O4tL;RhoV!F<`#)+_k9$E_7aJhW!8`O7jdMq]rT
%qA.hi]p+\6HhCq]3+Ju@,U#Mur6l?LE?L?I'd2GI5p4DbHb^%%kkY0l_Y5a'qiVa_)ZQGC2s\""3KCKH8mMc*R`a8-3*2R"K`i*C
%)9t1!/piHbWA.Dt!Oi+0r>1N_a*H"CFEQ3P@T*g=U8tp^o45l+iU1:n:WrAeDgWubX';&2X`]<C`I=^3I_%sQWW_`E:Xp70#[j&'
%q/a6'D:DB8f!p3Ni]&khnbq-\Bj!I'O6<n-PK7TA\)S2i$Sl(+7F,444!n&GI/'jKT(S`-N:cBWBU%73PB)*,bBLCT@XjOje!ALq
%aT[b&;etjin6sUP^-3+^dM?jSQU;:+c+HAdG-EK<ht3Xi;2nAdQu69GpbiV>r9]"6fJW(=5'#"7Mjd,8Xk+7$3"&'M].a^g36S/+
%o%C?a1(kUsm@s'uNKucJiV)4/o]#?;GTjoL13S(sdF[F\44(Z5aLp\4^,*ru*E++'!f)<d40qH-Egp.?3c]5R*J7'Wh3XEU^r\iV
%D;+=BZ:RZ-a8%2ja'95[\Z_Lo2>g&QW,k@t9\7$RgS$,0LakEVR:_>?!HIe4\1^'haZ68dhJo=hQCQM')rp99WL=3!Nb@nj<>Z\0
%bsf;KMNbT9E;6WdSi,;e2ZCQG*Vh..&h@g9SeN_S3BjIJ34#^;,f^W:$_H.gGjSgWTiU][7:%?*Dnoa3`T1U4?Q(_8WFR$L=J30G
%`S-k`O)[uKD'SfUB5!NMMn`T"0OYaZicUVm>YV^'84ImAMI3Os8R>#j`CoVdfK!CJPd1/B\bVI[dDr82/bDB)I<)668gK]9MbgUA
%pgj/<e3%kR7$.fJ[ueAu&Q-(KLHYl[BL5L1+)(HT5m%C)mPc]+3*;&q;bgM1L;'RA`mQ_aP7?!DeG9A9JXDPL$Rn(;EHV@a1(ILW
%m,ajcp0$ii7PDT^YOqE^;*WAT3,f?8\=s9C(H$F":fkf%&tZ07C-mZ&;FD)2[V0Ypo#?nD-F;O'&_eSlEq3+&4\H@f3GPfY*8Ch5
%C!fPTYXY!bb(TqoDp3GjYrII:ea,g.BK?l*jGCKV)()&4Z@/a_@D>6*CVH02H#F/6([T[J81.`7.XR/(ZFS'clC<cjC@?A-'FJJ<
%V[NXVJpVB":\e)m._A?/rMDkpfZW1`)E5tXKm(reR^K&1X3QqL`Q2[gW0!H*6h+RT1us?gQ'c-pj7[f",E9bP+;3YCpSSflk=6"C
%q[C,ejQA_uJ5XtH:T7)pp5<?YG!tq&k*)i=i1(#,,?kXcb)T<>RQFANU4)%!(i%g$$I`_^O7')fBmZ2P7(`5sp,&s53b0c[H<>F"
%j!b$?C8*,D<>d-qPk<sHJPk\43D6V<jst+6`f-ZK*iVI>ZcJse]`.8uh`Kl46uW(`1Su>i@[Vt-/]eOKLf7*TJXR:_VF1pgh\%6u
%_leIIfQ\N[gRi2'pPU\)l*(M58d'LJ*k$#m#n'/_UjgG)'_jR#KYR"O5I/@9=0CdT(:fd[G<aXO([\@oc+\01$DU)\[j]r5++gtl
%imhi+F*tbfDl5:/c_N%L/6+IM3uVX1_a9=jk<a=N#S3r\Fo241E#_^9I:`<Ko#p]!:Z(D$H7L*T"PPF3RE=3oS.9283IS<eV*.HO
%4:kGPio:5X99uXBA@!Z"W)9M>,AYjGLtIQI)+g(n3Z(_d2hdpW95D'PO@N3&,i@k$I@:K+ji%fA;#;nd<eQ%87Sq4<DWMic_RT`7
%%d-nYP]bbZQ*f!j!>uoE5W6qPr4Vl`Y:bO@Y>7m.rtUJ!YciDWmI"^<hRt`&d@<6WD3k<L,*9-:kMK853FjFSGf5_d.&UYlS2,G!
%DjpN&7E&YKM#khV&5`@U.$[QO*h:f+otmd-(db[4%g-YG[<<1!;/6;(?ltEp%JA-2iIE97JIA*5r(Qm5E*DJ&:0$$`qcEKF$]%d#
%8.)m9\?OCBF/`N_jTo@<jB;ZiGi;s-UR-Rc\cUR3_Lk4Ih+L$2,oWVVLP!8)pf[9ARs?4PB(7ee+gt)0=fEs2#j!6J.Rm4+(r3=R
%?-9/D\s,qG=/BO-.k&=e@F#uSEDW>n]*)/5:i3>-h]+Er=M;5+NoNMW-a+aE[u*#u$D9nkYa%BOfH5[OQ+[?Kd)#1/%YKfKW2?ZV
%QKTiq.anI/%<^8XQY.VGmLlB[0u]TF_HpKp.J#_jkOY&Q0uoV%s5*T>VA^QGEsk+2&HmI/LMTaLE4ef\cdNr\]7\0EJ7ujQDq:np
%XWK8f[*]8Bri9i[!c^cg`eSMB$!3Q?BfTZP;1%prr%9Q-0uh@nk/0p:VHN"@rC#.BGlD&_6hN`e7>%JA/-]IMm+7-gfRJebnie>M
%QKDnrh!aU9ScNs7I!beoO8mn?;^iE`?as)]Y-5MQ-c/MK3&V?rjZ9OkIBL94>Z:N%#"9;eLIg2UiH>)f/&mW"3kX8MNLIL>?_>oB
%)V;*eeqf#rm?^E/%&QLn`3Gfh;i=g46KSs\bi:g4b_T.E6D,M)9Rp/@4r$B&,q;a)hqhg^kc+2IkqGGj&OfeEX_S8uE^X%1[3`\m
%_S>=PR@D"LEea3(3qZiW^m:-U.s3QdDToG(g`KB^8dp3q,5E5!SEjF:CpijM?)`IP-UX5BlMQ2K/X%SX!1l7(d/)`B;D?p02/qeI
%:!"!V]$+"56;!,R9>;;T!5B"j)JoVdp-,uu5GKWBUR*XR-+qUT5DHfJ63B6Fo7PQ]MrX9^&!+IIR&$?k%=!0#r+p0=%rCU)c#7iP
%:])cu/NVG2I+aeH-eATMCSq>>M@O&\kTd7&Y-7UO$crACiC3(q0Z$%f9-ZgQL?WPHj&'>:*qb9AXOeWHHkS)!D^p!_QElpEajlTR
%<+JF_g.ZWB4o)cC_uk@t^'*]M#IRC&UAiS208dE-&tK/OVKhm0Mmt2(hHpMBCPdsRgVQK&>C^;ZWOKpjRGAQ14Sc1dJY5c[78;/8
%YK_I?T$sL8,\!\'6\r9cSbhJDGsr,410)e)Z+`+,XVW&W=4p!;_O#V<6YoO>7+>8<1sO_,P&=a@K6?u?+]g29-^c?)hg1*9*fVUr
%l.J:j2YpCNEVjEKIqfRhW]nM[*b'WA?h^(.9ejV(W2<rNBi9fk6=VX)%`:U@ADWKKMc1eG\9B`ZeQ(*l<#"b[[4AFJ+[Qj8CRaEj
%j]@XNOL/9S#Af0q]UD_[>:m:F.p4;j_%\%T[*<3-+=I&9Cm55I2!+C"*Cm_N0cf,\#u\8V//Yuf?VS0jBT;DE2UF^1^\TGQ-?2A+
%pt&9VR\=RO_jtC`=nHkVg<<m]TnWf^.mHrSO)%m$]U$(2^#\orqH%q'$&S!B09YtXbtg30?Y?fB8oAmS+[MC\i?6U%*6.S6IBR_e
%jTb'-kO>=!p?i.jg(-lrcSNgQ?4&p?.f8d3rAf7U(O*C8Z$-[-_lD$i&><,4/2F+npVAHo.CF@mKuEU/8>P?fq$cT+s7jEQkiX[b
%Oo)YqkjGR1g?$\84DNRRQr(QfT;E5.:f)_5,4:+']OEm*8VR&kZ)9?e0e45/SbcZWD<L,seW`&t_(/h(W^qZR;WpUY$Bp/toi:b]
%=@J60bgD][E8YF$Up*;;e'&OV`gIIqK2T'3e[D>9B2sHC]oK'=YVKC(N+F1J09U-DZ8?g:Gb(0brl8:>5<G:l-WAm(9VL<>UNC\4
%mV5FUMjJ!*NgY#O/%b)s*#-g8#D$f3.O5pF1E+_H"D5$pZ.7iW#4;omXDC5IWbQ?QP$D%nkI0eSX1Ha7?F"."aRnL'f;13Ui8Tr@
%SMbj%8ubsn/aK\:dX=:uY?"H%bkG"<#iC#HG,$U'.Fjth(l=Qg\%OjM)@YOf7o>gA7707DCQ,[^_ehSg?"%IZ5g!%TTNNO.;Ee(C
%I#RKiKd<io[8-k@<;Gl[j'K6>0J0+]0s/WT^")'=j/n"V6:;;;Gu^]krXcno7F!WR]<r(TMN&t?/Wh?3UD=N+D,J/Te,98kBrl\s
%&aBV'57;<Lld(K"[MeU>Ti,]QX\1C"/td<#;V)":[!SULK\":=\o*Vo2\h9N!.@)=YF-,^p)KdlU!;66q(?[[-FfDU.i:AA_FN3-
%._s>qZM3uSFK$CsV!lIElU2;*EqRp`M`lnXF01Co(0#QN).-\S=C/cmX/WDC&?(l!Tet3B<&9_J2D--df0=C_A-cOUYkNbGs!j<c
%#;k6o98n?J5eJ3MWqUZSKqOO0'bgYP$!M&<'FMR7RcKTG-j\$7&\'0Q$r(*WQmkk'HTt]BNBUWehGR^)Z3"sW2,6F=YRVC5nrq2e
%=,!r,VG:,6KhOdfA3q.&%!j8ONJ5I3G,Y*n*/T?%92&4>'Nltmg^2WIM$h-m^!%+[!(7G7c\cF'<T0bQ!RjX^L^\Z44if[\g45!0
%W!N+:kb:F<77_T1+sj\uOL1C8MRV8;ES0"7">D\I'?gghjC/Dt46p<Y3m6CdJV,9$_r,ad;BUe,6rg2):NGT)!P4c)hS1cu=e0HF
%Alod=]j)jRJYQp_&+I60nZFnS$:YVKMWH\R2puCJP!cFj7)O^4\;h'<?=Dt*6eb-hHOg*5VGX]+a+h/oG@>h52<!rjY9Q"dQNtRF
%ddZ`9-_&VU@3IA&[juJ:j,t5-h8$7(3E%eR$5a'BFe.boLM074*una)8A"u`Q0+k;ng5Ds=`O*(4Bea(I;4-l&O..tnB$X5ibZ^g
%>NK<i!eol-cr-=r^:Q6KhI6X0VM[MN0nu`uWL_n<'eDKc>h.RFTDRIXjhEu3CZoLQ#oB\/rD>-oQBK&Y9@X#?buB!G:ub[T6CWg[
%F)SVNn/YdgluGMZ&"F@c@4M*(*XS^G?KNC#]dg`oXkmBN"Z&t8/7$&Cpd1mk3NkQ_g.>@:n&Mq_6)+(EqnhOq$lG$iEH;9EWhUD2
%0F@XZ?+:]4@G1sB>1g?P&(=K"BOjCupqgQ<2o&=bOrPmNE-R'g#gd.;H)?HtFd_Y)hdlVe&,-EM$K_b)_D%TWbX2H)Y?mTbDpCGj
%YjS&mhb1OWLc^D/ar\:C^\6j=K:b=F]BXtMpmtd!/AdQfS9jpKVk'\=EY)NU0jF$27@'C-M.uX!Y/VV):XRBXI0:!V)a%j@5ZhM;
%RaPK?OinS@1n:H+;NV_F\nP^thHpS-X`P_`^"%DpFCL52W4NMYW0hO/;OJr0SD=#69E4s4@Y<n9/2=h?I<[/^kGDm*YG@k_!FqKQ
%N6P\)ikVa.]"gV340lu=e<AYCT<DAaRL-,?A;1FoLlUnPglJVP'542G,UrM8J_ghFSdp)O*X$HT9DMjeA]>kN^ofWa,2:loR0K=9
%/p-.SM#Y?Drl'4^Sb\[!0lsf`A96F4jWONiQrfp#]GJjE^;e`u.^e3#mt4g[X_t=.'iNBhaA<'.+"FEK^-L\2mGLKe#<f.la/LcM
%hk::@bFhg^dHR:[XkLW+\e+C$l"8dZ(iQR?c>Dkms8PM06l`QTl[I>Am?).r6Nr(NpWm>r'jtghO1%fM_,G3Va.j`$^:N_qmF=jH
%q.$6C$*!JKbr>BB?*)hsbKUYZhDFSib.O$`1'BZ#hUZlYeO]WM`SUK*FP*0n@B0CseE0=^n1YZgI'sL3MSm\a1$Z4W2OYOdjh8%q
%\=Fcm-uDjGJe!R)i0(OG8kODP2lZpJ[QTr9p'WH@\Rcn]3PJD?7)=6VO@]c?V/QC=ojLX]r$=l@52P8P?cCDQ9%!qMaEM([djgik
%fC'GsgEJ<shK23s:!-@5_KJ5Lk9b$h)bc#>Zsqhb>p]&d9Ok9\qlbP=C1)rlD"f\lf(an`*CTP.W@0s@QPP5(]`]pBKKu\OB'4"8
%DI:7S8_H"AJt/N,<`ra8q!t%MGCG9l8sXUZ1K0TjS"+8COf`*/0n4PeDMG0D\:b3^I;i875DMA5p!YQ6PGbOh?-T]<0AS4F<;1/'
%`D#BprjQSG_1'!f;)-1\;Q0p)K04%pRX-A?C>ION*(0o+^BEQ8KQiR..,7R67#4US=f>,@l-')iF_`u?4F>:YXJt[*4K`e;("t$X
%p%7*3B2L:iRl4@nA/glQkM&[0a2WRBTiG]F"=9-2o<N3L3?#=.k'[n9s7#h&epOc]gXb"RUTZ#FO(R=WVglOH@)=R>=&OJ1J,rMK
%:7`[85a')l4oO`bIg3U_=eceZO!$J<4nE=DqV!=2oioImSt)A.^A-KuGhhKBWqR/`B$G:p6,<2"R!UP)0$LVd?l.,NBX$2f.m]`S
%M+bTDfN8AU`-F.m7AcO+nuk=!qm!Og>-;mZ&[Bn.juF,TP\gQ@dC_m@TY#>iiC$Th!_P<AC9brVl@`IcF-lLB<gE8""rT3L7Gu4p
%\QW79m,=F!GH2e8BMlhfXda'[2c@C7^S'RB*#sFrj:Krd8qaK^MsSe:3J8,;gbpGn76\8M^IXjqeIA/2e:>kg"^@(EE85U&r4LE`
%+_j"e5MPq8@2geOD)slUf7@:7J[6O#hbU*<1A.utFW&'-,j[$[Xo^Yf(&8#L-']&1\TDkLRpi.ZWV$n4RA?!h0se"Y"<i(%*]06%
%;[N6c<D)a`/fbu);'_7BMM,IPT^)FEq.(n';$J7"='R&33)[*pektt]IV6W!*-^?m"S7^KP2<Y!1]l!X''9NrVSWVej&F;WIOgol
%IeRT4&8C5g&,ri;J?BB6HW]FW%%nWo.V(;EF^Zh*RSHnU>RRLRC'Cd$2_![QX"8)nC^8O:%.tdp<DD$M/3uKn/pg%]>m0^PeN<p\
%?V?<Lh:>ci_E'+G,Q6NdF`=_?"-.]+/!iWq<6>Z6RuHa!@!Mp?gO:=%F,'Xf%`]?G0@F?s&h[+5"fq3W#@FW*'!HKd=QA7@J=.1"
%@M\5L<Ogp:pQ.IAiK@WOFW:N/lO0Sh";jp-.+h2(2fotECUUr8i,r<W-EuDCYE-(]lR-g9J^E!-e5RQsULd&:e4N^mn<@+PVQD@0
%A<,CUi`Ja\9dTPP8(O2f;Q$^?`XqR\PUsAYqaPVK__8F`8./e-G`^IG1CqAEAs`+<&#RBGjpOu<IR*f4"n[<m'>M3"SWtXt;\GBa
%2"^;`RA%)H`P\,HA%\P??c@?1m%0a#k7AK`*k$GNrOlC1NcL!s1LcF7I`BIghrt.$(krB$q?SXRY:;^:IXPhWRI(G;lt]g0d16=D
%.@Oc5B.L^)&@0c(aJW$q73=7E)s^%;f5Hk@#TjuM=c7aV*]8^B8tcs3Aft<ch'Hn^a)&$lo6MR?7HV[<:cfA=.9%@qhl,IbXZ!Ah
%X^:9IqVQ\ZfNO<;G.*Sq`SA.+WmiD>lCdZ#&i8!#91E"'2Jht]G!g\hHE7G).OAEMq%k+*6sbVmc9/kUd_+BgS<7-b1spT*Rs5nW
%g$\6+be_\Jl^HeTX]Vstb$!#Nq@iIfDHgr@U-6#oO1bQJrAhO+`7?/;MsG,D[,A@qJN2W3gA:4!&^eEgFEGIGojIeO)lFe"l.1^)
%ghskrM+_Is*!`r_V=o-B4<#n[Fp0(PP)j3C>u&X9RI+b\cAH<=j]8ii)^_oAab6P,Rj]pB3EYI6`T*H@8E=GbGjM>]^[-;J*!P4]
%qXJT!<RU!sB8b&/r%'.s3Aa$BGAq;#1?,*dp1VKUk8L7bqT3U<8Xfr4J1-bOXr;14Obj$/m,"ap&EcE"`4]_qaJ"Y,fjObHf;ga5
%7V#f7EXoX>hM6T)'_?p##RK&"$g23`6L7</@[=W]Aq/Ar?[+`o2,3V^hOAO6amlD()L#fH-jt;8I+:7i0Tqq0,$nK+.Z0?uO\H2K
%S"p\\BkuKjPi3@6Y@!(\4YK<[pE>5EZ02._XT/3[3U06pJVS'j:+1`B]NY?H"d'09%rqMeC%4/5^[P-[[Rg,/Kf['_+j_Y.C+AIW
%]t4shLMbeP*O]Mi588L8.$M'@Gifnh%\^L-]"b,#@?p#`&`f+WcA/#uWCCZHTX;!6n(`sbi^objH:?mnj=)52m\3GL[X&c18B_tg
%&7u#$H\D?9B%_4ikL'R^hG^3!*8e[:DKZ<C,kl`e<6\3\?16YnN*eeph_;YV;F63(nM?7QdZO/#fC"XmYP-Tihf8\Ko>/aVm*F$/
%Us1bb-s6KQ"MjI-n`l:(S,!%mM\aR,g";pcI&ST"qD2V1_%Z^e:.g&aqrk$SRk)0ur!$U-qWSBCrH6cenZk9+Lcj^\*rk$/nc%>c
%gZ(Zh++(`sH(06UNo;7_C*<ZiY.9KIUl84TGn4MXO3gc1)deW-)k$r*9jd)!>-\a]0T238VNW,[Qq2PV&T9R)5jErA;&]\mMl$n2
%N0#p+SnhdoP08;8DD*lUbr(N`pYa=_e#9`ul^j$0k7"4-pC<Hlf[<&i.,<`^;@U9#N:0>-K4@s95!H^Fbe[5)H/*;`S+uULA#8J6
%3,9#dTF?Ji7EX3MGg+Y5*$]8;O:o")Z<c/3$KoBBpDOU8(!Ju>r",it,u^q#Td(INn&7#,/q`mE\l3N;Xe[.JRBNdbmQeBlSdls-
%m31]F7)rpCgjp6Da'(-edNJl*C'@kBCn&oY4a4i_oX111DOWkh#..$\2!n+@&3Rm1`iYN#jdnF%a7nZPIZB*H_9Agh9'X=oOde'=
%@?ta`MGY6Ae@k-cVo!C*VG=CkDf^-InW_PWoVF^iPo#3ef79p`WP9I_0Xn8#OuXk#2T0E+VI"6_eA#`6OD-+hVY]@?l$^2>6$AZt
%+HhfKiQiKSA=@CkNPY;aps$;&QXQ%a+h=HeXJq@_q^/SV+jGfDX/(8B6_&l%jp;c&LuZb5NFMQ0#J<rt,-?Y3`i#SOG%1(akIQU+
%>;s!ce*@A*qn@='D-oL57&UE\bG(t;g?VCV[jh[*G@oNcPcJU.Vm03d5\%rl7NW(BA^;Zi2PR^2W&BoUR:1l[/&'orH^18$/#YJ9
%%Xgd9N5F>@EI4;F<7Los=Ep93Y3on]p2@L-E't.')[`nlYE;A8Cq5N1#;b8O&c/s*Muf/*Bo=@`p@Te)=a5u+_e5@8i!jE7m#R>"
%10kBD3D[QZNYu%6$]%J!I3k=<a6g1-V1`5H1)($L'7(RAdRs2*`(H=HB!O%_O\Ah2KN^pD"!m:7bEFRgY7X99+tWfM<H=#'8H^2S
%T?6:<$,5ZUZT3)C'BVWMBJ+[N,%3A<6"+9`8r/lomN*Z0`e)h]3^J&J1(nJSm[hP?57FO4*"6u0hpA2ODJ,[f/^'f*]gNOq'%0QT
%G4sB($/-%d8]#M/]AdP.h9Am4@@5,l[T<)qWer48BZImG>p7fH[D9T4J7s\[>FdE&B\CDt$FZ1%S]<kG@sPW.UdBrK8?b9J#"c7N
%SVBF24O7[X.`sHAAaBIk)>IZH-4M8")c:Gnm8=#ng-Gi(+^**dA"/Ts3".Hgq56rpcSWl\9IIuh]`=cVSn/@U*lm$)("7Wt@T-,[
%.K;dPJWX6]-/DZ4OMhL,\Lq\r[D\:8%Ua=/a7rj8qO/SU)M0)Zn$=0N8i;6smKl'K?8EZr*J%j4!*A3-33k.%CJL^]pA?ftJ0dsu
%X,7M4)_fhI506S7(90$_Ve"Kd'VkZme2Efi>!$2&o[&2VFccW.)T+lW,9d5o#_b5bU)L4(eVgNWr,jMGU$3%eCYgrHZQAu0hCt*^
%=f%aRZ!XXZAj\5/`nmfN:7C`o$Ud*B:j.le)RK@"dEe?DM:9HoI3gFr^CMVm=,<'O8s;;e:n5BPh?d<maAM3_](QpRR79lfb1>@[
%!cQ%)QX/.OLCtK/,t89n6U:S2)BmgrSAM'kD4M,CW`YtjdAK<,(MU`%ioWi@bN=a&-&4EDLcWML]Z*iQ1pj]XP+*$GB3reHU+h_N
%oUV\\k$/C%oa+JO&lk>6h-K>2n#"DQH+:q`b>3XA[H/.ua!04%G%[*mcS51Tb!G6R0-%$Ja:SCZ_L#WaeHZ92Q-<,6TOd:bnj/KT
%pjUjNUrfoZ#:ZehCWG&s7`o;cS=E:sgSkd=Xn)@tZ#<Ad3F0I*7p]>@$d*;2J@CAR)\8E68rau;q'YhdCj"",?$[_Q7PD5`?4']i
%[h7rXQ(HYM2t?('dOZ/4_?n"k8BJWQ2)jc0*37ZY/$;N5'sL@YPQXiQ>lf=ca0e)uW"ZlTld1`0m.Z#T1X+"Dg8)Bi<kY*Y0tHiX
%bjpHIeUnT8Bp*.D.`@caRd"MM>fP0Xb=fV-1"]09>q8)C%Lu13>dnmlNM("H8_k<D9f/4omI$Et2Up1Ff^u+F5JHG)<I]M8RC4oU
%;_[_UfA/,n1PKKm6:PC5Mk*\m<V!gdm603<YD<nV^j9XHP^\oX?p(`%esV$b`"!LeH/AFj]B#;Wq/c:J2rgCJhf?'pjA#\\ioG:o
%fh2ZekNUC?h&F\Pl,i\npm/CMm11:fpN$j>oMRccYKl\,IakT_!8E^i$d%<)lJ$76^A==;^AI"FJ+`2uhgb7r^V9[?QbWHjhu3EG
%rtYcdMei^"ZnGe_os`iYrnH?093b`L*T(qtj_Ondg[G.7hgQZ6rls@#n)+*+m2pfWm9N<BPO!_kRm2<#lhq@ohk0o:r`b3upRD*D
%hu)Vj2gP:i2ui(@IJ:?lcZNoVm$[VNn,8a5IfJeRJ+_'i^\bq;*hHYDrS9\ds8-FFs3p`"rVjEIhYu+kI.Q[]Ie3M.ImH7m8gJno
%4e(?\VZ5s,^*B1Mqrcl7p>%ZGJ,%!1gQRBjJ02?d[LLM$?9dp8J'WU.jt!Tq\LDsnB3b1J[TDaddUr;bhXK=mT7#2Tn,E+LJ,?]n
%pm;$Oc#:@BpUg%@7uqocke!>`nXJusrV#"'rpr);^AWTfJ%du#:B@:X*1Xu6+:_iM,dFaJO^3[1%sA^e$-/CudIkUM)X.Bk)r\Y\
%UR'q"N^'h%Gb>?+riqfMn_;=!H\GsVoD"<+q(:`&AA?u.SOK;4*Tf@HouMCP?MF0J8)-?%p:2ibfpbc4p4#C^(72DjZZ3+j>4u*!
%lXC3IYgZ\SgP9jR2uDI9]8J7MT+m1L_1oVMS-NJEB31lBPgA/a$'%csQL8)<Apj4FQ#HBpC;ic_3UZ9'</&TX;<R*`)=QGLhL<3!
%ri*@;I^.H&UA_UJ)<JdiTsRQ<ba6ciBiVdSCX=TgC#8#_LXn4i+O8\lg:9-tl;ME7U]/OK5*U-arF;6gK#Z]__p.u=nN5Xp)Io`D
%jkH$n6ZBY`?LuRjh&Gh?mEY_#+a8uqpuIdqmGiQa)=$rp#tB!(J0)S<"X%2RqHWVG0DqC>Xm?Uc.22rT47!`M$gE@_%[qb9$Vu8!
%^AcGMS=44plBDPjL%`?Z[*Jg\8:W`8A=.ndNI%,<KP@OSeE?f#TVkI8IYlii?b6-=,UYG]74&/D?N_2'3csi.>]I:eE6.1"#B<%8
%c<^=H^i-L_r/$=b`I4>bh[<f]\M6/6l%P1biuoF2(5.=C^nG?sg]'RJaQ]i1!#&HVW4a1=`I=4Md9g4_82"9<46;>\UXGT?Okj;5
%b;I8WY2FdZjG@T^ejSrP)ZXoP0^J,L0D=#FU7'G2a#4^P1!)#98XCo!8E-TU^L"4g`@sT=QeeBiV/t5/b[kXBKomnZUQn*g?Z+;I
%#@,`?;jo>N/<^:/el$binp>eQ).'8LPQ:<M)4jJWj2:g(cZo\3q!ed='W%^)m\b:VL0ET8IAV7_!-I)+ZSTSD:me4FRc7o.."ZV"
%=7'm)C:+4%Hb;a1s,<SuI\-W,/jdr6CFl?tBaAZ$Ot('J$'aC8mIbge)3s4nWiU#XR[iG+/dF;46(WG??7'NR6Lb[F];g,jX;p:o
%bbaIpZ7/nd]q^KHD/sD(XFua1PltD/+o4"DY\Ke]&\mf9IsbUeI6O((m9>3M-d.=Clj,LsR>YgfV^Nq;2n[DW$BAJm.Vc1h,RGq/
%Rg,O"[jWY$bp&uO/'H`Pqcct6YI!)B,>gPA;Iua+*'dY5`tS1H'rl.@\G-dopaiN909l';cT^AZG^GjB?VH[RVf^pRPT[`f$La!4
%.5d2Y`9s<fO3OYQ:jp'4-G<MNM9(-g$>o7mJrX69g6apY>g<4'h)C=>p6YXAlOW?c^T*=iPhCaop?3mc[J))Q9VBB/X4qD,Hp)f_
%!73/9Jm#G^<DOj<"<:ce+J%V662a)!e6:[,h99q>p;@":=+Ruj.!2*;-Oo2L:DHu0A#cp*f9H'HD,FnY]=?T`3a&GZI:1[DX*8<O
%1:.=]TE9XfgF.*bZK\1*b"u6kP_dKaM3m]U'C#C'\a(F^Hn>c?Q$mu`RG`:@eV7.W#RPfKHgHu#Lk,`n!44U:[.AY/;h#"Hm%\/U
%lo[`4c9aS$qoFZ*?00oo>G?R=[^7tPgFh-.[Z.YXMd`7tgLG%0$c3_U%.t6]-]^r;kOMYB"JgDhC]:">_V>k.^mq+*f347]Oc:sC
%.r7r@1YDEC4nd0<So)I6^#nELQO8:#EWDTMesGsB6:"uGG'd:B*9QD<q0'gnoKf%r#VB4sSSo<ukF:+NL'f%W%na]LWug.%T3c"F
%SegdM1i^Y#Ftt`I--RqZH):MA1S46nf0@6Nr3.2MO=jFd(ROj.$ZfCOaiuA@("<Xr)D,c%I+`\..jf&r-:O%(]lJb6H1`YLVt]Sd
%p]FT<8YHWQ8S&sEF37\#%eFk3ZHX8a#hbO8^"CtX[".6!@=[R/d3^UfD1[%jRS,OZ9f7[q"Cs#4SFA5rYtl+78lpDg+rUA@bZSQ]
%2+lIc,.X5uHJ3U>gA1@7V>.QbBOq=,f\OA>37X!'8jKM?=gUMShmU3k]2\@;eO31#C=cg/;IS<-eJU9%]s3gr>%1B\4KgeEP2lfu
%UL1SX'/7OK,C^k@*V-eG9r#2RDaXL-)oQ<!$^l]FP'*^S.nAPZr(\a6dUarcZ<o3>qL"07#P18b=LM8d@rA+Z)Xbp*c^nuRSnC=Y
%ZG$ecZ$3V9qG;O"i4-5A!jeC0peX/jA$!;CC4UOI,!GA]%kLLV`<uYNio)angnS-Q7K%!bhKENVQFW`Nh<he1LOAQI__H>,g87_m
%\l?YdgBQA,K&"^#cT6HhL8%@(jY.K'26^c77#a"MY3Fn-Uu>T\HZH-mgjM=r4#Ou5+*qV9+\II\[LH!pe[p$XVUE(@Pd*$%J>UV&
%Wgk$amBhp#jhW1`>)$aIWne"H8?Dj^818iV6Z\?)iI,g($sr5IpE%(5C=o1t/HQYD<$2ct(Y5IIos)Z(<UtmD24_!;Ualh)/^G)k
%'Baq:o+VV\]-gR#ZY\r-UFWUkH&(N.;llb(?U]Soi<Tp!$DF,"'<[NVD;4(p*k;gR1N'*S88J2N.>$hXf21E2%Ks"Ns3/o/F2<Em
%DEluGF+O#$S_`0:U&aW;Uf#@YYO]f'`2VDLdg8qL4TVG&l,Z06V,jU!c,""4\\#1>(XDD&>;8p%3pZj@CjjeLO#ub#0.0>1VJ&Ce
%*o;TL2-d&%bd+XV(R3*CVenkEK\1%"7"LD4En,,Jd"Sc0;mcNs(CK_+3@;jrK+M`XDGC.b`s\qFe,IS&ibC/RUY?rneF^\?2i()@
%NY'6;G[fKthPVJgl`,TKJn\CHQ\t)%X.OU&jNADo;_'<;TWC"L@HEqolN2(jh,dEk@NJ^rA7i`CLHDhl*ME+^jrb`pe!OcQ0c8Ls
%Y;E$1_o\+;^#niS=#=Ni\_b!HE*Qg87O02ug_.k/eo>Z0TTGa,rP9:&5$?A#-,hP)GuPiEK]e!MV[UdF$*cW$T^!Mtb2XJ\a93UZ
%?@l:;.a]O90tfjb<tr/I7J]'bQ5L5CL#SmKU]%/a4'/h",X1t\I,W\,b52#bZ"X56'^%f)oWeOm!lh'OGp=cm$*Nj0+qEUT4-C,3
%_c$)*FRTM,+B$M?3#&KnZWdd=k/Q@RCG6Y/,?Djdg1;;E]**Ecq$Od3)$k"=!9e8MeG@UJ5[Tr\0E*89%&@i6_^MV"KMS+kF.%Or
%2H]L3n102RHJMk\0UJ1G/f"fN;[]nJH&Xj,fikq\p(--9pi3T)WppeWT)kEi-)_;V#ZW":$=-H8jCLUN*^cLhPMm9+OQ('q+=Wk\
%KX0:7bYZDTldB5F/O]NF%Ch7q197`YoLE)?:K7jM&N%QX)+VDF$2?r)nPhu:atUX\@$XN79)DLsFdFlqr0TY^9H+4"?F2&1Ui<L1
%p?RIj*d%/?S[G%i(2J@/Q&f2"SP]i5[>c(XoR&@,2oAPp8T'%Ho43)0BK+,o]@9/?EVXYFUs*5Lm`aE2k9YhaCID`B(2V,!<d7%!
%.Ft[Vn'@n!G+0@%4"&H)jF6Zr;bN)G>0OZ'o,bihB#u7=k&kj)XK^Gik@%]"Ph4/X;,PCQ.0V`?fVWciY\e;0`mWtj3Q8oVG8KM$
%Ca3=VG%$i6AJJrQ.'"*;HI?iJD(CTjEH4(_=U!et6S284BL?9<9]*Q0n:GMZgW^AWEa,j9ppUFQ]'kAd4n]PtP#i_L#,O`3AItS,
%X((N/H=M\LH]G:?K+ceE!]&.]_3u0V0K%iRQrc#TV*gD<RLkR[8<O`"!DRTN8YFlGF*%#9_OAr\OWD4Rp8#Z<&c9G?,f=kLXnR>Q
%EZC,pf/_j=m4:,%3kC+<Jo>D:M?ILNf85]mN,isD[S+GD5].e0?.(;ug.0gNCG]4.?J)8(%r::J-!M*L0:MW\K7ESIjW%ABoE/>V
%UBjKN1oZ)ab]:GgXKeFVi_?js)&j-u+)f#;*"EC^p+M+ON.rFZT\H=&G4D;7$`'Z[QiRAPZ:PAKcS5K;77k-b35W0CiLZObRq=b.
%D">8!D5Z$@773h+5o6(;)h)(tD,n)=HAs#]V?0QtaC,P]7ijZ7h.DM,/a%,3ZWS\M)e;.!p?nAuM+p#*FEN9?6jsVg[K:bEHB>-p
%(!_BFYfZ9+[P]5kDNL%9m=N<0Tt%HEOX2[j/R;5qkPE\m[75>%6(YD"qbt!/,O$J?Up!uDNJ$C]k.S\'%\nK\e`E:gOg:</rBXG7
%Eq7:^YpjUp;/(6gQ*bncs,R*doN0E)gr+s?0!(A1$DT.48hu())RcJ_OE>cT=@4jN)1oD3@N$^\a:ppU*ci+!`MPJFI-7^UXA7LY
%_l$mn8UQH-'Tn\i8"l,B[g?Lmg%KL4Df_:WZn2sbG@*B?Z0%F*"FqJ)9Cp;\'CdE^H"d]1/6')p%NO]\n@OhXeL+O6@,AW1A0Isq
%&4rlLJ25>cH%kTM!NIo^`,c=tn:8`.868N`po.'0_isfHI9/Q!Z9.]Z?W[&7hI1r7Is8V#mN4F-4Y#L8WbZ^4_[V)IK3C)4C<HJ$
%V:jeLh/FPI0+,RqS:R)(@?3p8ETS,c:[<2f,D$U01BjqeV-1[d3"O,s<?\pFC0,^p(\olq5H([YEC&ZLYl1Jl*e3r0nEZ\Whn""c
%LuPF()!*-ehAt,W=&XT@93\GB0Mk/[^KRii;B+R=.+1+*FJ-.a\K^f5KM!!OD-uToh38DUb^thhHKk/g[n,MNWHbKJq"!rpEdp`\
%F5;k?%>c+gh<p>f%>7N"/]p(K2T1"`i4L'XW<OoJ7XK6ICuE?tO]LX)g"9`HLYe&T9djB9QM8EkrR1XI'&N1?'ok:eaYqdrEdi%p
%h"rKl')DMXa\-7Co=)%ODn,'5S"6<"em9%6\fE(9@=rU/5T_:\HdBBtgWr_0DZB&Gc0Zo.`<9fsmuNV;C\1fqrDBkq/3V1&Eg5>u
%0e<t#Cb@BI-e6`0-V$b"0W/A=\"b4W]hYFP7nLon>OXXGU(2-6qYK/%8HEI<=sEC\P&sO(WgUJi-.V2Ga\hV_Jb\)sjB'ch=QP_Z
%jWAc61^h']L\GFQ$*a&KX%[r<H%4D]es_1(%u2@nRT,:BgZ]%!?GY(g.1=le:@eBLVOq`uJ_eUhBRQ\MWPBCtQ2HK+d!C'T`7V]E
%/oIT,c7)fE`"/b=Ce[h"Nt.nOQc!:A,ARND(Up$#D,7VXqY_S)!ErHNqJ]d/!2%`M5??7q4m/^jn?,A@9r-NH*SWc6Nr+i]U!(0?
%Mq>mTOMX^B#TLJcZU=[MZ\k>E2^\]47@Gk92J_\^=bLF]g;(P]17n[mLW186J.g;0UIm71V@n>]cI(nNB'@)/6W,-m5+*BBCrKVW
%C?4[I\,4N,Nb"b;VYb1#Ftm7-9(e3\54o+5T5S<]Bh]_uXb@Qe;_!:d/$pN!PB=[D3$!VRKC;:4`[sS>e#gW2ApCeOB*s=i,s8^t
%%l>>Ve`.K"l.<`K@%#c]??k%0pDt@tJ>B<dD1TX?$Z#2U^-RV"D'Ot)mE:@48C,T8alJ>U39ag'q)EEtG?VGgJ]+JS3Mmk[fd.WF
%hV7G8S-W&g,Wom%5kf1u0VpPd@P9K&aF;.Gn<1-8S8Bq!Ta@2$\W"pC^$sPojP>5lmKm;_/VgRBpDg^kWm9/@2m[=%Eu>9UR6#^V
%?;'H[9%MQR87T(=6D[+PFU99L.F\^rHV\)9%cN6`\XX@+G(RcsWVk#Yd8;_,f?$u]JQ"FKrlH[f>f&$=0\O$*%'Z"4Kl%]Z?`FJ]
%I/EcZ\Sr(?iVM-jUMQ&`:U_o;F,GDfEPI\L/a8MhZ(#Z16)XW;EB]@:Qi%qAXk^X;[d1;H>B+(te3>VZg#p[QEe6q?Wja;V+n).B
%0(3SrXA>u/.FN8$,_=.HiqCU9ng6[mlaihiCG4r.*SV=?;DrtFg\)JbD0a(^X4rDa$U*BQN?BhIAQtK>ON'_/d3*`#W'p2>@@bP6
%bIpi3-:pF17A>4P):2m5WJi-%l-(p4*NG'0%;b4UZ#D=\D&*3gO%a'F>IM(3:0qq&*!Mh`N3]pnScj/LU+PsgVau&VC:M%ZR8nnc
%D$*LqLTYmYCS-)e&7V."^6f\P%At%K2-%aQ4(Tqf5(-.&60XXZY=rkq1MqXObo).!"lchI186'J8Msp\jn)tW+d^/8;lMJWE\?04
%e4'#))OnIX[N(dt\m+>/99b$lb#+XKY*\drUVHP3082!MT4q9I3nZZ$D^2SV.22q[F2Y7@'c1,L</S<>Qk+K=lL[5(c:M6Km<MF\
%Asr0UF.K!sDXLIGc<OjK?24U^a#_Io]&Hkrr>EbPf[Hq(7]gWho##d@:(U0cbe/N-fp+kM0oj%>_>Yb\M[(LsNp:qnV>18OO?j!n
%UM7P'eB7#F&Xl@ZECid1^O#.8rq,Bu)qQ5\hnWhVY-Fg(";TMq=Ns:>K%afd=XXp77-s?&d:QG4(/\a_Wf[@J1ec!&>B22K8Vttq
%$@Nj*$+`lW$_M4cfKkJ4jY<8E,X\2Y^p?mM76'(!;ooD;=\(\(a2!o<nV$Z.@=@GUQg)th)&>SDB7g-I#FaZNB?dHobkr$;g!<fl
%[?0UKD-2'Y<?DO[<=[,Zc@Ht1>2Q]U6;A?DmVe0PFG[=W!WMEPJ4uS"s6&,R<Tc\s7(WjSn/t1T7tXE*N%<'@fkn;4U_NhaY24m\
%<e@nb`P".3J)Tp)Z7S7KH39VZaWs+fJ;4k:B64EVQjZhjq#XE",'?&-d#II%Ti)^5LK.;#:?J:<(g4[uAMkZ8gd>L^La'0NU.Mkb
%FWZ]TBk>42,BK%Vip`;,g**.q3QaMH1DjI/f=I^D9;Q#ZL9EA/0).hTc+%i1>YS!`53?fto!%JBfh7=phL6FYF)?]u0/010g7DVb
%.7=M6G_&XDkUF*2GMgDl=HY+'M,H9"C/kbu\d'jNhP=oC^A.2iD)4`Sb0(G[;Jf:O7FX>eK,V*G`tX$VT'+4s%=;hsXDG<Ub1B*V
%D.5H4^[V.SfbU1i_-JO3dVQboQk=IcBeJ_(WH&_u`JT%ZnS_2Q8#9&nc[#Bici6?(!=@S.F07Fk8VZQf=T>NkZX.F.*G[+kSdpjL
%3_e<%+u1G0naN'X5OeS(JO=nm+[2[ggC=e=s5rRRW*R4-'G>4>m$DI8oATmeU08+K0!,-T?HpZ_=]L7'A/Sff'<=Fg-T,7I\dK_d
%m0&c]0_skc!/+6FD9qL0)O4U%'tlqojd1314MBJTl(Q5T1(1V&kkF9bY9l#[94phV8;0=Nq;Ug-R@7Q+Z\B0J![HIAa\%(XfaA-M
%2OYil@u$dU:KY`097rd5>s14#H''Bmb!U74\SeOM<e%A)mXoq8V9WCp%G9SOC]KC2OD1GMh*r(J5;jk3+5"(u=!86>Dbk?*j^J6H
%,>O!FI"\cK@r!Si(3ERF.n.32=6_A\r,bCnRApGH`gL_>7?R'uk9GS.=calNQO@rRk3=D?Z?3^DTYC/4%3oL?60#B]>q'h<.E(UQ
%=aKO_e-8]QnO(0K02/&gm"D8ueDMj#%$[&X-iIG^0s-4hM2>U[eMPiOia\,<Sg+&tq=;@L^TL*nB8i#$7<L:]A[MJ'IecCoYmX?D
%]@_7;9^Ol1;&S"Gg6pZ3"TSUN[MfMH6q*c-Xa=Z#VBjQnNU:/S6nV:X+U"p8&\sGNYNde/VVnU&QO"Hq*#!_](!K\=AM?':)J(#Y
%>=!'&<7MDXZimMpm))ngIVZ\]+iY;bQrHR73JMcb53e]:?29]L_Ocbo*@/6'i@Wn$k6"<'RM>\PFZNV^Sc(lX2'3]V4iUOB6hJnY
%<3iEL#R9EJeHIKmA&Me6#;^_=YN!^77&Dh3K@(AjjMHhIE9j>i*]BMdrk;&"P%s4YIK*fY`C+CKOWn;=mHLj<I<r`>NBrN&`DUtN
%/+7H.g:NIV<K,E;mUea"1<H^g4"=U`f34lk/Ulj5UK6<O<d\b&rCQIjd$6gMA,!jM5\N/bB:!:na1_q./g]E0[o&[fkMiLn8W5Hl
%ZV.*CiYgs4oQ]r6Co`L>[Bk9]*P*:TQ<b\<F<P7(c@$OkPL='tYF1_i']iL"$oObtUHLB4;\d+>C@gZKm2a\d'T\fD_lJZRofRe5
%\EWCcK9haA3D+mC-.PnD%a!=B%dM.XBj#/T&#H8l2(?CE'e#cE:9:EkUW,LI>83.h@h6ag#>Rjrg^*.XngOu'"@IU-Fh%*sXhc'k
%AEq9#I<"SR4R(_cA)U:*O(PQ^m)fn=42%O!d)YkYNg.D*$Xs'>)Z)4je<hP8X(HB;<dm:beW#Q"\518)f27skEn_*h'q47203%88
%=?KT^eY8Ob0c/^W(J;\(DnBlR!PVGfO)u@u,,>rl0Oq!M@FT8n[:0Nmf*2nDlt),GXe7!KJVqLf-gg^.*WO/^g=?dF(-`sYEa<,X
%hf%@V6=_1tJslhOZt6)t*?L@F%u6^ZRO`FQGa'\i5/!)3YJOpaaj<?JpJhk:=Vl,VTg:,Gb'b-!8aJ'$*48Y!PN+L.LX1-QQr.-8
%rF(-R[dQB#i0pLU@=5jVk$n].5J@X@)<NEi"3eqdU4mr9Nd\UJMl?n0h(cTrg?0af?Yf"UE'^Ob-E.UCZ4P;'ojE"XE3:,=?4`#?
%Wn@%k`^WoLRI!.XWRWU6/M$4#P=@3?]2WFno4<L6[kGMdHi"s`%Bto"J,XolYYt9i\J`CC8*q2t9:'o:BMFd)1r;-Fi"Q1Ur=pl(
%"+mMR*D>DR%2>WoBbr"#Zjs1)[i0l%+A\qs`_kiTYdA!AL?9!s%SL7tTViB,Cdm%l'cW`5QORVSYICDF"F@ds6B&a#=]Ir3gd<rg
%4YA*rInn[OaYn6"fdAf0PS^Jkme)@t.4h8d5=@n>aY`-t;gEYPhY_>kP5(hF-h[1c1r!RW'XEh,7;,R0-$(94][d[O?p0"r-grW4
%r<b@fqL_#=Z'FI9#h*2HW*n:^?'7[D=>,r%/NJ?L9^AJXF)TAS>d@)AE(5Om$<AN[Q5L36<\q[XV1R@H,V>p.8mkIq&%E5e+Dk!s
%0M/%CZqKkiE17E]UJRVXgJ)+>*a2S3WUZSYcJ->K5b+,9R#<0&"I=.%;1Qo#64;`++[p,a0T?W+[kktA.7*L'R.7QY^g'-r$c9hK
%PGDarbi1.lXiQAX(Y&(5(9d]0M41tJ/6E>46p7Rl$3")/a^(S%8`Mu&OWS!UResnl5nVJ)h*'n,9tQ:p;%h;!;H>q$R)=9*ge@B"
%J!bZ]_Qf%s-QdkQd<dj=`_j%?Lhd]US=&+F[?+?@$PoBb9j)%SBJ$_oWPR6c#>,n1\'](n&E!][ip'kGWF=#:>2\Bm#C$La5.t#@
%oi>="M'#h?O*oo/IkJA.-hTj$<\E<h$8.^S3)'EY,ud*/2DniUCTcZBPINRKJp(snOWL78%Ko_?fYn4u&5@80D8h+NEl>c^0FD(1
%$`#*IH>3A7O]&Md/;L9ZG5#>9rF:`kM8\2IN]R'U?u7#@`JGfbQZ*J,IG)rCb<Eo86B=XDk%GPH5Z@,^VBEu.Os.*:)!!<#dFjK\
%?JNjp%JL9'DP@Xt]5;aRG,r6Lc9]N[gY+6%^T(.OSl8T#c(jsE!)..SUsL.dN&XV2;&LoANnC!d[7"1`kB%Pd/LMl`X'fW4;W!-$
%P/++,a5Ng9gj44')59#:_C8-CB&j"JkB%@*gq;X!]c</<BfCd$A.c.k"KjD"#PT.0os_uR9r\6grkkc'Yb*=?%H#Zs4L&SjpgV3L
%`9/,dS5dVuhUYWknDPA:5sDIp@<;bGp11du*l';%+N7DA,"=F4"Q:)]./qYN`U)9^q!0$gq3!S,X.dTN#)01#AtnH%kg=*1R4k,R
%LU'b'TpsdG'0ABd4i-m!8g`4gW#j$S=]];Q%dX0.`Hc!$\,??XR1@C\LBC1_A4^7%":6FaH)k'l>Qahp*gD;A,[:C'%?@&iIGLJ?
%DJ?TI_Ca;2!PoHcGDM'*P5O]KO;,_^,+e%APaq^Uj0pZ^aQRSW=%Ylq"I::BN(>NJB)R1q($N.QOK94<nj5K).kW-aH.-C<=lo&u
%+:9VTHqEj)2GF%E!?UV`o=W]h\.iQ%?Htq6=;IQliTh]cR6V%7l=Wpm$PSbsWX<Qk?^-[Q:F-*;C$\YfK>+__o`Vf1a3>Bu'ifr9
%LHlk^LVWC*RpJ]epd4@I:esL$=Rn)niD`f*S:eY$mCP']U_SCb]eCr9o_uB*@XPO90\8K6IBO<(X0JT9pPZ/,e8)>+7$nWITN)LO
%HfalJRtn8-$'egKB.Ch0X`n*N`WKgEB5>T;:Z[pJV/i9o-E/mu!/Y1[Y9XV*TNc^_p6H\?>nEDWel9r.e+j?A:#nCo"uqRT`8kJq
%A'@!;I3l.M_J8"E9<VbD+Kb=dERPe&5kXGVR9<U=E5QmI*Tj$t[2\J4nSPsCT)52rT/HBq3rW]:S@pd`[_d5bh;^1?/I.)m?,gY?
%:T!2910Y,Xo01J6C9)>nJgG+k7j0gb`jO8-eKls*iMVueoHO"&0)D)1kMZgZq)Qn%YJ\)8N\0U]#_sD3<$!Zhg/c5Ql:7A51.)OG
%?Jt<3,BAC^P)KB9QHhac=[u*:+.)#hW's4b;_F/5.t*n=]s"3]eeLQ5=F2mY]WUe+-(hR@([^q0$?AP#7OPL%/#j19P;RThb1,Mk
%b/Q_@[O1H;[M5^G,W_e\Hl?+](r0b;&o8;j?eJiGYtb/2?Yd,$Auj;(eh/n]bhI[UEtW+)RpZjkFAOsTh6&3/HEM&ZBVGKoQ]`fZ
%Jt07aKhB(KFAT!OHV'')Uubl\n&3(Mr2!4b\)_b5h8JSnJ?-2R#UYW*[.0_Eo,$iX#&U+.cca[uG@>W1m:MZd$`,8@a=aa*-Ej;@
%G]Q9Bi/*?ZkJWYGFt(aFWo3ZS7KWce2N`!X8`<Jh'd?_S5d^>Jbk[^LjpV,(HR5,[Ekn@HPFTnJDqFYQF(;B&1!<7^;^R(Qm*des
%@G&_3Tbprg/9r^8Wsd.jX3S"S$pBVC-/'dsbDC'HO8?6N*k1^<p[T[[%qu8a8d09J/q&sD&JjPJN!:eBhSS3E'tR].cM?,_%K+:Y
%;;fg"a@_+kLMF)bQnl(/.Q&)sh+90OqhBPHJ5VrWe'E_EDGF-A!QL(o8D_hN'r)lm=sOG]pm/\i1$1:_[pL>u&-dJCV?I/X"hh^4
%MM?5PbiY&mml#eR2`?d*?)AJG>ZZg3Of>L>Ku#M!C/EVAbm;;a9+>i!&]fH!P3NBp<'g\X7"Kdp@NXoPRpj2*PU,0XIUVfBnRBg/
%j1Q`9?U6_.pGD_5r90d.`?2JP5&[3?@9'+N>G[WSQA)]Kp:OBYQ\`^`\r`aB,*s]TTV"qt.1otG/_Ts_.tF:TUj1ae?[lI-r]BDS
%:C8tpOi*3h:[>0h:cH8/75(n>;=TbtD!>"2_>&CN+Q4T%Cec._VHf>?L$<;'lJ/EGD,(<MOo`CT6*8.5Nb&F2eMLBqAE)[t,R[n3
%$\A3:/o8=fQ%#I;8\lM(VnK&+Pu,J1OR5hq*"PHs"Tc>t2LK,=;no+prb3;T(@b:!m;#E.)&[?G-)or1c4Y+!R?bmJKdG8kp'K"I
%Jg1qJ6[es1<doOqm,pP65AJ#2Bb[*aG*Q/_-sXriHA!6D47N?RS?>8*T'@./6YfJ2U=F6O8nO8E+jN4bK-tFn]`R.<%1QX_F3Y+l
%k.*XE4&"d+AFkZF,+*k0HW_sC4L\,\.fNi(7^Y`q;=sglD0ta5g$P"r2uOAOQ"t]3c/-bOW?PNS;JbVE>^id/CRT-#AV3SJW^cL/
%_U%!7bBi;Ek2I89Ubu<BG@AckZr+jpS'P*?>q8T?/6%.F89MR*3@P84@@ln/M?Q_]d&FAp15DtD%[AV\JD">9MJMs$j37Jf0IqIN
%Q<L"Ha#6mPNbr%D\PO<RY-?0OT7r6C;+jXlm$;H$<h>(RnjZTr1alE(3gRV*,PJeJEAuI[ir+Yb[B],dEBJ*K-]S&#Hhel%X#=N,
%Y9eL_<UmXZX(#J*"Kn^LIG-U'm)fp88,4KD'thZDRe@=G'r`am,eQ'#P>s$Ga+SNkVbr4Mn^acVEr%eQOp5u.YZZd6le#scEqI&W
%Snd#Q(6`s:K,$V9-#TEgmHHDOe$3J*%P`030RE>f_jluK#go!j@I>=EPaPdcCoqu+hqILD1OnA4L248U#-T9DQGZe&<.S<QcFe#C
%6p.bd+mZ*@b=h1QS]FWbktIY"dQj18PnQtoX"uo7QXCi#pln9")NAWZ'@g_&MI?Z[j=@-2;L3=']3f6BlO&Ek2^b#RL515*Q6&-'
%&As+NQa2XrmK[g<"k,F]HR^J1+u,-lZ-T[e2<dG8&m(/:fZm:ErC1gVGg#?"WmY_RQ<cq+b*niC;,O"Xb<lVj9)HS';k!]aIpVEH
%00Eq'?K"#sSAW+[V=I`mFdj#6o#7I707*m14Vb2)OqBfL6^J>1D$GqN;\kcP-G``1R:iB8@GPhh9:82T$ZQ1>gIW^PfZL&)kb?0L
%[^BnBh^0N->up;lEpkFG&KdY?F<REu%BMaJ!r#A52LU<_NZV&'s6(:5!YJ,#i6&K1Bi(H0W=$j:a:p3a;m$`1m`@]CJOD?LHEmq/
%@=X.W#6gbS+Bk+tFu8c&ihgNi65_[ADiJV@FE_phk1SP.p_WL&BP]8kN(5<"duPqmEA,YkAnt9:(rLgHnn8Fo*@tQDKp+3c(k5uU
%))5<qGeoENCY&Qm,._G.FOq8*dc'#Y6:`1`A)/bpYQ])!3ML@8/?"i/&GT=Z:mkB!"TgI,NcS'o0fj.=QZ$dhG.(,H[b/0Kq%aQT
%7#$(NS!Kp;OY0f1V8AI,RK>9TW\XnYABId9/p$WF,>"Z"7BQ8ULUJu!C6;7BrbPRepf?</3EiQ^'M820^?up7V+1LU99de[$`qP<
%%ni-0\IW;S$)<=(MNsWn3SF,+XP9`:%.tr!55#@4_ne9[*TkeXn7gW^e*E7+^o>SAp55GfGq;qSZh;PY"Hp@N>_Y#D>p-F`>L-AE
%U^JVXs%LW^:H=!qGZV+3YJZel*1WaaAFH@*1LHTa^JNB)hIEra4/XJb]';YM_IC6bN]%ugh:#F(_S+0%ZMEl:_R`b(8Pa9]R:T%?
%mb`+-?FDB^<Y<tDhP:G;Em'<BpN;kd<J.`fiTSrf1,g4KK.*=MCFaCq`2qjL6a\KDb6aA469eiJLfd0AL/kZ3&o@M?^Z%6#W+X8X
%T.FYj?\`p*E)<0'WZ?gTH?b\&Y`s".FlB-6YGC"pV)<TVJ-:i?PZpp&mR\@IH7/.rmim4gG*<9-?)DjBfl-Rd<SF*YI!p;h\./%X
%c)'J_;Zqb/[9W/Eb\s(d2J?Q1MB?0r$6N2kf0;`SG'i7T>_CKHiSL4R7*Yk*c.?F.:9@21F[!O]/G<m>,*[l:lb,W<B.$N_!_#Sq
%F",4m5[FlOpVIa2W0o*a1rW*>*ag]gd03@gl6&c[)i(CWL>u+Kd==&oDt\6<;JD"aM4I+<CG4EL\gW#m+GNknXt?bPPXS('gcg`Q
%(Y#[nC!I\GQQe2i-19RQdM#Bi9.FaWSuM`rlB`TNMY5f*oo!2kT#1%N84KLP3<3sF/VcV':^?Q$QH]hVZ<d#TU%94Cfi[E&.4XHl
%=8&=V!>8&iK4<"]DQZRiKd(8jEP&jZn:J_g<\ON&2ojAqd[A-U\P1@FZ!aSECR9?F0O@4C.H*![H:f'XKPff_'UX;3gqC@7J@lG4
%)I"#J)dCKlpOKTQ@%.p6s%NnB+\9S[gH>702J98.r.8D,[d%d)A6NK"Uom289e)3l$FknlF$AoI-b]6D$W;<Dp]'uC#=p&p8C!=J
%^&lMOe`O03B+6$c,n2NmgTJm@:.=u)Q,\X:DP(8P5eX8i+Q6G4*O2)<ljo[:ZZOI0TH[XER,-+29L[6,e$0Z%&I%8k3$qTNS0sbF
%j*!+*ih8Z$0^<?=hb+N.9Mu0QegLd8O<dM+92K_S@ND\jM".$DO*AF.V2GCG!tG,R[U4&:$B8JpTtUmXRD:[US+Ou&PG/-lPRep?
%rd:c!ArCG-0*Ueh2?GD]1pG?&<]q)3.RfR>M$'\4/l>KUQ8nt)erD"m,ZbYqYhDQG*[1/Y%BpS$Y]JE1:XhOYji168$e_Y^KrY;\
%YW-/nob*g#3\6)WUXU5D`VQiU++<lh4EUtIZ)ttJaK?76ALi-3'J"$)Z)Hkfe,boO4n5XdWoE2GJE-2HG!IVpE-&h0VIgf#8u>d0
%l#?Sfe%T`?r8!DP86!FUoQS(Hp7&OproT^=Ieh/oIJ`1$hgGI-Dnl840E:3Z^]+2H`CPOeO-%Kp?2O<(huE]1hu:g0>"%Q@#Hn$G
%Dnl2$J,=Y!qDWp(^OQ!I[t"2O[s*Jtan<FFboa\"p&9aHmn`t-s/j5!l.+\ikMQ4"Kf=;SRlCB1s*aXRDrWmsJ%,1F"0_ZmhgYUm
%Dh%H)YJ9tPmiENU?N&\EIK01W(]VtYhu3PdDr1KF5CE(ghgY1q7t3da)n/m6PTmfU8cRE@B9]%\)<nfe5QBlTn%O)E_sc^A*]L-K
%VuNRM\N[G*c3j[brIJ>PHiEUkhf4(g:$H0&jLT9;r0(;9J'8:lS,SVTHMuYA^\r*Np'q&m?bZ@'2t)3>T)%R^:EFq.dm&<QrNG+-
%qqHW"k2!L2nDNn'@<f!A6`BQ>@Ol_r2aL8.0JI52p;=G::f=<;<X51MH%N$/#ZtlofjlRL*p5isA$-a0TaU"pf3oGH7N.`hfdPss
%>0*S<kp*u/UF*?8&#Hu7F[c`2cnQ71KQ-cKigj#1/I7Ok;Kr=]^Q,Lcc%Nn!D;-F`*@HrLREd\ZM@hg'<H#?SLMT,E%mO7`$7B-B
%b'ke7>U^XI61RCT4_s"P4fa#Kl4cdIP`rj#+C-UT`as$c._V6].uLlG/$2P#EY;>gYX>QYeLZS2;OA+OjMVhK0#9!VYd19F,'fMl
%j:oSmQsGNZbu.50Ck?r6^bR=t+Q2nm_XUVJ@_E/aHlqT*gt?Q,/>,oB`GO&pO\IrrVN8M=_)CI:'nG&il%Q#Z%VV'#T9sq'oFq'.
%0p,sMCPD@H$$J(=,ImrqNNAr)!!1nT1VG!\/Xc!t>ir168JaGlpkjdoo/cH(QciTY<LQdng/SR'f8E);q9!GN"U07YQsD+Fb]@'P
%`ABo"8:7:(&lc_ZQms!%YG3m"p#^]F[CQKfM*XA-X8"K+OXZ=qc'.\jKa2i'e]=iXPbohW,eDW*3/*jT(^2Y;?k_Bu[Tq/GZqu"]
%\=94^TF.:[R@R3=*'e00#U"[%1/BjmJ22jGIT/ObnUDQk@lc=45lbX#boK)WYn:]WXUjP@[ZR`u,b*S35IL>calCKtA5A4U/p0:b
%4d8P]5B*W**VDk*Y.kHfRPhg/T44#=6oF.'g?qNgs/#QpPk5*(DuJJ^\22=*qKUamFE9IlpXaB[[JS:-K5bs?r>[hF)TIK7#/nDk
%?@pZ'$3>`H<huO=7*P<[cjbtrT:T?kGseR"Eult>TMNh9<egiSF5^LoH&7ITTtE0A#Ho_0)5aI+]2QXT0UEst-QH8XCFY-IjLSk@
%EJ0\4=2!ER`XFX'/H&CCVJ&e%VY?D)WR,c=f.EP_KiTZ];_FhT@U&$7Pp#`KX\!ep'.:'mDR+.RXS',\-7.)-+ial"8MA@seTre?
%H0[o?R]VfLGHiZFXS,njpA^>Mo#Upl:T/^^'@h(U]A;N7S]m7"@5X=+.04ZG>p=!Q5.J0*RC_qU-oUrPKkO_gopb$BP!i4g=!cKS
%S&D6]Vf4C@F@o2h/ecWgK=*u3pN.Lc(/gs]>4kogYCI2/at^l+:pRR>%Wh0pQbViVlH)uLHhdNO@BgLAB^pau>YIcQe6A6MAt_\a
%<2!k'Q:'a6,Kk"Ja;ofmKhT/;r<,r@bG$Pu'K)AJeMfq?55VU7%o&Eb(oqTg920K0f"IXN<?B=KP)NV\aF;2?<Heb"_b8=*q\Pd\
%WYQ?@Jt0_/k^'_i@'CZ!O^nq"qF,D5A9L2;Z;T'EEcVsWb8S=NC7(VXrC=juD1-c75Bh:04no?O0mh,Kjb2<?f=W%O"IXX]+:k37
%YsS/m_W7"_9N<Yj=%Nl=ktG&q$;!jWE\F<UeS]Du8.L6$7M^kRM+On?]T:T@j%HXkPt_PW5%E5>$87!u0Gt.jFV+MYBnRi7dqcnp
%cbAk3#O*TAJg*<[RMc:rl$8M&^Od5d"W_8[VNJn-3&$%6-r")cL)Cr@X0[S75kAQ_VT=;?8>t?Io5JPZOt9N_Tr!Gpc-TJD#QHs$
%bmfL_U_rJA;,GTHWjg4!$$:6rMSq^JC>],^)+0\2&/"oo0#.aq4TMq=,TU@1%k\.9P#6:R>u$WR@$3U:Ym&j'!dAHhm+!Y[b#)K"
%KF#27RI>'Oi'?$!p%['ZrpVO<8B'`<Jj^4pd1Z)q6ZpqVD'o4>O6I7@NLI!"m'QeeO[Yu%3#%/3oBqZ:o(l0)f5M`Wg@F@p)_RgR
%--VV`1i=R_pY4u<^b!Y$5lVd*W<l-i%o-/G/JOGsn#Mj#'/U]U3rL0)KU4ob_?E,b4?:]C#raKNN^<6QLj\fn1F/<mZkBbs;])F"
%QN5TC^RM/48GKM(rQ!F_ZVQRI)Y`nPT,aIm1+,sl=)_CXc3TPZlohr<fO`PD$tI2C_cV8r)'P+;3]u]]Dj-msNHcIekMKi(eFLa.
%%b_+gWA%fBe/sEPMJ5C?:JVfK$.Sp88s.NsAWoedTIMjsTFS,6o80?X<7L89OBA5shE!a*+Es]g:1K7Sf"@.E:Q]lt8W)][CaD),
%k9nb%I>7*(ptED%QY0%g[,!tBXS)+q>S4f!oL`P;/IE.*.0AQL95];\V6Gk*oC3G%#3/R>[u.VsAhSDH"%9fcQ!!hJl>(h%2u!%f
%h\_c2f:hUbbDQBmaJ7(TqDqX2"6A[`duHdR#MI>kokINb\oa0<TA[t9(&3:a@i4T1/(I7QcD4<3'Kr8@;c$nu*1E6;?'h2b=q5k6
%RX(a&_i$B=Phd1sAU]%1HhUrI,Ap*7bX5Or:HsF#mGUP6?cAX`Z$`=*aG42%b_4fq_:Y*Q&XkTQ^+ok4+52^Q1JGjd#PAL!BcXp=
%":JD$_/;UTckW(uQ\$u?"B)eH/dt?_pS=AgV,hR,_DsrVj6L2V,S32PO?OdB#P!:bU3gU0/$?N>4n)IaP3`2r'VKn*Rt(4P_>#7o
%"abqUCO?07r?M$Xs-R&@f#dSoo=c#-r8i[Vo*nbi`5t3:\IMl&U01\`CQCW:5VEtoPpD"0"!aD<D:]MfjI#\0D8rPXPo)9Z@Y\%_
%)>Mf5:@@8'UNU9p_cB4ab_NmH!?BJaL9Mk&,WJR+ZcOVkRquQMPKgd>@-7fq%Tukh!h^#s%Wi!YYmuKd5%_ejP;Hc\jN2j*$9X*C
%o4T$Jmp@/`:(L'eX$85^RWm$O]ZiZiZi)up)-P@!;6Z4oW^soT?=lB&Ec2C<1s@WnPg)Dp9/QD,^d+HV!g0^k%Xn<BjEV%<A%RU<
%ZmhPBZ4]SE&`FrJfd8::.hX>XMkF5dpF'DQr9$;`_5(GtV#_p;$MG9Br^Rf51\.]@Uk/1T`o9oAVbHAW>rpB`rImT.O@4/&iN?%c
%0*u;SA`AoVrLI(042[#\lYsC+'NO7<*V(EJa).jX]%gp3*pR74.PNStQt5+$02[jHb#uf%^]XB9Y/&)@opRmC11'a5+'C):ge2\f
%\O,+:M'V,82L60Oe`J:m=NG40-4]:#YZ;'o3+?Ee,p86^!f"?E"mL!q)A64KjKcAFVUQ)>n'/%#ZoA$`FPE^(M'0lDQ8482DlodR
%nu>_V8ejDR'+1,$i(q8u,49KfeuF1LhiY3LlZB`H3R=t@9juD\C`-VioX6O.7=tRXA4h)0a4.McA*/lt:`BkKemaC$HXA7qR;+#n
%04"NK3-/*,oh1ALhMGteC!S[$]OZemMGgr\SZb(LnDboI24]SL,76r-(sk]!R$uogr*q,iN6n`PU`Dr`lTL=e7HC&LnW,6q5O[S*
%;2YT\BTX))'K$Bh_L/>aqdt!b$H1Xs,fO?\K)/qleYu[tZALn2*NpBi6:E>]35@TcnLD_j.Qe-J8n$VH#\`X4/iI(8V<aI#_/^KR
%^pA\'b"J.'Frju@.=$-n/J,\2LObkDLpN,E>HPo+YE\qOp>m`SR6i^C:u^m74eqe++L]J4&gTWl(oJWW7nY`n[)urY^:"D4Odke\
%oa71!?Jh:.WaM<2G;(VSR:G9k0:m=@QUS>C(9%HA'oP7"?),s4C3O:CdZE(29th^X9*BKC+_IBJRH.X7XdCn^W,+&7M+p=A@]io^
%2[Ao$fqi<F\>E4t+JUQ!h7T&e'4mY3mG4he:n[l)LGTAo+Fk_RS$!^>YUe@VgheZA8t6MrbfdFD#d^[4hmM!.*;t$T-7Mfbc8VS9
%MH.(")Q*TNes4Kj_2hgh8OJ!lSu.b/o0Fdu=<Rt>Q?m2/WE^kdBeIQsA/"'YB0?D.Dbd'LG9E.,`E.q,>I3!,T%KpYf/;eAA,87!
%dluT5<.;d-$-5TAg<*;..)0,s_%o6Y:";,NURZt="$h,F[s,t7]l&p[Ofc-fMKP\>n.C/PEF"4Ljm-TX<:fV2F#o5.B'uj,6Y/DH
%m%!lkj#q2?0AOm`@+qt60nRR(ajPBa$ZBY1.[&AkAW:!feuSONM@r9.(!j'4R+"S.AF8lQ1uZ#!Xk,\DP2hZ^?S,a@U)snYTU-^n
%lS3:D/fcMrTffVt#sOf5_"Ed["cV=h0!2up2FA$#n3*nb19'L&B-6+Ehj[u%$$F/k%;UnrW`_2QWOA!1esm3cq9qdo>N3]h89"bF
%</1.kcG+AnXZ6lA+)AE)m4R`X[QTr-e%U(TD-qJA!!g\Nb#q<>'GtK,.7oEZR,r9=6*q65=d#8l2JZ)sA,1?_rbifT$!M!ZQgiU!
%r"9RQ)3<RDUH&k;/k@KHpNS0%pXNLmFbq*j6d3#,V7L-k>\>K&d]Vsl*i@G7.Ea1jE7^pbgAl[t3K:ca0^7a!FPnM:C9OU)+oL-?
%]86(tQ>KXl95JDlkO+j]I$3bmp#AE&Qe70$C\0qo@3`.-i;,JFoGS8-OFYE<>)FC<4eBg3`$)>Yl+q9"&jZ92kYb@pN)]rU+\C00
%pF'6;d;-Du!>9"TAhn/,`RKQ1]H7C)L<PujlX9RNT>;CgUc9PG`)U(n)eLDEV`"\mPH"2?BnYY./99bgH]bAP2ID'ZA)#b.gq7M?
%Ac9atn-$0T>/.2(-uO]@r3oiJZ?FP>0b5iP+J`XpNp@hE0^g7]n\gWSbDN-Mj(P#GE!PXunXe+nFl&\5L-Gtn-snsNO%gcm/'rlu
%JXlC*.HC-N_[^!NmO%fU=0^*Kcu)fqok:h>DP,`0#+umfmL*69O1X@RO+$79F%-%W>@:0c_g<sWRq:/b;DrN=b>s=/QS!RKj$\!:
%9?bB(NU`_%5TX&tfTLK\KUsWaK7IuT^>6N#(DUYL`.h+6.@]q?qWG.6fHMh1*_)+:`H#a0NWCrV/B9ZpLme6Va=GlPNL2bf;n[q:
%1YF&![\/4:@jVYg'[=UBB7!:pMqg!NZ0.B0jA$B'eEgOgHUE2)%P4lBhICouLm4u&ZSn0oDaQFCCpK=KDBH3WAQAprEOuo;AF%Z#
%P6[K#g,k1A#0]]]\(c+2S9&b0h(:5UPQ^8UZ)uVs?Lp0eZLTY=N%Tg]@WS#aL6mi+Y>&$B&%:3hD0JT=1YBg87sqf':"L`5[[MDJ
%TKM8iSdaNbhcgJ_nAaWFOODf7pV;eB/@.M;qP`#j+"n3+>A9qS?1G#J^@6.D6_LG?)eDD&MB.HL`C4CE'r@@&e6aN0?:Cd.8ksZK
%i2Et98r&B@?^FOTS)BGLYK^U4Gi0]$f[&o[L7B@K.#";d_@-<uP02Y<pBpCGY:\&K^@?):<L:[u--Hg]^2,QkeD#d0R1ogebViGc
%ZlPD_K)I$d5bt*PeK1A#[i'D7jnPPJr)H,R3SQ&`q:)Wck$T'=N[;lIng_OiPS>i0Ui;0Fs!^'1WYCOg,g.L;FL"JR6mU0S`@CsP
%e@-dgB%\]U;o.;M]D%^1)cc]61DIdR3H>XnBKAq>ROn:V=DZ&qU=WV9MpR6U5';44E"e:cQKsgC:$4WWe=i@CLa(X`j?k"q`<CmC
%A=obLW$p4pEQ\B:h)lI,?`SQBm=!Ib>hX_dAiRq&06Hf4Mk2*$>CHJ*A:V%aY+^KS/(dp>-Cil>SQ2O^/Y6bp:7#csJ/8ZFPF>>c
%>?,;!?geZ-.aOc.,U$bom&SlQ:PCrS"fW`t,`)Pi^%>5Z/O&/@7:cNLZACeIC?UGE<+_c;5i/6-V+9\,gEifTie<&1^t-;_qKA!D
%`2IK(a6B6&JB0C/Wp#%09#F#B[.FoA[ci*;qFYC2CdK7Rg[dNc'1L2WgWR^Kh6,kjD-Z,DjHRNVY'AB/?[+4i#>4PP:$feKp(GoF
%W'cX!qkH,<&^hC%XDNWgAKq6IFf\D>m))N]IB$LKa,&CD.qoZ(27W!-C<`$&n`hE8)cQFh+hk3i>8ACsRn?f?`9h.Q67K@d8&cko
%+\WWM5LhV<T/3ag=7l/GMb>XnG=iF2^(,4j;bO&KgP_J^OMk03/$r$_-kZ2R+sDfuiQ+N.3'qau-nIq?#u\a!0<1:,2"Ka!-*0*N
%HWS*l-Xn<;bZf:uW7Z!>*o;+gZekW.-Q*cTVI#lLOE)=i#?$QIc7E09X:/<q+$i4iPX.(d;qual].r%#EcaZFq0"qYk@bF-8)Ja-
%\&NMnfm5=j[V<ac<S`^0QSrCu+n)^2-I6Q)G#[R[<SHT"D7((k;&u4C<msFN9g8<fXCFaAkOt?l\mZHA=I3G-C1eJqj)$Pme58(c
%KonrjK5>i)5mXE5Me9`H2/]lnoIgS()8?<TcI8q@dVF>('I-5nHP@-2&B=\>+;-,jM[VAG;^T>4O%@(Z]mYu=F-.fDoZ8/?$@Pet
%$SG4UE\94WEJZ*H::[Tc&lOuRLTdAG($a`#7gWF3kliuTUOr.K`58HSS;k`@29"OU*-LK8r9<=hHEX)00g"^[ceM0Bp8seQFco,Q
%g]Z&8BYis_No7UO]#c.\F-,,fpAl]o<=V-0.5g$c&M0_s-kjsPqr/Rm>_%eUGcH*kEH'*`N"OJ"R1r9(W:eW:#<`%g*e-;OD$P+$
%?3PY4K>HE;Ff^du<e,BSR4*#hV:t3JGE.=L@+E@"#c9pk4aBm-C$YlEm943/<W.@!3U^6H][]O7/J^-2o%oh8*d+R>Y#gaf_\^^d
%;cG=tMTi?r#"tZbcl7ah8V(ktQfHW[+<9T!8^DiYW$o=V6C[sF'ulkqD#E\V[+k1V7?@dieYPLs?JuD[]EXR;*X5I%RhK@q7K3an
%?\BAD)Ag%Oj1$@ti4_`\N`jE5ME`9=0SkCj(=bQ+./Ro&\_4+Y#1].L>.V#f6(2ie)7PrS[!$MMD+D>n%5EP8g@G&_\7SW:IJ[Ch
%@$?lZp84Rp>fUbiQKOKT.+#qRXp5SR5h+:As"pRaZ/9$8=pm$fX2^Ek"lV3>PWl9Ik99(np>E!DT,pl'.KsmgN<\:ek2Wmtf'M6I
%e#RtSe+@f0HFsDo&GHNje(3goZeDE^X&,l)/IpY/3XU2.7H(aUEXdWHWccCsZt-oknrERTETgQi]dnoBH"GBfl'58H^bdqo]L;_0
%*G%S/]glT"IL^%SiiljgYZ@YSM<<ZEc1;Hi]DV&Gs4E%t+5VXgU'RVFX&1#HWj2:h_+o,?a"1GXSk>>+VQ,"cflFbP7j#rC6>'QW
%7-9<MVac,?Z1)6a`JE*TI(5:7`Mnr4'j`.Gc%"tggF6'+-ZEA,_l7AVJLTP5.@+g#="4Vq],.@\6'p+8^Qdjk'-)'0Xc_lYQM+S*
%n^b4`$5SG7cdR2-!+s!0f[Lob(]NJu;a+pg:N[F;Ln5nHdipim'h1%<?'qfE<lee-[M5K>Z>)bIE'djQ>[].l\rS?):_#gL'Lg-^
%3e7Bi4JbD0q`5__@6&:eMNYKhf!7iGaG@DUH'0EnAh+blS7f>nh)JE?0sr9B%fOQ#<5=m>n.`<1""":sp/5nF@ZH8*]af)ajs'D[
%Fs+4?Q^Q"&<4)Np(>I%P?t!XePDIakM2*>nj?p,g*:1?mg^`G8R/(boQG,c%7*0gPVtFiD?nf&oT=DNBdj=#G]7,(WV-eC>/V45P
%I':dD1lj)*NfH3-YkaVrdTFi=dMrL6X\';C#V2MufO4>F>6Wl.Ce@9s?JR/U(=>%2UZ2oYVq<O3XF@bqZ0XTYF_Rr@p-ZDD$A"mf
%'L(u[AOh2lT0X7p,qThP8MO5ro0M_D&/7RWUp`p8%;H4&erWr$Ul80kYGbLsM@H:")4>VLp1,3OE9hC.*,8(_^hp.<[(==hI63C-
%3R!,O6s_A3S+drq;Q"s-r#JX"OTa&NmA01hc<@h94&q&K-_'*kZK5]\+ngfjr*)%0'Sk&#,CNY<P=S8<?BMs+/St*Yid.FU)c?dT
%g*<C^G)+TSF64I8n<L"1<'tEP6NnNFfp:2OFWY/^k-/!gYq?V+kL+XH;A./%':23u2r4j`WS.3L;T*f#k+k;?JgA-tC(r+35&%[M
%c2?h^r5g5^/=5?U99;KDF'9f%4PQELqaBeU4\T%^1QJ+DG1d)HCRQ-#cR^Jd!p["\m0":l!4Pre$JupD%`q8I[]Gb$mmag2\#=kW
%!$ueMOe_=#ri#UlY:/mCl>dHn;5&QaLTKNB.2KRRlP5+L8P9DZF-O,6'PcK'&agT<#^(i2h,(PDBRDeGd(7%Le*A`M!8oa<g.)tf
%4pa%(G2II!':)#j<c=)"M<Q;?Y-i$AX-Mrp%P!]+=qD7>SqMtu$9\.>a$Z1G--EN*n/c+Xg'\0a`ergDp4abkVZk)BT]`P%UZj;]
%B3&0uku^A!M\SWa+>.kn'Ts,-i(OrD19Y=jE@\@\PEs(FY4uQ0ZO>3?>#H(<;,h#?'piX.AJM8Dgj^<*MP-lG(<-N+jo,pj9?E&7
%ja+CWc!gb\CI.H]$a]RG7GE6+=(s4OBoke!ppD.fShHrfW`C/fYe3Y]6=Xc@hX6AUi[Is424mTTW7#hA,f/6U?^n$SQMN(f+MJU6
%mkgYl1/iP&'VZX8H\g]l%iUGf,(Yf#3ogA!?-&Nc=oU0#T24:8_0R;>:la=:qL?\$)1e0.MZN,d?\qju</X0\At!3]0f;W8=X>aE
%Z@+WX)P*$%8FHkK+LL3mDg$dO4BEpg%31!Ql->qFHN$Y]:Fl'dYlX&_#it>)aZq?KnYFcL^GETQA4.:\_7fU>d0"j5r:#M<?s8=I
%U\kh#o`\Pk7E4;a&?X,#cTdD&rL^h(j#:nkqt6S>BDqZ_;QPB+Wune:!>@h1Hh]#ulTab=dSG=iQe9i<g2C4<q;(:*IcV0@q?O_6
%:Of,UC"5H;40B*/Xo)&bp6T5fs84\Y#mJm1k_&BT/]a,@1TN'"1aG)N;`oVEXQBl#N_1**k%*HQ8>;H]J7!QhH\&D.BsT5Rc^Z,g
%h[Md1Ug?RoLg):\l#akUm-RZ5F*gP]dA&TR(ud,?P4lUjn3qA[:lfJD%$8#]?l&R+ChoCh`/8j2-X_YDQ%E!Ji^eD<138g5*Ih'/
%,`0MG5U>)>dDt*d\#5Vl<-I3fVdA`?ePG:7,ncA/FHE4(IVFNmb'-3J:f,1GBq]?S)OX^=(_gk"b*ZMi--@^I!eO$qomVJq'Qm5C
%n:Qg<q&esg1N:k'0Ni(dBu?cN0;qV7k-IPs0IbPIl619Q]/[CrrP;0><F'2T'XY4c:<X*Zpu[!W;FM,X95*:3=9N"tfA=iQ,%lZ2
%$9:oS[:t?W,4)%_Z:>A<D,i'ceA*rj&0Og5Fb'(&;d]^L\W=pf;in[p/t5%-'FLD)MSm([E/ccr^gN>!&6L&PL%=\'hbJFt`Aoga
%$)m@W0?Q6W97;[?jS;=F88%$H7S,hRcI/@!8Lf@qTI'=S9?.Pq*>omSl!mU'^tk8LI"INj]+pgAAQ_?*NcEFO'\*'.B+;gsp4seS
%9#%`Lr(AR[k'$@%O^cl17reB58AEZ,5Ef[=K/Tt[Jp_Y6!TGQ*nKm+dDt6b,_PqH.PJT7Q;%i]fI&14HnHkRDWpL15=UKaD/MKqt
%18^75rVQ-[dG5F;W/<"7XA2R@AMDK;5fW])'5Z>P`q5K\X=b0;PTIt=]6S47l4Z"e;q#_DX@P:a8n`Gsl$=Xqf^D1<qZ#;3\!F_5
%.m)WIoRG5I+W)KUq/G"a3tMrp6]qgaKo/bf#0Cc*N^NdBXCobfp:K3LWCm$J:TA:M(J%L%h1p-CCX+ZT&@l4*>G<h'DMh>i;3485
%^bVrN0U(.l/TMEl_"lh$cU]*+,CHb>YXn]HcMp^^8HFYe+@fWu0S]L01rfkSpuJ5h"=&jG#'2<7h*`t4q(:I9F<_'D$a.WqhhN9n
%Mh!`Um9^h#,^,HuDMH`Yoo)<Gi7Z[*[DoU&XT*hA=K<qg/HcUO42dd;68RV\31['DZ42T5IY8at)7_%],Lt5&Ynf&O@hoE]YK%p2
%oCI-9=V,'^Un#Z>A^tdsMOoZ$Ct@<6!\L,idYo1\$;8kM++<4rF;AhKrj@<i)0D\o#oJ:IUi-X]:G3^+8ZOEJHjdp0Rc(,:oa>IQ
%U)gHo6lUgc$"a8H74$iNE\qqiRs;;Vr8*bLkLC;+8$HR"P,n+a6_j6=%t6+R`Y6EiPKLb`d#`4=jom\+qe-n_"2k^6E3@3-.E,!>
%ehYSsl$/'O4=?!aLdB>mXh0aU5I/^6j5!scEK"A0g(=rC#nV]H$'QL&_keacdFi`)?M$l'V'hBaHEKp='[fD09I>HqBPDMZQu=_L
%E`,<NK>tB&AdNWXjBN=Q"/kT.n-'R2I5;993?,T;^d!Qoji"(OSm16k><TNV4rn!6UnG[j"JWsds2YKPM.eTFjTh%Ci?]qZ/Um?b
%DsKCC"kPoT"HdfEbc3d,ncW63,`=E3ZsdpS6nUq9c\3k0e<IrQ6t&f5s#M7?R_B1C.r!<qZhbA9$'mk'p5qNURqoE/D8iEUc*p"r
%^e??/OUi+s2B?3p+.56J?e"]nEKr+dmAFoY;)lR-7?lG(<&u18JO(<0"p!iB_`.EqgA0d'<U^HU7KFs=*k`nY4[9p'=<!\*":DE5
%,S`jHF]pS$CF]oG8iFtf@"OX!#9(,-=s\<[eeP<0<LG3\\V?oQp3#@.->t5A!]:H9$kcYjXsD(K<#l]4(IeX,N*[,I#UK;[T6MTl
%h2ck1<QpUd`b0Yf`BQP?2tV02hUQ:C*:$<fp8`Y@^u$CoL.@\bB>+-l_35d[^-J/lhY#B#GQRuABdBD9A/-@&k$B50JCdVQ@muG"
%i`W<3!`FbV^O)YaOo=sW5sB0cTn@&D.80bg>2S.-\6HRq.5gXi=/g*u3%n#A-\9:$,jL=`odamZ-Rh9B_&%_J[CjeC]&oWh&re)M
%kuIdI<c'!ehJ>o"J>.Z(!>;!)'R0tG3M\Dp1^ObMj*1:n::6-P`q77[.M%:7=TpYlT@f'D!MQM;VD[k*J?:WaR)i9s\CPL$80^iO
%(DZ^a<e)aIl4gc4hg=19p??/rd)5'IOD^&p`:AMqTr?t4VC*0lJ=N46Sg*>d'fJO*mJ+t@lli,@"ia8hILtY6!*.AC0lje=er^0,
%7B3<;,Fa9dL!J/o!aW+mJE3UV_CDLqC;i2s".(?U.ic?_`aj#<9a,.H+!3]0k;M\Rj8>icc.C9c8LYfW:fXp4=W(7U[Z_:r9q%T>
%?s<^2C:lPA:Wqo,Gin),g]^qc_gR?d7[^ns2[cAWWDkK<a7@+!+ts:Ep;QWUA'=j.Y[:GF$SB&hH9j&ai,Y]g\8Vdd(bY\XonJ]E
%\77en,DgG8^D2GjZ/;uDrMmDg^J8**e>V)VUldQ*+V'=;<\5eQbg_H0S$onGdcUdYK![Fb]fN8*q7Wt'aa1t/R(AQU<G:DpP)9;q
%DTZYi]XGd:LlfC%Ct]>i2/C"6A8OBu@7o'E;4Or='A0ltRC/&%cdTiJYnf/J'kHb_T>MpZ-*6cC^mX$J#JRXmCLN:B#Wpf\Zd.?S
%a;Vr-VQiY]KWc"e=2?AYQWcQ'Ff"c\%+Tir;nHeF]1.52:5&pBoc6akE1`X;7?&[qR^"3SYZ_6ehUP[d=D46O+\sU$QSfo?,L]Ul
%-m&aeV/DX%PA)bT3tO!%IOeEgiI-7*DW>H=(/L6P7<8j9=IH0$?WY4cX^k10-op3c3d+F<p+5pYg5WOt5`?[_QAr9YfW,RE.fOEF
%3qFZJ,!(U\@3d$s7,-VFD0=a7cWk^tP.'=d!Pab^Ti))_:KChK>-_#jemtipIUQ'8j2j]&D\q)sX`95"jDm=kSk[G%a)g)/qYD5g
%C)%M"HJ?kor#G'jXm3qocDJe>>cbt]?Z((8gg/YsDr1QCc!!86K(d=I3uXT>#i:oUMn$8o[jbWBl9[r07GPXm1cKBo_19t\aQU90
%CCG&MW,#@:PZ@LFc"+3P'$)gVHTTMd#\6M3<S*)MML<6n97RZ+A0kd%M7kMS[628Kfe(0_XuFoojZ:e:XETTB3QL8D]r%JpMl?M_
%<AFZJfDKg'PQ3,Gr>IT3)Ba39>uV9?@KVVM3;Xni3DmNgDUJclr63+k%>;8qOejOP0a&l8GVW_7@P3q&XE'J_po_,bD:<SB'.=G>
%[1(H&8XI=hCWu9PL5"2IKKb8,D,XFPVq9]-,Gh1mZ1s$$M?+1!mf%(kanaCVB5);cV6)5tJ@dP*V'Ze`5l=HBR0m,?r`I]3A'CrX
%KiV>@V!(K:Pb^`jf=UG09LejI8%)rGG4OZ)7-(B!,r":"59(<OrKd?LQ&/p-CZ.>@2,9-[dlG`93*:FZXr1cBG]1SIjS:\\X^X>Q
%@KD5-;0E/ESg8Vk)1S`1g*]eXOR0hFUR*Wk'-^"qY'DbaW%KpJQ<0!RCodbWf^DdgVY18pU6(gYFj4G>n\iOSQ#Bb0<$doh8CG"R
%d]j_>W8:HiqaO25>]j#@=B(f>P2)ka"j+fR]q]=]rB@;soPK;i&RW+e;\Q=)^f;l@!n5a_V"4@7L,G\>l5"2i3jnj-pO!F#psmmV
%51;O@YWA&u]bX.)XB>8fEm,Cu=_otl0YSrH.JR"FKAod0>+<_nqpG6c)`=VcGLb8P>@IkV^b>@>S"N\a4N.b,n^Z]C"V$V0iM?=C
%g03"#'L(k@JIFti[0+NciXr20$Sp9;Y$aa\Ukm0sVoYs5S/3ab\gSTebeJFg:saa9$Ju[S.;8[EJ@!:9cpEZ,gFA"QnZGSN(a`)o
%\@8XOFN6;@U/J7KQns9r_q5a92,0!+2"TZ`fBR<RKpg+3eu6iqU:?H04T,%JS@\XH%\_g^B&/[(MCUAI)h_ct%4,.f@\a_tQ0>W@
%`d-N-/_Z]F+4e.Y`s;UVC6$UoOe`1c@-lV_ODHkqL'/-TDCQIG1uJb]A2"kgQ?IO5J<""B*%971?.buF9s_gS)!1jr>Ch]pXg!PH
%kp:\7(K!ock*44G9n(nI?blfL]F#6'>mb/%*Ingn$ZQHS`Nl(E%%1;LP[.,*H%jn]Z]T%jlNgftVc`#'@Qfj=FJAo%YW4"6/uDM$
%AKolT0'C&Y+`O,Yls6D9q;@f.4aZ`+q5R+W\>Zku#CUt@14dk_;M)8G"4Xu)OR'aROjMn$)HaZ5XHJ+*;UVA:82Gn@hisY+M&E,6
%O2>D8i<N/.lIS6DFNQnLWUq-Z&Knu+M?0(NDZma4PW;_=B;KI8XU>CRL511EW5d_3W"5^gWDT^3EF2'Mb-#1;l/;)LM*EIl-KZ$N
%UY`c-#@jfF"\MSLlcqL\'e]8Oe`_l%&bM/W6T`4U'TQ,==KH*t$(VGXLV.>!D&ZL%TPL;>^."iL(J-$1p,$J[jm*)N:]_g6C(]!_
%;Q.S9Gk^]m^3D`3X6)T\P?_r0=]Dlq^QKQqO^7.-ZH`OEbLm#\=aY5g-,ne0*d;%#B$(*Mh[YmV",EQ;PLHeQ0%MS';+/:&b2$pW
%@*Y$A3.<A'7X&HV3[$1l:*rM7M,^$pM[pM\$`?i$gT;=C^5eOg`X)+`^`:Y-Af#U$>ckncf.\;"?Vs`(1%&-*"&T5`VJ<OiW(F,?
%@%s"FW3rSVm_PulibCWE3#i3oiBO0E3Z+KlaFUAO>/4q'g7;H(V>b!s(=+u=&8!8a+G[GYpeBZT_)%p\6u\1(T[N1KrO^N[$05gI
%,@KZeYWW.0dsQ/@&D9>ok.X,FfWB^5OltWT[JeSnV]qujATXmlE*acNSX(PRegUA3br%!M&Qet$JRV:+[I]Y;El=B@aBWd<7o-36
%cGsbF*Hr.<Km+'"rabrYa2JC_Oe=,o+ZY_[Ah?looX839)X`uE822fTpJH2Gn>Df1aY6F0#/Md+DBGss$"H\=e0iErm>SbC]tppa
%$'/bs:<^Q7!61;%"7u"=:4p/9qY?V&1qnFGaLesFL+M#R\]B_'O#])9:]-<gI%dM)C:8?+YCI-S0gXpA$FLJK%0`)-1o<\cJ53.<
%7)K'OUk!dJ``@u[G\9jO!ram3+>\R.GuV&NNnr.',p6um2pK*\NdbcTm^d%k6/k*"FEA`jc7F:`FLEOdj9W1>5]JO-Eo<[[!ri"2
%$UJBEf$H(mPeM.qMCI)=5g(?b+VjG8PH;)jQQ!jb+`k/L%AB-HiLS9XHfO'L,KAM)+!El8OH4+_mYQ.Gj9Q7,.I6cr-8@<mKl-oA
%RC^f7Fa#>n%ZANNS`6fVs&H,s+]^!`3JG^L%W/7B2@e?6HR)[bM#@&[2`Q8S@V]`Fm#bOAlf(n\E8m/WIq:Zbe'f2-DG"`O#]YfZ
%6Yq$")UK)i[s5=_PT/)5gBkG2a?>-B/BpY]->1raL3=3>/>4t445RK4eI&'BM3BbQaFn#[;Yl$t7bhmK6FXI/7QRB&'h:X=Qjg:"
%hZ2jb^B)U6nr?eLV/-r;G'Qb!'gnBm0HM^FVJh+TK=(6UPZ-qXdUlck)Gd;DW3%@I3+!+Mp!QBHqn%@e<FJ-hI:A.j[99>H'(JJ@
%JLtK7.A^mTYG8Y?'al#KrRs?R$UHE$:mp_2c?@Zn:L7Qqr>_SrSP`<t&HZ-%7M6t5%aQt?pF&lW1Gl/%$.:)>3_6g#;DU&aS[EjH
%$XQL1X0L`!dWP=dnFHf$f?V@-.(h!$4`p4j.([N)'P0SA(4p+o-=VsH2hbWb``BGiC/AUi9Ik%mq5t6#H9C5]oAfaZenqgn8.D[V
%5m;sn;Ye5QWP*C.k`FUiYThf.WFh$j/qc)3Zd611i1jbESu>>.#6C9.:[E2\X\]2?%Jf1T-pT]j>ert!AlXPFVul_LidNEgM$Q(p
%,N/MC6YG5l/WQo+'ZD=@!]\#NA;lgV4a]M(E;bC6%8pumFj^(J8P0:fEP5S9Jhi*a#7OCOU$-nA.jR?)^lT`nVW'.&;*7*(m9%Ka
%R3JOid?J"lrP!oui,$]6D;m(5RZ`78S4`CC:8CfS+Vj'qjdgP!bA.k.BjBkX/H)5Q/ZP]]7k.uf0NOIW@97N0lat^I'T'ur\VR)A
%FUY0WW2]$V+?PHnE4Tr0piB7NAGe6*<`57Fd#>U_aD;^i`;<-],B*jss0`G5kiXL&pm;qiTu,!m6p&Z4;BI2`=h[uo_M+.Sm99/5
%r1qac9Y1Z%&6hk/QQUl\X;OSL9PXsuhTRk"66ab.Eui8h9u,0@P63@I4<cYb\J13hRE!`%I&<r2p-KI*Su*f07IrBX8rf@f]H5$R
%=^mNMh4%d[fa(eO&kmr*`oB+.kfDpRm4sME<$m51'JY&K5H]2GLa(g<k,(J9$W.r-Dl+9u=98M=CR]=sIg^[j5Ck(:L-DJ!FEnUL
%s0ChOABWD?e;H;71OtGWH@5"Jah+6(du\#/XmNi+06.WIYQd.:gsOYrA)[kK,.N*MA6(>b>UOJa??\51k8OmjS.(oDZn/+eCC#<q
%8g.q,>i0NCqd$O/^i/lV-eC5\:R;)C8Hoob*F3KuKL>kU#ParXj*tG0UKIH*i$ER"l:0i=Jq[*&B3i_e+aL"m,itK&Hgt*!q*"k1
%&4^9Nl5O(`(-RU+?dZC,pl=oI3.`V*c@s_^KSY,UOutM#aUj)XbJkuSTsk&cVg)"7b&t8D%nq?k>>B@qnci1@IK064$eDe$'3?G`
%Q+=mZ=gCXDD5r/C.O_l>A+(c*RZs,X.Zn.f9#Ru9`,kA>L\K6*@0@(^]X^AAicJTeYR3<_Or^,0WD->:Y[?(n[B"b`c,rT;m36EP
%9;/mXN>#^,%2!1]X\(Q3E#](U>,q7MW%89:aQOEZZfJJKHE9J]MaRsm\;hc08L('eQ.cji75`A*!g;s\[R""^L"#>b#o6"D%#bul
%2GY(PC5`BEh3$NF;d#H-EultUFOJJ\cI]j;\+n+S:0T"!Et_h6$^8N,:H$RO2>C<>C`B-R8\'+oNbD@FdnZ3&**aZ-UFuh7mfX.B
%2=!Q^(uSE<N.-#.`e+',XBBub"l*Y5YRChFb='CV!_)DZIbG5NK@PBLN_&@tR)ogk8luT#XV_&Lpt2uA81//%l<7=)l%!d(L9d?&
%[HBo6j2HhdNUC!@=lWagbP7#3rKh9)I/e%/2<J*E$P8e<nsF\]F:_Wt?#'GUO_K_`ZL\>eJ*L\jI<'geRYIM^&WNj$:H[$\2P`Q8
%p0e0T&W=+%A7Z*9l@\;B4Rj;YZe+26>=&=K25q[c_ukR)iiurjr74VWXLYOb*'NaD@l\o]>8:Lu^7ITG(mner\'J>95&2gW!fmoJ
%#O42f7E6>;`J1(>ZEHTG9I-c`bB)0F_iN@!<%_;G.&_B#7ak\`RR!1[UhHOGE+/Xk:SV.pW2,XQMD-*MkR1lG(kJZCBL+!'<1'KQ
%?p>))FbTuVMgJ\MC9`!A5j/S8jUr`N0P]D$]2^%]YFi8*?;[d!kZCb?LR_BN6PkL(k&jU.2s<'lkM@XD_`CqEVVP_9MCC&'M(,[X
%?qTSDF-J"8UCL924PPTlUG;c`EILWk7\sA?[:=!.E7E5U31?=/[/:hC94l7TLOt4c[A<*%H(kKS;tIn&6rQLI=B4"#ggdIcS7:?B
%[9%E#&s9#hc*BnI:!*(9*#,Xj=:cueT=qY)7U$`I?H'BV$X]DCl`*ZDHVbRCfT7WoQ.M^4nN0"ROfdKnX]C1Vj:M.30ca&fZ&5N(
%QSGWUbFN7i),Q_:-KRi2E@Oq8$^71,;FY]6Ai+2"XE]#j;''%f]c+pB;\#!`Z!ES1f3N2\(pc%0Rt;2t!eG(NCOrNV+V\)V%_WoY
%,/W;2*>9!2V`:[O\#(^\FL>CVFhK#;_.Q%AVccYF?3T-f+Z!uT/CW[%/5t@alY`dV19MpP-r!R=+H%57M0942/PR`hFZTH'"6NS5
%bZ+P"T]&0u".uIWNa_@V2aH]SAIl0*HBFPGN0(>]_[,V3^)n#\58eGB<Dic-gP/lH>Jdf`;c%$--CpC+fO9<6#"&@DUAPeTkL?rQ
%iFI4dAi0Lm.Thc5fsj8aJPWP#)FaI1*M?osH%RtA[4QJ^[?1Sh0NaRs6qNXZd=Daen`IRh(QsPX"48JI4ZK533[5A8Z=p'^<`.*4
%=#MBC4p1TY3iXT<OL"Hi(hk$Z?L#P58Ab#VU(KV\h0e.mnR^N=Q,oNsjag/@4#U-1+?i:a%\gFikUuY4SHL(FA"T%.\C[e)0<",D
%[a8'NEWjQ!b*phYa@-PfFL(ZLh2AM.`drZ(7utFXd8AsMS]AQ+HMq<a*^cQLI3].`'au329anqU#ZE$f=:9I$-6l:''I4;e8kDVO
%:26<Y2j-eu&du*GDe&I5;;$)91M^LbUTpPa465mAR9I$e"nK@U(*S34.S7XkG*+5BN*N\rW+643m3G;\^gAAo*R>*kN8q*NHpi?Q
%;I1"AWLoX;6*#D4Q;?2drKYUUEr=dq;*Okc:!hJ0jqi3hWgN;S0iSL!BI:@tZ*Gcb=:ji94[C,f=[aVfP0UYf/1(2e_Vnje]a/+C
%,1T77kP-S6>_P?MYMM[K5B%3lC\VIeQ5'I:(!_E<Q"hHrAQF3/]-<h\=,!me/"muIX``ff>^LP$Vja7j(C;7>WFi?*c6=1U;mRdZ
%i%)&,O;*qP53$,XZd;lnRed%cSTlgu<MlU/8bdA%ht>9mO+;#5++>oHk%a'1ngJU93`2a8pm%]^dTWXP@XrG'QTTg2"CiNdVPj1>
%p">bkc3-t*aTrZ(0f/[4o%D2U@_>s8&9"kE`Rt[^Hhom$<fjQFYIZioE=/90`VGe-mHsQOCpRNg^i74QGF12!FZM$YSoePMGLC5P
%Z0i-IG@S'W4[3SgaJ1Zl&@h)iAH\k?[_GL+TTN@?5BZA$NW@?[oQ\,=8)U$=f3eOTmf3:ZQ43_u#ml->=JPZ[V^Co<+)mAV+Bam!
%09R"DLsJ&*o)Hn*IsD"L]8r-ipk\*d:MkZD&f180NsMBKU\Lg\&O*qNd\jb9Y?"lc8NTI2#.TS$H#;i"h#naRjL$BS1ejT])K4fW
%Ysf[p0Hl,$;72Y"Nma:=3nHA;FbFEob6N+S*)^YmKS[K!@"*0Kc\\55MH(8)4<5EOY`e41W8L*!,c]SS$_.Jo)3&c8X])4-+"<p5
%]MKC\&c3/6,BbB[1lB6qj&FrXfdL+1>jFFQ/C3047)bJKF]3h"Z'NX<gAtAE#poIdK%IEU&s!t&K=L!/lq"I:B>Bum.OsjD"Y;B+
%CLr=_0p5F:bGe"bfu,<D#U(EtL-r``K4:[iRlpA_r8qf*p=K9'S%i;.kR$#.g;YLO$9u:r%N'a1^=k6n:64$(VT\RE,Fqk5s'aO?
%Rk2lE=e99`3j%s^/MnZlim^RGalFMagQ;upo&Fg6X@fLk9k"r@*IXEk=RCH?R>ZU#iRV7&AnpYjl/).fo#B4smFZW0npg9emr-G(
%p]e@rnOSNZ#h<7p[+jI&m>`ha/j4^*^?(!.H[GA/!0u4.cF9kTiR7DJh=an:IX0=hl1ou*/K]B;dnX*N]\SjFpq(b=rqN[H\R!&o
%X_5\>+'?dJC\A6d?3qZ[q(I6qrc`kghrj=bBuN7gHb<ZlD&JZV]\+t_*s418UZ\9D`1MFps7Y(5Ie`7)*Pm5/L\u6%rVe$R^Amj$
%>ip=n"FYt',B[s_c*.'fBr3hUH+CF?(NXP,DZB7O?U(aoo?I5Z?M>gFh#47<T0@jUF+Ctb5[Vq?6H.7Tkh,u/6Zf*3r`ktX1f^oX
%\t"sWF1TDWRIjR>2;O]m20W79:\VSQOUjN=O'^uINS2"1of:&;[o[YDdME.%^"r5?a/.r0fsc@uEGod0ftEZO>ImmWp%4.EFS2C*
%ddm_2><_iUkAc"nY@t[s(T;e(JNe\oKIUET-KB@@J4O@W1I8bKAIba\T&Z0hJ,:#[q,P$k"3m6;b>5*<J+J-'Gs>ZcqoKOEM!+<h
%r8\(GbZ:?oJ"k(KZ'_&PREH&B>T>2/[Te6;_OVQ^I&d'FporNEi'#q(>MVZgrHR+@ABo+?G'T,:4Zo=b#Af1YrgVbNJ*Gq[>]/^W
%bk\dcBBT2EDEWK(hsS>T5*)VJ(U*PWdJ8"FkWiX@W6^>I#E]=id_S90!]BsI9!n%\B[8illC"iC??H:CEWHV[S.TD?fK2]NZ!*)c
%,7Zm==9ZR:AZ,HqWgL]$=DAOQnMjmE8VB\VmrHU8D*M=&eJC$C?.<GVD@%\H-nA%g5AYZBnY2@C:EO]6o"he"D14sT@SOT[(i,WE
%naWG71\=\E*q\cjVY9\Df;DE7VV,_Q+,>,k"k3)G.#&E@AO$9jY\I!gP'YEB[(QjK/#mKS8HI;@4@,1>#fmJgnS6LDbQ,WeF1/t+
%96#G&;@\TI=``4PCD%7>q>+!.`klLumW^IWVsMM6R'[<OIG@[f/"e7b1Y,:snaVp3$SUCX\_m?u57sh0JDra6>b=2c^]'YtU$qt=
%;'.RK;-OUNDmu6"d(g3N-0WL=Y'!5Kg1KVe4]'a>dhVjdTuhB?CR2K1nXAjl62$L&MW@Wf]@^Sg;H,O]`EpDQS''St0h^dk(\g1,
%IUT]"2\oT(X_ACX,@rQ-Yp(De`$R*/WR_8LjVE*/UJ56KY-kbWWYXMd=j/NuX-O7[+#QG1@%)lV(Hf*]?]8h_rL;#:ngQ$gRDZ0I
%E/hNS7PN]CVE0<q<%C@H[u1FRZ;bhM`%n+&'&7)Lf<(kr^aX(Cg./:.5]jbW<2S^<b>t^?_4%3l]B%5FMIlJ9-,XDrDJdugqB\_%
%)N5G@,o@RaCm[,5>@AQq_Hi,3:K,:O0POU7U[mkCX9BV',$'d:e<XI</3*K0rb#&"]L%oY`sp/res5PV7Nt.XJO!%Q2lq1l(dQ/N
%qpqrJ1oE$'S6uO"O<=-<`&XU:jV9acH]VpsAYTT'Y>dO8`+[^qNTN87;39UVV)XCSdMFacE>NmsU9N^\,8a$1`\.C9qXpZH*Ku;,
%B!tc-O`+c[-1/DB21".bg5X!;n!'g;_Pg(;5*Mk+Z8V!l.dg/T9G%W7_>Yq9UQm*!-IL6CAe7LAPRr^+s5HJQ=*i6<ms^#OAh=;S
%gV0s[I5OGh)M43pjKd`f_20]RZY[Sb%(;8R-5g[R7NRTiBN-]?.4Kcq+=K*PXIs@1"(*&5n7>g0<R$h]iA[u5=@bok)3tSlnsZYl
%B.qAC@e5\`9IH!d3N1B%5_@Ij4XVKo/[,W[l^/ru?Er"+4F8E@SKWSR'Z0[7Tn4k2;CY?`<B;_>q`?i]V9IJi>S&9!h(S/,[r;<V
%C=f;"VTnWUCR-gGOD\CLG%IVOgigV1T06ucnTk4.m7+Q&]d@jq6'GBnlb0`0[QKOZ&;Ip4nt^(1JG%G`<q`SZVbp0kfpd>1LaPe7
%,/G6&d<3nT>\58C<'F8\)ll/VV52cRf)%rrWKmut*601qdR#fQ'1,:*Z:YjSW:X_9Kp>ogFBc&V2m'A_1)OfFY5scF=TYpp^gf"H
%R)p\3F\Fr5ojIk;9+s5nfbDZ[W2`H6N.p;b>>foRXedPb/R#gprgbuh&2.9'M7Mb!*t5+4Xl!%c(p_:;^_CM;X%p7lcS)ha<_?lM
%h&]bA^PGP]H4S7M%):L`dH-M5cLi5nb>u736OQL*l+DdDE:@`Q7?C)gL8QVf5p6PqlRe>IC0khO@[)_Y)^ohr=5,+.>V%Slm?=:/
%0\YpffdVBZM7'h="ttS:[B&\YRaBdOeb2RqVgc+'Fqs)YWst<aE<TH?)^n*P;L,q35cK*/eb<VWXl;t$B:_'/#CZNd%5bsdOjdCP
%Na>GE/)K]dWpH!lF'5pZhK-qCb<'HElGT`_!%!`;DsCQHZAE#R]X@5C2Ro5^Lub=U+)J]tbn;$Uq(^UTC,&qfMXb9dCa^k&c.b-L
%C,5?n=*lEMcDAM7m2)(%$/M+qC?/`$??t8P&\*X@><dD^HL2tSVHYopMlR3Mb=>N+k`t&1bg"qhMi1J4N&n,Rii^n)GmD<:jn3M7
%:h-gL=,V-cgg7Ws`7[g06Zg#sBCQPOX.;Q8P'jZgA/C4c[MnNtYX_>GnCX&`\67O1V[Z=7Y.a1MY%W's'Tg=K976.(ClnAMZ%;>f
%gIQD2HS$cTrH:i*&q.:E]SG^mYP7jmT\%j;J8RYCRI*#Ip>ri>]uXLW%&eYB3I<(,gi_[B3A;FYEfSc-FP!9`+&Y,ZoCD/:pXUT@
%\.:tWQg;63$d9E%MUpcJ[,E?RaZZOec+cFl;/9^<ZpgK0)Eq;uY6=@ZhQFPn_7!N`O+O-C5\;mHkCDeD(,<icb,/j;!o4s*Tjj3>
%Y8+4CGK#'k6'O^]Wj.K)?-l_rAorBsD[;m>-(QpO]LKE.L(/bRK2$%JRiJ<+*$EXW&.>Us?Iu?<.l<5omD8P3qsp;P@">d8VbUq5
%ltEcgKRDNXjr3>e79&+lBGK-pJL[M;/"B(-5r"lD%<8Bq!X;q7[s5HN-kkK!a*OEM$ZnQcB,A[*o2COBVT0CK8%3PW<-FO.7FZZ\
%"q\sAcVWS*ZFLGS=p6u`F[QcX.<XVU.6rG6<AD%o#N,P;>Q;$Lgb$9tD2NE&C,Z#6-3Y!V-2!9*`g!MTjWXdB"ZVAj@;Gand93aT
%Oa-5=I3B?E;o\pE:`:miJ7[foQXs^DipaLEDHI(*f0`MO!luo1=Q3Z;A+:BLZ,g\"+DJt8,uj'^C8nAkpl]*sjTm!n_)tIRUdk]^
%#Foq[(en[O)$AZ8`a9NZa!k>E(KjELT$YQeC01UYEcmQLJIm#rZS\BW1R=*7/f&TB=R@?'TJ2N+?Hn,*k1!*^L;ibsRPKc7EIA)r
%o?Ic5`MP`!$kPV,L;$Z>\Q+?M&P5t>2.Xo<haY_PoZ^3l/qR@iOfmci6sL`(]#[%Rn`!DQI^#>_SO#koQ9fh(_t/#24,o^+:3cAK
%[1e@clL;Qc!ku<[!cuh2>0h@0Z\'.K6aOKBA%%\gY@S[sAe1lQI;R6N/iHujU7`(?aN-)7.L$^p4=2t3=bgilYM#3aDcAq0n[7\>
%5_5VKgNL=jk;]tAA;aoIQ*ET!+_):mP)R5R@-ttek-QO3fJm7GO3%sf0Xmlf[PDY_ZNe7nW1:Xa20R)Fk`)8l=&K$1i',qbRh>_B
%J6>#m7]<b,McSLGnSkdR*SKnD5;7FRNP_85a&g:'8'"dXE@YNlVSQ]s4SmHphN1HjYd^/3o3$qE`g^E-F?Ue&a]K9(-q[tuaDth.
%ep8D-:QfuJQ3lluC=5P76n^9XpYPCTCuIi/7C-*TX7TQV7M'A"0'*YkUe,#GTa=;Xiuc0WX"K8`lXnoC$d1kM[T,jman5+*H;*-q
%FmDrKI^d4Ae*'XiS6*PLi;ng(SC;%>VQ*eWi6g`cS5Z[ffQfYN4Q3:9U?[uo9ZTUikd=\WCDsP([`]MG0a<FZ?!H@m/(h;83X(u*
%D)buX[Lb_Z-s(<'5<,LYJ?RST^@3GEXZ"9n;-:.YLV-]G'Z?E$Ta+;(.bYuKV78B)?o3t8_aNRqQY\0=i_O0=b>5PnZLXtP,W[hT
%Eh>C7/;HT%<jioG<C?uRhZsG-Qpo+Ij#WKm@l^LI$.[W4"Y28Bl.fH@U!7-VLX?IVVDC59+p:,=at=S\)+UnSIFTjW?2-:I&(e8D
%m8Y[lQoWi&"Su+I)K<V>9!]LV,fdLA*&nV/rig9:d.#sM0F<Y@IY&0?cOqg5":74\KmOA-(k*#^K3f]+kV\6L;NS+UgMFaNXi?-8
%3:43>/D?E4?7U7TboR@U_h^GsI*rfq?6'![/D)`_/^@q93BSe*O[aKd'T;a,QioG?Us!aEgF(eNDN7X=j!e[iO(LX@M7_%>0gb60
%:j3M`[SDh:=XR<(7_q[>(T$E4oSA'PfsE*Tmr]Y=*9B[u=4m]r;@(aVHQjlbO/G&e=r6"[LOJSTiBn=trrLZ5*9tQIIICA>,A^0C
%erL4?U18$P=[8A?OC\=C*#]uAK0i):'GLe7hXgA5^W1:SSo`Z&>Ct)AG=b)&+i"/GU%/9S\3btKhHUGtgR?#,e=@h!R\H5jAi]_Z
%k$A!=Fkin>7tp`5!gXgOP%Uc"TGH?]3-(<!E&$8Yj.>O"#:g3lrl(2<:*aXMdKhpCZ[drn%P:K+Q)m8f-ff:Nf8@N7kc<?/gW:YY
%]3$)Cl#&%.<:^HtGH"7k.^V8f7Bt-XOas8[kR-2SIo;Oo>UHGB.=hV9XCB6j*f#;-E5U,L8p*O1'J7;m&'?jY@t7Tj[$t0P1&$pt
%8aOC;n!tg+VM-1gI.\;:)Z#)T#[dJeqp[IO'`HQY69/E$9FY"RMchs542b1_:7!6fjd%>q(]"27;mWdf%8=@Pn_)6h8&7WI/_f"Y
%LF!LEhS1CEXcekT"h:'*i,@W4[T'#u;opHq+p*lY.^*bRY7O=tT2/6,1erkOP8-VOki]j=fdOSU@4N+CYM8="'>#E[U=@>m`q<Sb
%./1oCF3ol;#*q`_CrV]iXVK#'j/VOem=!RGkL$SI[!C"0QRGSCl\Cr^HZ#';VUP2>MXB!tV6LNKnRU2b*Ef>--K-ej[3:W(6bbO(
%MN)FmgNQALdo_?-\T.3-;!Qc\C\/T/AC:[&!:)$V8s8Lcmk6^Z7Ycu*:S^]T0]=Rh"\#C&2q$qd57b[18CkP;r2sh[C:6CHW8ZFj
%O8CN\3#snH@^<A5iE#+1:TBme/2O]HR3XF5>I!.8C:_#XIcbMhB^P68=M/<X&38L'5ds14jF/2uCk3hhmlfj+MGQgiPHSQL4SYoC
%I[M[MHA4gb6.Sk;@r?rk-,#ZtD7!&JeLmu?7Lj(RT$91lkN.d>[LR.48I/!MaAnciA)!JLp)V2IL!8\Pe1e>k1F#-AiuoAs6BI`"
%QNm%EG=11Fh)"dF;0`6KXaN('m6L^kZ%P!]V\V3d/is956UkcJ"ne+!bfLO$CFr:ce$\>/`PfE'R\dTP7=$i.O/QAM$.C(M@+bg`
%=M>N`6nOG?QRL`]0%:M4L_ZS"EmF>M=P$DUgp?D(^ZOgs-HskE?Kb2faZ)_r2oh[?HKICXUYM_*T8-qUhQt)B_t&4iG.H*?mbtBU
%,1?7l21t+uS[.+cp:KH&*5%L$EL8d."tW(2ScZ[PiK/eK)M67IWHJLM[^h`:E]7JQ*A.>UBe-'D/fII:dT6.FCpU>DkNeAk]4sg0
%oSo>MBoX<<0(H<8)PXf*>3/US4nj%b!-^Et1*g?a(O15X>-cDY[9+DD3ljM,<k=u:OJ26IV09a]#ZI"CQBF*R6T&h!p$fJ-BUY<j
%mZj^`\S@/$$.[BVn>^7t,F7Xte1_<l\QYSTdRLM`9^%5C&ts:"85rg3Gf4:GCaGATOAuSeRFgeJ*-\LX0q_m;j)E"W>``?I)oX&!
%FYuWLi'NWDW,19AeKMUHh2QZ0GY3i4!X'%6!IL^5NMg*ml`fQDh"=[QBh/eGT>7:)4Q==0?ahui-hKi(aW`S^Tt@Fd""/n>:@NFn
%aGbD2fmp'f:TaHo4G:HGK)1BgLPq5EbR)Itm\:Nci=Ro%Yn\?#"$qp+WNW>ii74T'C=QA^\+JnRTC-WM6f.QU3K4r':bfXlQPM=@
%ni"Dq*KT:=c"GSef4,`9)Q[97V/,JoH>fbd'R-SEI1R+GYV4,3A[BB+a<Z0IWnTT00A0%-P_VN-I2jQ-08HUuC[H;0#^]H_"kKl(
%31=grjl8$lS#r,qM8^QSg$[<#\/d(q+0-VV7:aGB3(=TP8mZuoTGms)&L=TUFFY)\i=_Kg,7sWcJpaYkVVl07"Gnp331J/.NA;@*
%YYl.qb`m.5Z0bC6=3PdOKe8i2^R^[\`"nY7AiC"O(ln^^E@N_kZmpA9R3c?'MdsjIQp)0t-U/KUD;nl;nWU4]CUa+3eO-XM]R(QE
%m'&E9m%J:CloJh!rA7ab)+Us?@D%dOg<f41GJq4J,K.T>GP5IOQXk;X-rH;bQFpr(00Tq>#LB5?s)N,2N/_/pL8<5(pW!cn7UbmC
%Xj\P6WH'S@<,SHf@2aMh2fPYY!".1@J[4IggqG*M@=$pu`ekcB3*O_q5Ur^NA+bF6;L5,!D:SnrLgpd>Cc@p%UL<G25H+h8>14L.
%7CG/Cqo't?Rethbd>0AIb2q&4&"Dq/pEPQ_8nb>n@^GHnk<f;,fG*$4AY]I4D.==7du;bE"dNRZAmla0j4K/1H]@";:5Hi+/0V+]
%`_=n$?EI>QDPQ$UZ@5(Ic53ZJ<VTq@&].t`<$Ui3Y&E3k.?:4m5Yp^j]t).2j-3$FBo)XeHYu&7fM@3!5s[I1LUatELDR;K"rt'^
%nTi6j.qgFA6pJ,ffsT4N#q%[df"0i6.BH+kiOC+6&*-V;F8WW%9c;hl`-G0PIUt!4_f:4OJ818CDoA;#"[V:c\r/V(p32USEV]u`
%g4:4eV8MCH,c&)O0b/ohFH"t_d$c%76a^#+^>\1T=d!0GgbeFLX+XqP&,+VFlu-ZbhL67Aa.[a=(h)ce9\@g7,aT"Nl`2BDQD_P'
%PN38aKu:GT=9o/bRQ(^["'g96;Iq\KVXPsi$47b.cr=;&7^CQm!WX_e'WI9ZG?p/JD%m=1OU@/$nGpDK_8rDaYj6`C>gT.VGoReO
%a9I1TX5,Hd*1=*`q`5<K_*2gSRnN6_1a.M-3D"H31]R^$V/Bccg+#?Z"P.=3Nme[<M)p2k2O#U'RjMs:GW2dETEu4mM""<aaWO'p
%7,GIq+t7#?QPc:[K*`^eAsbFYX@3en-tat5*)a2Q]B/\4<;)f7nljF3W$\mM;jnZ0Kj<E.hY\88g=e;_F+"A=g=J@U?L&?oqr,f7
%fmZ2Y0Ua4-8\IpKdTRun9A2M_AK8_c.:X+,7kJHU1mJqQgK]lmCoYn6m"rW(=6rb^mYO94R#DUnc&>PrQ8'm*/7[>Z(Yq)?]3&eG
%cG]eWm6_G@<Uh$J1)r:kd>]o??UhtZfEAS@&?G/NGQe"rrBsn1ZWCc2IUWBrWf'd]gUJU&1h6,G#HY3=5:?)6'`Q^q1[o!f/.TY[
%iksDHfuE#X^,g!cCGnLeNrB.-A!fO#auJRQjCI&Z<.f^$bLgXQU6D=D]J6`9llOEjDiduYF4L$Z"6D>3#P1!u#X5W.*nEgDk$38=
%^hN*_(fqAs[K0?YH#Xh/$1>l'<<S*Pf;(Md#t]iNk:k+^ja?O\E/IQHG@.M.Xcm9o2f^m^%uWt\3c%WK<`;RWZ)@+^_>UZmc$0US
%-3YNMJg4.<iS\+4/>GqIbM%)56:^Yb6nt"*(lNr^iR'?@&oL<:)uO$*.gV7bLsa"r+lF=jH#VXR5CR=fiGUq2m',]t34qOIonY*k
%FA]B.?,iNe4W+\<8i=FAk].65HW(Uj/%,]eYed3B,-^(KY/RZh3ijOe0F`tr<3Am[b!)\nl/3JY\?[DZP](3!Q7Sl1OV57koHbGe
%\cY32(&l?nGik0_>I'<'/;E.F686ibZ4m=p0.2^ffF<>]]j+t`1UlcNBf-_b>:/[MgEub9'U?MHZ"-/VE1V+,9to2L@SPTW(iSd^
%r"*.u@GQ,J,V*G242QF'gihaokD/uu4e#p<RYM1pb^6h"Gj8b(/N9.n15\CF94<0+;+b/O8rk5.&/jP7m2=j02'^akSa<YdbMA.(
%S"??8\oir+OIR>ciQ9I9=JPp?B*E&fCHWbT![iAnf87i_>;qBq`!9m_Y;#XhVDnV(Vid.W_?b4D'J17#Mnt^lYi1dT^2'4mG-lGl
%mJlt2-2O6`g25c<<jX^l\i5[;B?=^+7]V9)WWER<k&FH9Mm<SDh]25cGcX1ao+8WB;-^[J;t14jkd;>]6>5o[CDB"YTY-Fnfh1OA
%b+:^>lBILc$8mNU4\sOlj.$/G[@sC;nBnlqq`8jJPL+G#04l_);(+gM`lWbjpsaWH-1L2dVQ;SX:59$K-1IB_pC#ET_S)W-4gi."
%l!$16j\Y"ee.b-Vb$4\Bm6^`u'OSi7&)*,BN:YF1[iP1tJ<3tXQJk-.J2Z,@K[b%tiSrqr(d30;Pl_%d&Te@+U'`Q3X&GLi+*Hi"
%Lom5=a;S>^hApnToE/.')o8W]`t.gAF9'auFoRuK7*?2c&j1i!A;s='2af+cAmjgB5]g_*$f,,Oq"haREpNc!"4$i0nhnp]3Widq
%4Pq:3*0AZFgUq?eA1P>Kn?U`c.'IGc=_)?jMh!KoK?I\(jpt[pc(>]'heI+Op0F6BG@F,*&D`kgj:b<RG=d..N,!^U'TVGY)dY?,
%+p-\SA&31q_),."\'.BhV@h:<Wp@Ub%j"J\'X\mT<L<U,Q)s6XJg%WVFXbJ:XX'D:p$c/8<X=scLV=,),[2sJBbkgX5l<`K\nDZ+
%pU!oC"?<O64W^ggBP]#V92F>eg3J;R%rYG<1r*?Kj!!pR(e1O#TNkSpA>'WjNE-d1M&$AOd0>%[4_08WMP:Q$Z0oZcd)cBcm5jMB
%ZRu3gROtd5m@Pc$$gPt:HI`6,Z=8aQAn>1:UggGhg2:&&-'ke?Pc?$F/[aZ+Zb=bRC@1n:J(gLfgRm<R36YQ:E2Yr\4/XEjjf+fp
%bC_2+2Z;Bh)hO<jaArWX"=A"u93"e9M]9rT`-HE&kn)Bu_h(7lZ?`*aQ^X.)q5^3E\fGllSK82ee:mNP;p3Dneoa%#b,*f'>q'#Z
%[4>mrTu0a7q[LN^-Tl>'q]Z1k2>ECe9jgIdN,;A3VRW.RjgD3oo3<?Mc:%QPU"h@7"@H'-%Jc[AY<54,s11-qV0MmNS$OgjD=b'T
%or`2]Uqi9ra>q1E[<YN&_>t_#*AiOffm$7;OqtLNTMFF7pDErXoO\1b'+UC1.[%BH%"[DMYm#5ZTOOf<[dC4J'r)[*;^V-Wf#pNj
%Fo%W?0E4,FFCf'M2Cb8ReX*Rs5(tc?Yh`pEet=+&bK3G+VJQZen4kS2DIsuu9;@Ro;fkOaQ@o,UV@cUldS_*-q9-0b!A<-DKL>iR
%27)MNQ>Nb@I5IuG*3)uWeiQH1XpYJa&S5]6[=2t7"h90d?=7P?.=]Xt9fHVYchiteri8YRjG*u#YVsr9ju]o46d(e->cq#Kh)4be
%*O/;&NC3D#@,cmE6T*4Yir(dP?oW7C1+s(p7\dR.gKgaYd0T$7a=e4e?(:e/``Al!_[$+FFjh;aRN*6=(Gj#oSI3P![oQBAQcJ;4
%5jn"06AOg-^#iK^gXV!':eEt0m;10Koe,!FH,V^dB)e=uPk.u62p`B-0>NRd5SL'`&i.lbh%)<M-C1@K#N"*VG?rGUm^fjT^mE(]
%]l:X1\[O7&q(nr7dOT2/Q[>83]<;_)<EEI1rBp8lc6%Gc1f*P<dPEj]MB-2.'m!'.>`OKH=lJ<Uo0OHUNl9ns=b*@<<G-hDE\0O>
%&4*b_HK$n]j:>Wncr%G[k/Mut\76=U/"4!]Ph(\cirpTW?tMA6U78QL^3fe!-hGVG]cj>5/jdl@^)`h@;J4KcC40IH7rV!PRjbZR
%.cjeD-8%:6>^c//6cc9c)3jqiABHsR@ThBE(&7'q_n1mM]Z:mBd>V-8e"<>9<Nabe(tE<0I$kZ#WL"WdLJWFdXBrLp9rCk[TJbW,
%NH'c3=cnkL(P910M(\NQ!3hau&6-%b7m@$s3^far"j';?C$qJbI-5PlN<]?O4VJsObS/%=\ktXZ-diMrq9aD9..-^9LuF\e!Uf"b
%BZd^mjtGe&^^L`LkjmfKH?sh]??!?$7XB;kEs>_9[F)lZOrPmHl-DW;nEKh"VLBWR$UYmE7]U2<gON%i]gk.7-LtA<6jbJpKo!dE
%-.1j57h8@5QkRG![L25Kdm`EU1d,9V+H"/9l65rp6mk;p&55NdYS*`;E3@nE$Y&8G_Y[C&^<Tfj\[`>5f2m.7VRU-VXa]d$T4;b'
%el0,MgTXG[?R2'<l^HRh=0!^mm6TIlht>cRo'W%LV%sZjCCeZ*_p-P%9SJQifdquCM,:":5D8d#D;#@f+B&=cpXYn//6G6Jo!W@]
%^QG7o'/FZAdH3%K%M&g?hL#E\<)'0m?%CP7(Mc3iTbScMhKJHVP1;BfSOW7WXOT96AR>DE(])8lVVcA[me#_d57!bSQ1ZXAdZjLl
%lS?3*HT,#+s3e*H(t@)O8b?ns<!=5B<o#hkGU@]Y6Jm2N!XkI#o%IKQ?WejiS'mtqWr9.eLchOYcK?g-NW!*n@t$8Vd?`XjlklU9
%=fZAslf?WK-J/)2-%!8[YB2AYpYYp,o]kW3\0&)>:"e:SYg4US?")m-M>L'B\Eim5%j1RX%l&#%j8+O\qTnhaY)VblG<^QV_onCi
%n=+q'mLS4TpE.-Hj'&A\nK7c"QgaqIrJU.DoHt^UrP,LbHLZb4^AlA`s89e/0E1Nlrquf#n>#"K^\Q.Crp,(1a+*maT"?i=~>
%AI9_PrivateDataEnd
